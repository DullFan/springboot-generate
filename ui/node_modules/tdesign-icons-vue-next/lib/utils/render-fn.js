'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-b9c38049.js');
var vue = require('vue');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function camel2Kebab(camelString) {
  var covertArr = ["fillOpacity", "fillRule", "clipRule"];
  if (covertArr.includes(camelString)) {
    return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase();
  }
  return camelString;
}
function renderFn(node, props) {
  var kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {
    result[camel2Kebab(key)] = node.attrs[key];
    return result;
  }, {});
  return vue.h(node.tag, _objectSpread(_objectSpread({}, kebabAttrs), props), (node.children || []).map(child => renderFn(child, {})));
}

exports.default = renderFn;
//# sourceMappingURL=render-fn.js.map
