'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-b9c38049.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12 4a3 3 0 00-3 3c0 1.24.78 2.5 1.74 3.54.45.5.91.91 1.26 1.2.35-.29.8-.7 1.26-1.2C14.22 9.5 15 8.24 15 7a3 3 0 00-3-3zm0 10.21l-.57-.39h-.02l-.04-.04a8.7 8.7 0 01-.63-.49c-.4-.33-.94-.8-1.48-1.4C8.22 10.75 7 9.01 7 7a5 5 0 0110 0c0 2.01-1.22 3.75-2.26 4.9a14.58 14.58 0 01-2.11 1.88l-.04.03-.02.01-.57.4zm0-6.96a.25.25 0 100-.5.25.25 0 000 .5zM10.25 7a1.75 1.75 0 113.5 0 1.75 1.75 0 01-3.5 0zM2 10h5v2H4v6.43l4.44-4.84 1.47 1.35L5.27 20h9.03l-2.71-3.1 1.5-1.31.9 1.01 4.6-4.6H17v-2h5v12H2V10zm18 3.41l-4.7 4.7L16.95 20H20v-6.59z"
    }
  }]
};
var mapInformation = vue.defineComponent({
  name: "MapInformationIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps['default'](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-map-information", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn['default'](element, finalProps.value);
  }
});

exports.default = mapInformation;
//# sourceMappingURL=map-information.js.map
