import { _ as _defineProperty } from '../_chunks/dep-d5259624.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M1 2h8c1.2 0 2.27.52 3 1.35A3.99 3.99 0 0115 2h8v19h-1c-2.94 0-5.14.25-6.59.49a20.76 20.76 0 00-2.08.45h-.01l-.16.06h-2.32l-.15-.05h-.02a5.53 5.53 0 00-.47-.14c-.35-.08-.9-.2-1.61-.32A40.34 40.34 0 002 21H1V2zm2 2v15c2.56.06 4.54.28 5.91.51a22.78 22.78 0 012.09.45V6a2 2 0 00-2-2H3zm10 2v13.96l.32-.09c.4-.1.99-.23 1.77-.36a40.8 40.8 0 015.91-.5V4h-6a2 2 0 00-2 2zm2 2h4v2h-4V8zm0 3h4v2h-4v-2z"
    }
  }]
};
var bookOpen = defineComponent({
  name: "BookOpenIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-book-open", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default bookOpen;
//# sourceMappingURL=book-open.js.map
