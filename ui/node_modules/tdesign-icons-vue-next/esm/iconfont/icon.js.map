{"version":3,"file":"icon.js","sources":["../../src/iconfont/icon.tsx"],"sourcesContent":["import {\n  computed, defineComponent, h, onMounted,\n} from 'vue';\n\nimport props from './props/props';\nimport useSizeProps from '../utils/use-size-props';\nimport ConfigContext from '../utils/config-context';\nimport { checkLinkAndLoad } from '../utils/check-url-and-load';\n\nimport '../style/css';\n\nconst { classPrefix } = ConfigContext;\n\nconst CDN_ICONFONT_URL = 'https://tdesign.gtimg.com/icon/0.2.0/fonts/index.css';\n\nexport const IconFont = defineComponent({\n  name: 'IconFont',\n  props,\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className: sizeClassName, style: sizeStyle } = useSizeProps(propsSize);\n\n    const name = computed(() => props.name || '');\n\n    const isBuiltinIcon = computed(() => props.url && /^t-icon-(\\w|-)+$/.test(props.name)); // 判断是否是渲染内置图标\n\n    const finalUrl = computed(() => {\n      let url = [];\n      url = props.url instanceof Array ? props.url.concat() : [props.url];\n      if (props.loadDefaultIcons) url.push(CDN_ICONFONT_URL);\n      return url;\n    });\n\n    const classNames = computed(() => [\n      {\n        [name.value]: props.url,\n        [`${classPrefix}-icon`]: !props.url || isBuiltinIcon.value,\n        [`${classPrefix}-icon-${name.value}`]: !props.url,\n      },\n      sizeClassName.value,\n    ]);\n\n    const finalStyle = computed(() => ({ ...sizeStyle.value, ...(attrs.style as Styles) }));\n\n    onMounted(() => {\n      Array.from(new Set(finalUrl.value as string[])).forEach((url: string) => {\n        checkLinkAndLoad(url, `${classPrefix}-iconfont-stylesheet--unique-class`);\n      });\n    });\n\n    const finalProps = computed(() => ({\n      class: classNames.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n\n    return () => h(props.tag || 'i', finalProps.value);\n  },\n});\n\nexport default IconFont;\n"],"names":["classPrefix","ConfigContext","CDN_ICONFONT_URL","IconFont","defineComponent","name","props","setup","props2","attrs","propsSize","computed","size","className","sizeClassName","style","sizeStyle","useSizeProps","isBuiltinIcon","url","test","finalUrl","Array","concat","loadDefaultIcons","push","classNames","value","finalStyle","_objectSpread","from","Set","forEach","finalProps","class","onClick","e","_props2$onClick","call","h","tag"],"mappings":";;;;;;;;;;;AAWA,IAAM;EAAEA;IAAgBC;AAExB,IAAMC,mBAAmB;IAEZC,WAAWC,gBAAgB;EACtCC,MAAM;EACNC;EACAC,MAAMC,cAAkB;IAAA,IAAX;MAAEC;;QACPC,YAAYC,SAAS,MAAMH,OAAMI;QAEjC;MAAEC,WAAWC;MAAeC,OAAOC;QAAcC,aAAaP;QAE9DL,OAAOM,SAAS,MAAMH,OAAMH,QAAQ;QAEpCa,gBAAgBP,SAAS,MAAMH,OAAMW,OAAO,mBAAmBC,KAAKZ,OAAMH;QAE1EgB,WAAWV,SAAS,MAAM;UAC1BQ,MAAM;YACJX,OAAMW,eAAeG,QAAQd,OAAMW,IAAII,WAAW,CAACf,OAAMW;UAC3DX,OAAMgB,sBAAsBC,KAAKvB;aAC9BiB;;QAGHO,aAAaf,SAAS,MAAM,CAChC;OACGN,KAAKsB,QAAQnB,OAAMW;iBAChBnB,wBAAqB,CAACQ,OAAMW,OAAOD,cAAcS;iBACjD3B,8BAAoBK,KAAKsB,SAAU,CAACnB,OAAMW;OAEhDL,cAAca;QAGVC,aAAajB,SAAS,MAAAkB,aAAA,CAAAA,aAAA,KAAYb,UAAUW,QAAWlB,MAAMM;cAEzD,MAAM;YACRe,KAAK,IAAIC,IAAIV,SAASM,QAAoBK,QAASb,OAAgB;yBACtDA,eAAQnB;;;QAIvBiC,aAAatB,SAAS;MAC1BuB,OAAOR,WAAWC;MAClBZ,OAAOa,WAAWD;MAClBQ,SAAUC;;kCAAiB5B,OAAM2B,2DAANE,eAAA,CAAAC,IAAA,CAAA9B,QAAgB;UAAE4B;;;;WAGxC,MAAMG,EAAE/B,OAAMgC,OAAO,KAAKP,WAAWN;;AAAA;;;;;"}