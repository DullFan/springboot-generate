{"version":3,"file":"aside.js","sources":["../../src/layout/aside.tsx"],"sourcesContent":["import { defineComponent, onMounted, onUnmounted, inject } from 'vue';\nimport props from './aside-props';\nimport { LayoutProvideType } from './layout';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nexport default defineComponent({\n  name: 'TAside',\n\n  props,\n\n  setup(props) {\n    const { hasSide } = inject<LayoutProvideType>('layout', Object.create(null));\n    const COMPONENT_NAME = usePrefixClass('layout__sider');\n    const renderTNodeJSX = useTNodeJSX();\n    if (!hasSide) return;\n\n    onMounted(() => {\n      hasSide.value = true;\n    });\n\n    onUnmounted(() => {\n      hasSide.value = false;\n    });\n\n    return () => {\n      const styles = props.width ? { width: props.width } : {};\n      return (\n        <aside class={COMPONENT_NAME.value} style={styles}>\n          {renderTNodeJSX('default')}\n        </aside>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","_inject","inject","Object","create","hasSide","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","onMounted","value","onUnmounted","styles","width","_createVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,aAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,QAAA;AAENC,EAAAA,KAAA,EAAAA,KAAA;EAEAC,qBAAMD,CAAAA,MAAO,EAAA;AACL,IAAA,IAAAE,OAAA,GAAcC,MAAA,CAA0B,yBAAiBC,MAAA,CAAAC,MAAA,CAAO,IAAI,CAAC,CAAA;MAAnEC,kBAAAA;AACF,IAAA,IAAAC,cAAA,GAAiBC,eAAe,eAAe,CAAA,CAAA;AACrD,IAAA,IAAMC,iBAAiBC,WAAY,EAAA,CAAA;IACnC,IAAI,CAACJ,OAAA,EAAS,OAAA;AAEdK,IAAAA,SAAA,CAAU,YAAM;MACdL,OAAA,CAAQM,KAAQ,GAAA,IAAA,CAAA;AAClB,KAAC,CAAA,CAAA;AAEDC,IAAAA,WAAA,CAAY,YAAM;MAChBP,OAAA,CAAQM,KAAQ,GAAA,KAAA,CAAA;AAClB,KAAC,CAAA,CAAA;AAED,IAAA,OAAO,YAAM;AACL,MAAA,IAAAE,MAAA,GAASd,OAAMe,KAAQ,GAAA;QAAEA,OAAOf,MAAM,CAAAe,KAAAA;UAAU,EAAC,CAAA;AAErD,MAAA,OAAAC,WAAA,CAAA,OAAA,EAAA;QAAA,OAAcT,EAAAA,cAAe,CAAAK,KAAA;QAAA,OAAcE,EAAAA,MAAAA;OACxCL,EAAAA,CAAAA,cAAA,CAAe,SAAS,CAAA,CAAA,CAAA,CAAA;KAG/B,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}