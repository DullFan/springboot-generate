declare const _default: import("vue").DefineComponent<{
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    download: {
        type: import("vue").PropType<string | boolean>;
    };
    hover: {
        type: import("vue").PropType<"color" | "underline">;
        default: "color" | "underline";
        validator(val: "color" | "underline"): boolean;
    };
    href: {
        type: StringConstructor;
        default: string;
    };
    prefixIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    suffixIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    target: {
        type: StringConstructor;
        default: string;
    };
    theme: {
        type: import("vue").PropType<"default" | "success" | "primary" | "warning" | "danger">;
        default: "default" | "success" | "primary" | "warning" | "danger";
        validator(val: "default" | "success" | "primary" | "warning" | "danger"): boolean;
    };
    underline: BooleanConstructor;
    onClick: import("vue").PropType<(e: MouseEvent) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    download: {
        type: import("vue").PropType<string | boolean>;
    };
    hover: {
        type: import("vue").PropType<"color" | "underline">;
        default: "color" | "underline";
        validator(val: "color" | "underline"): boolean;
    };
    href: {
        type: StringConstructor;
        default: string;
    };
    prefixIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    suffixIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    target: {
        type: StringConstructor;
        default: string;
    };
    theme: {
        type: import("vue").PropType<"default" | "success" | "primary" | "warning" | "danger">;
        default: "default" | "success" | "primary" | "warning" | "danger";
        validator(val: "default" | "success" | "primary" | "warning" | "danger"): boolean;
    };
    underline: BooleanConstructor;
    onClick: import("vue").PropType<(e: MouseEvent) => void>;
}>> & {
    onClick?: (...args: any[]) => any;
}, {
    target: string;
    disabled: boolean;
    size: import("..").SizeEnum;
    underline: boolean;
    href: string;
    theme: "default" | "success" | "primary" | "warning" | "danger";
    hover: "color" | "underline";
}, {}>;
export default _default;
