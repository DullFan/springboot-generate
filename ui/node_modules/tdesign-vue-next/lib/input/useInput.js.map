{"version":3,"file":"useInput.js","sources":["../../src/input/useInput.ts"],"sourcesContent":["import { ref, computed, watch, nextTick, toRefs, inject } from 'vue';\nimport { InputValue, TdInputProps } from './type';\nimport { FormItemInjectionKey } from '../form/const';\nimport useVModel from '../hooks/useVModel';\nimport { useFormDisabled } from '../form/hooks';\nimport useLengthLimit from './useLengthLimit';\n\nexport function getOutputValue(val: InputValue, type: TdInputProps['type']) {\n  if (type === 'number') {\n    return val || val === 0 ? Number(val) : undefined;\n  }\n  return val;\n}\n\nexport interface ExtendsTdInputProps extends TdInputProps {\n  showInput: boolean;\n  keepWrapperWidth: boolean;\n}\n\nexport default function useInput(props: ExtendsTdInputProps, expose: (exposed: Record<string, any>) => void) {\n  const { value, modelValue } = toRefs(props);\n  const inputValue = ref<InputValue>();\n  const isComposition = ref(false);\n  const compositionValue = ref<InputValue>();\n  const clearIconRef = ref(null);\n  const innerClickElement = ref();\n  const disabled = useFormDisabled();\n  const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n  const isHover = ref(false);\n  const focused = ref(false);\n  const renderType = ref(props.type);\n  const inputRef = ref<HTMLInputElement>(null);\n\n  const limitParams = computed(() => ({\n    value: [undefined, null].includes(innerValue.value) ? undefined : String(innerValue.value),\n    status: props.status,\n    maxlength: Number(props.maxlength),\n    maxcharacter: props.maxcharacter,\n    allowInputOverMax: props.allowInputOverMax,\n    onValidate: props.onValidate,\n  }));\n  const { limitNumber, getValueByLimitNumber, tStatus } = useLengthLimit(limitParams);\n\n  const showClear = computed(() => {\n    return (\n      ((innerValue.value && !disabled.value && props.clearable && !props.readonly) || props.showClearIconOnEmpty) &&\n      isHover.value\n    );\n  });\n\n  const focus = () => {\n    focused.value = true;\n    inputRef.value?.focus();\n  };\n\n  const blur = () => {\n    focused.value = false;\n    inputRef.value?.blur();\n  };\n\n  const emitFocus = (e: FocusEvent) => {\n    if (isHover.value && focused.value) return;\n    inputValue.value = innerValue.value;\n    if (props.disabled) return;\n    focused.value = true;\n    props.onFocus?.(innerValue.value, { e });\n  };\n\n  const emitClear = ({ e }: { e: MouseEvent }) => {\n    const val = props.type === 'number' ? undefined : '';\n    setInnerValue(val, { e, trigger: 'clear' });\n    props.onClear?.({ e });\n  };\n\n  const onClearIconMousedown = (e: MouseEvent) => {\n    innerClickElement.value = e.target;\n  };\n\n  const emitPassword = () => {\n    const toggleType = renderType.value === 'password' ? 'text' : 'password';\n    renderType.value = toggleType;\n  };\n\n  const setInputElValue = (v: InputValue = '') => {\n    const inputEl = inputRef.value as HTMLInputElement;\n    if (!inputEl) return;\n    const sV = String(v);\n    if (!inputEl.value) {\n      return;\n    }\n    if (inputEl.value !== sV) {\n      inputEl.value = sV;\n    }\n  };\n  const inputValueChangeHandle = (e: InputEvent | CompositionEvent) => {\n    const { target } = e;\n    let val = (target as HTMLInputElement).value;\n    // over length: allow delete; not add\n    if (props.type !== 'number' && typeof innerValue.value === 'string' && val.length > innerValue.value?.length) {\n      val = getValueByLimitNumber(val);\n    }\n    setInnerValue(getOutputValue(val, props.type), { e, trigger: 'input' });\n    // 受控\n    nextTick(() => {\n      setInputElValue(innerValue.value);\n    });\n  };\n\n  const handleInput = (e: InputEvent) => {\n    const checkInputType = e.inputType && e.inputType === 'insertCompositionText';\n    const {\n      currentTarget: { value: val },\n    }: any = e;\n    if (checkInputType || isComposition.value) {\n      compositionValue.value = val;\n      return;\n    }\n    inputValueChangeHandle(e);\n  };\n\n  const isClearIcon = () => {\n    let tmp = innerClickElement.value;\n    if (!tmp || !tmp.tagName || !clearIconRef.value?.$el || !['path', 'svg'].includes(tmp.tagName)) return false;\n    while (tmp) {\n      if (clearIconRef.value?.$el === tmp) {\n        return true;\n      }\n      tmp = tmp.parentNode;\n    }\n    return false;\n  };\n\n  const formItem = inject(FormItemInjectionKey, undefined);\n  const formatAndEmitBlur = (e: FocusEvent) => {\n    if (!isClearIcon()) {\n      if (props.format) {\n        inputValue.value =\n          typeof innerValue.value === 'number' || props.type === 'number'\n            ? innerValue.value\n            : props.format(innerValue.value);\n      }\n      focused.value = false;\n      props.onBlur?.(innerValue.value, { e });\n      formItem?.handleBlur();\n    } else {\n      focus();\n    }\n  };\n\n  const onHandleCompositionend = (e: CompositionEvent) => {\n    isComposition.value = false;\n    compositionValue.value = '';\n    inputValueChangeHandle(e);\n    props.onCompositionend?.(String(innerValue.value), { e });\n  };\n\n  const onHandleCompositionstart = (e: CompositionEvent) => {\n    isComposition.value = true;\n    const {\n      currentTarget: { value },\n    }: any = e;\n    compositionValue.value = value;\n    props.onCompositionstart?.(String(innerValue.value), { e });\n  };\n\n  const onRootClick = (e: MouseEvent) => {\n    inputRef.value?.focus();\n    props.onClick?.({ e });\n  };\n\n  watch(\n    () => props.autofocus,\n    (value) => {\n      if (value === true) {\n        nextTick(() => {\n          inputRef.value?.focus();\n        });\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(\n    innerValue,\n    (val, oldVal) => {\n      const isNumberType = props.type === 'number';\n      // 初始化时，如果有 format 函数，需要对 value 进行格式化\n      if (oldVal === undefined && props.format && typeof val !== 'number' && !isNumberType) {\n        inputValue.value = props.format(val);\n      } else {\n        inputValue.value = val;\n      }\n      // limit props value\n      const newVal = typeof val === 'number' ? val : getValueByLimitNumber(val);\n      if (newVal !== val && !isNumberType) {\n        setInnerValue(newVal, { trigger: 'initial' });\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(\n    () => props.type,\n    (v) => {\n      renderType.value = v;\n    },\n    { immediate: true },\n  );\n\n  expose({\n    inputRef,\n    focus,\n    blur,\n  });\n\n  return {\n    isHover,\n    focused,\n    renderType,\n    showClear,\n    inputRef,\n    clearIconRef,\n    inputValue,\n    isComposition,\n    compositionValue,\n    limitNumber,\n    tStatus,\n    emitFocus,\n    formatAndEmitBlur,\n    onHandleCompositionend,\n    onHandleCompositionstart,\n    onRootClick,\n    emitPassword,\n    handleInput,\n    emitClear,\n    onClearIconMousedown,\n    innerValue,\n  };\n}\n"],"names":["getOutputValue","val","type","Number","useInput","props","expose","_toRefs","toRefs","value","modelValue","inputValue","ref","isComposition","compositionValue","clearIconRef","innerClickElement","disabled","useFormDisabled","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","innerValue","setInnerValue","isHover","focused","renderType","inputRef","limitParams","computed","includes","String","status","maxlength","maxcharacter","allowInputOverMax","onValidate","_useLengthLimit","useLengthLimit","limitNumber","getValueByLimitNumber","tStatus","showClear","clearable","readonly","showClearIconOnEmpty","focus","_inputRef$value","blur","_inputRef$value2","emitFocus","e","_props$onFocus","onFocus","call","emitClear","_ref","_props$onClear","trigger","onClear","onClearIconMousedown","target","emitPassword","toggleType","setInputElValue","v","arguments","length","undefined","inputEl","sV","inputValueChangeHandle","_innerValue$value","nextTick","handleInput","checkInputType","inputType","currentTarget","isClearIcon","_clearIconRef$value","tmp","tagName","$el","_clearIconRef$value2","parentNode","formItem","inject","FormItemInjectionKey","formatAndEmitBlur","_props$onBlur","format","onBlur","handleBlur","onHandleCompositionend","_props$onCompositione","onCompositionend","onHandleCompositionstart","_props$onCompositions","onCompositionstart","onRootClick","_inputRef$value3","_props$onClick","onClick","watch","autofocus","_inputRef$value4","immediate","oldVal","isNumberType","newVal"],"mappings":"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"}