{"version":3,"file":"useInputEventHandler.js","sources":["../../src/input/useInputEventHandler.ts"],"sourcesContent":["import { Ref } from 'vue';\nimport { TdInputProps } from './type';\nimport { getOutputValue } from './useInput';\n\nexport default function useInputEventHandler(props: TdInputProps, isHover: Ref<Boolean>) {\n  const handleKeydown = (e: KeyboardEvent) => {\n    if (props.disabled) return;\n    const { code } = e;\n    const tmpValue = getOutputValue((e.currentTarget as HTMLInputElement).value, props.type);\n    if (/enter/i.test(code) || /enter/i.test(e.key)) {\n      props.onEnter?.(tmpValue, { e });\n    } else {\n      props.onKeydown?.(tmpValue, { e });\n    }\n  };\n\n  const handleKeyUp = (e: KeyboardEvent) => {\n    if (props.disabled) return;\n    const tmpValue = getOutputValue((e.currentTarget as HTMLInputElement).value, props.type);\n    props.onKeyup?.(tmpValue, { e });\n  };\n\n  const handleKeypress = (e: KeyboardEvent) => {\n    if (props.disabled) return;\n    const tmpValue = getOutputValue((e.currentTarget as HTMLInputElement).value, props.type);\n    props.onKeypress?.(tmpValue, { e });\n  };\n\n  const onHandlePaste = (e: ClipboardEvent) => {\n    if (props.disabled) return;\n    // @ts-ignore\n    const clipData = e.clipboardData || window.clipboardData;\n    props.onPaste?.({ e, pasteValue: clipData?.getData('text/plain') });\n  };\n\n  const mouseEvent = (v: boolean) => (isHover.value = v);\n\n  const onHandleMousewheel = (e: WheelEvent) => props.onWheel?.({ e });\n\n  const onInputMouseenter = (e: MouseEvent) => {\n    mouseEvent(true);\n    props.onMouseenter?.({ e });\n  };\n\n  const onInputMouseleave = (e: MouseEvent) => {\n    mouseEvent(false);\n    props.onMouseleave?.({ e });\n  };\n\n  return {\n    isHover,\n    handleKeydown,\n    handleKeyUp,\n    handleKeypress,\n    onHandlePaste,\n    onHandleMousewheel,\n    onInputMouseenter,\n    onInputMouseleave,\n  };\n}\n"],"names":["useInputEventHandler","props","isHover","handleKeydown","e","disabled","code","tmpValue","getOutputValue","currentTarget","value","type","test","key","_props$onEnter","onEnter","call","_props$onKeydown","onKeydown","handleKeyUp","_props$onKeyup","onKeyup","handleKeypress","_props$onKeypress","onKeypress","onHandlePaste","_props$onPaste","clipData","clipboardData","window","onPaste","pasteValue","getData","mouseEvent","v","onHandleMousewheel","_props$onWheel","onWheel","onInputMouseenter","_props$onMouseenter","onMouseenter","onInputMouseleave","_props$onMouseleave","onMouseleave"],"mappings":"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"}