declare const _default: import("vue").DefineComponent<{
    disabled: {
        type: import("vue").PropType<boolean | import("./type").JumperDisabledConfig>;
    };
    layout: {
        type: import("vue").PropType<"horizontal" | "vertical">;
        default: "horizontal" | "vertical";
        validator(val: "horizontal" | "vertical"): boolean;
    };
    showCurrent: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    tips: {
        type: import("vue").PropType<boolean | import("./type").JumperTipsConfig>;
    };
    variant: {
        type: import("vue").PropType<"outline" | "text">;
        default: "outline" | "text";
        validator(val: "outline" | "text"): boolean;
    };
    onChange: import("vue").PropType<(context: {
        e: MouseEvent;
        trigger: import("./type").JumperTrigger;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: import("vue").PropType<boolean | import("./type").JumperDisabledConfig>;
    };
    layout: {
        type: import("vue").PropType<"horizontal" | "vertical">;
        default: "horizontal" | "vertical";
        validator(val: "horizontal" | "vertical"): boolean;
    };
    showCurrent: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    tips: {
        type: import("vue").PropType<boolean | import("./type").JumperTipsConfig>;
    };
    variant: {
        type: import("vue").PropType<"outline" | "text">;
        default: "outline" | "text";
        validator(val: "outline" | "text"): boolean;
    };
    onChange: import("vue").PropType<(context: {
        e: MouseEvent;
        trigger: import("./type").JumperTrigger;
    }) => void>;
}>>, {
    size: import("..").SizeEnum;
    layout: "horizontal" | "vertical";
    variant: "outline" | "text";
    showCurrent: boolean;
}, {}>;
export default _default;
