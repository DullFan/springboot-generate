{"version":3,"file":"statistic.js","sources":["../../src/statistic/statistic.tsx"],"sourcesContent":["import { defineComponent, computed, ref, onMounted, watch, toRefs } from 'vue';\nimport {\n  ArrowTriangleDownFilledIcon as TDArrowTriangleDownFilledIcon,\n  ArrowTriangleUpFilledIcon as TDArrowTriangleUpFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport isNumber from 'lodash/isNumber';\nimport isFunction from 'lodash/isFunction';\nimport props from './props';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport Skeleton from '../skeleton';\nimport Tween from '../_common/js/statistic/tween';\nimport { COLOR_MAP } from '../_common/js/statistic/utils';\n\nexport default defineComponent({\n  name: 'TStatistic',\n\n  props,\n\n  setup(props, { expose }) {\n    const COMPONENT_NAME = usePrefixClass('statistic');\n    const renderTNodeJSX = useTNodeJSX();\n    const { ArrowTriangleUpFilledIcon, ArrowTriangleDownFilledIcon } = useGlobalIcon({\n      ArrowTriangleUpFilledIcon: TDArrowTriangleUpFilledIcon,\n      ArrowTriangleDownFilledIcon: TDArrowTriangleDownFilledIcon,\n    });\n    const trendIcons = {\n      increase: <ArrowTriangleUpFilledIcon />,\n      decrease: <ArrowTriangleDownFilledIcon />,\n    };\n    const numberValue = computed(() => (isNumber(props.value) ? props.value : 0));\n    const innerValue = ref(props.animation?.valueFrom ?? props.value);\n    const innerDecimalPlaces = computed(\n      () => props.decimalPlaces ?? numberValue.value.toString().split('.')[1]?.length ?? 0,\n    );\n\n    const tween = ref<Tween>();\n    const { value } = toRefs(props);\n\n    const start = (from: number = props.animation?.valueFrom ?? 0, to: number = numberValue.value) => {\n      if (from !== to) {\n        tween.value = new Tween({\n          from: {\n            value: from,\n          },\n          to: {\n            value: to,\n          },\n          duration: props.animation.duration,\n          onUpdate: (keys) => {\n            innerValue.value = Number(keys.value.toFixed(innerDecimalPlaces.value));\n          },\n          onFinish: () => {\n            innerValue.value = to;\n          },\n        });\n        tween.value?.start();\n      }\n    };\n\n    const formatValue = computed(() => {\n      let formatValue: number | undefined | string = innerValue.value;\n      const { decimalPlaces, separator } = props;\n\n      if (isFunction(props.format)) {\n        return props.format(formatValue);\n      }\n      const options = {\n        minimumFractionDigits: decimalPlaces || 0,\n        maximumFractionDigits: decimalPlaces || 20,\n        useGrouping: !!separator,\n      };\n      // replace的替换的方案仅能应对大部分地区\n      formatValue = formatValue.toLocaleString(undefined, options).replace(/,|，/g, separator);\n\n      return formatValue;\n    });\n\n    const contentStyle = computed(() => {\n      const { color } = props;\n      return {\n        color: COLOR_MAP[color] || color,\n      };\n    });\n\n    watch(\n      () => props.animationStart,\n      (value) => {\n        if (props.animation && value && !tween.value) {\n          start();\n        }\n      },\n    );\n    watch(value, (value) => {\n      if (tween.value) {\n        (tween.value as any)?.stop();\n        tween.value = null;\n      }\n      innerValue.value = value;\n      if (props.animationStart && props.animation) {\n        start();\n      }\n    });\n\n    onMounted(() => props.animation && props.animationStart && start());\n\n    expose({ start });\n\n    return () => {\n      const trendIcon = props.trend ? trendIcons[props.trend] : null;\n      const prefix = renderTNodeJSX('prefix') || (trendIcon && props.trendPlacement !== 'right' ? trendIcon : null);\n      const suffix = renderTNodeJSX('suffix') || (trendIcon && props.trendPlacement === 'right' ? trendIcon : null);\n      const title = renderTNodeJSX('title');\n      const unit = renderTNodeJSX('unit');\n      const extra = renderTNodeJSX('extra');\n\n      return (\n        <div class={COMPONENT_NAME.value}>\n          {title && <div class={`${COMPONENT_NAME.value}-title`}>{title}</div>}\n          <Skeleton animation=\"gradient\" theme=\"text\" loading={!!props.loading}>\n            <div class={`${COMPONENT_NAME.value}-content`} style={contentStyle.value}>\n              {prefix && <span class={`${COMPONENT_NAME.value}-content-prefix`}>{prefix}</span>}\n              <span class={`${COMPONENT_NAME.value}-content-value`}>{formatValue.value}</span>\n              {unit && <span class={`${COMPONENT_NAME.value}-content-unit`}>{unit}</span>}\n              {suffix && <span class={`${COMPONENT_NAME.value}-content-suffix`}>{suffix}</span>}\n            </div>\n          </Skeleton>\n          {extra && <div class={`${COMPONENT_NAME.value}-extra`}>{extra}</div>}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","_props2$animation$val","_props2$animation","expose","_ref","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","_useGlobalIcon","useGlobalIcon","ArrowTriangleUpFilledIcon","TDArrowTriangleUpFilledIcon","ArrowTriangleDownFilledIcon","TDArrowTriangleDownFilledIcon","trendIcons","increase","_createVNode","decrease","numberValue","computed","isNumber","value","innerValue","ref","animation","valueFrom","innerDecimalPlaces","_ref2","_props2$decimalPlaces","_numberValue$value$to","decimalPlaces","toString","split","length","tween","_toRefs","toRefs","start","_props2$animation$val2","_props2$animation2","from","to","arguments","undefined","_tween$value","Tween","duration","onUpdate","keys","Number","toFixed","onFinish","formatValue","separator","isFunction","format","options","minimumFractionDigits","maximumFractionDigits","useGrouping","toLocaleString","replace","contentStyle","color","COLOR_MAP","watch","animationStart","_tween$value2","stop","onMounted","trendIcon","trend","prefix","trendPlacement","suffix","title","unit","extra","concat","Skeleton","loading","_default"],"mappings":"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"}