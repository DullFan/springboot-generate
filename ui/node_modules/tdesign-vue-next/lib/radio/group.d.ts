import { RadioOption } from './type';
declare const _default: import("vue").DefineComponent<{
    allowUncheck: BooleanConstructor;
    disabled: BooleanConstructor;
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[]>;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    value: {
        type: import("vue").PropType<import("./type").RadioValue>;
        default: import("./type").RadioValue;
    };
    modelValue: {
        type: import("vue").PropType<import("./type").RadioValue>;
        default: import("./type").RadioValue;
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").RadioValue>;
    };
    variant: {
        type: import("vue").PropType<"outline" | "primary-filled" | "default-filled">;
        default: "outline" | "primary-filled" | "default-filled";
        validator(val: "outline" | "primary-filled" | "default-filled"): boolean;
    };
    onChange: import("vue").PropType<(value: import("./type").RadioValue, context: {
        e: Event;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    allowUncheck: BooleanConstructor;
    disabled: BooleanConstructor;
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[]>;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    value: {
        type: import("vue").PropType<import("./type").RadioValue>;
        default: import("./type").RadioValue;
    };
    modelValue: {
        type: import("vue").PropType<import("./type").RadioValue>;
        default: import("./type").RadioValue;
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").RadioValue>;
    };
    variant: {
        type: import("vue").PropType<"outline" | "primary-filled" | "default-filled">;
        default: "outline" | "primary-filled" | "default-filled";
        validator(val: "outline" | "primary-filled" | "default-filled"): boolean;
    };
    onChange: import("vue").PropType<(value: import("./type").RadioValue, context: {
        e: Event;
    }) => void>;
}>>, {
    name: string;
    value: import("./type").RadioValue;
    disabled: boolean;
    size: import("..").SizeEnum;
    modelValue: import("./type").RadioValue;
    allowUncheck: boolean;
    variant: "outline" | "primary-filled" | "default-filled";
}, {}>;
export default _default;
