import { SlotReturnValue } from '../common';
declare const _default: import("vue").DefineComponent<{
    close: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => SlotReturnValue)>;
        default: boolean;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => SlotReturnValue)>;
    };
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => SlotReturnValue>;
    };
    maxLine: {
        type: NumberConstructor;
        default: number;
    };
    message: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => SlotReturnValue)>;
    };
    operation: {
        type: import("vue").PropType<(h: typeof import("vue").h) => SlotReturnValue>;
    };
    theme: {
        type: import("vue").PropType<"error" | "success" | "warning" | "info">;
        default: "error" | "success" | "warning" | "info";
        validator(val: "error" | "success" | "warning" | "info"): boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => SlotReturnValue)>;
    };
    onClose: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClosed: import("vue").PropType<(context: {
        e: TransitionEvent;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    close: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => SlotReturnValue)>;
        default: boolean;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => SlotReturnValue)>;
    };
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => SlotReturnValue>;
    };
    maxLine: {
        type: NumberConstructor;
        default: number;
    };
    message: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => SlotReturnValue)>;
    };
    operation: {
        type: import("vue").PropType<(h: typeof import("vue").h) => SlotReturnValue>;
    };
    theme: {
        type: import("vue").PropType<"error" | "success" | "warning" | "info">;
        default: "error" | "success" | "warning" | "info";
        validator(val: "error" | "success" | "warning" | "info"): boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => SlotReturnValue)>;
    };
    onClose: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClosed: import("vue").PropType<(context: {
        e: TransitionEvent;
    }) => void>;
}>>, {
    close: string | boolean | ((h: typeof import("vue").h) => SlotReturnValue);
    theme: "error" | "success" | "warning" | "info";
    maxLine: number;
}, {}>;
export default _default;
