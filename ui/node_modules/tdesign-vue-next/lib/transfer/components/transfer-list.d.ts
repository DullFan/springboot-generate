import { PropType } from 'vue';
import { EmptyType, SearchOption, TransferValue, TransferListType, TransferItemOption } from '../interface';
declare const _default: import("vue").DefineComponent<{
    checkboxProps: {
        type: PropType<import("../../checkbox").TdCheckboxProps>;
        default: () => {};
    };
    dataSource: {
        type: PropType<TransferItemOption[]>;
        default(): TransferItemOption[];
    };
    listType: {
        type: PropType<TransferListType>;
        default: string;
    };
    title: {
        type: (FunctionConstructor | StringConstructor)[];
    };
    checkedValue: {
        type: PropType<TransferValue[]>;
        default(): TransferValue[];
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    search: {
        type: PropType<SearchOption>;
        default: boolean;
    };
    transferItem: PropType<(h: typeof import("vue").h, props: import("../type").TransferItem<import("../type").DataOption>) => import("../..").SlotReturnValue>;
    empty: {
        type: PropType<EmptyType>;
    };
    pagination: (ObjectConstructor | BooleanConstructor)[];
    footer: (FunctionConstructor | StringConstructor)[];
    checkAll: BooleanConstructor;
    isTreeMode: {
        type: PropType<boolean>;
        default: boolean;
    };
    onCheckedChange: PropType<(event: TransferValue[]) => void>;
    onPageChange: FunctionConstructor;
    onScroll: FunctionConstructor;
    onSearch: FunctionConstructor;
    onDataChange: PropType<(data: TransferValue[], movedValue: TransferValue[]) => void>;
    draggable: BooleanConstructor;
    currentValue: {
        type: PropType<TransferValue[]>;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    checkboxProps: {
        type: PropType<import("../../checkbox").TdCheckboxProps>;
        default: () => {};
    };
    dataSource: {
        type: PropType<TransferItemOption[]>;
        default(): TransferItemOption[];
    };
    listType: {
        type: PropType<TransferListType>;
        default: string;
    };
    title: {
        type: (FunctionConstructor | StringConstructor)[];
    };
    checkedValue: {
        type: PropType<TransferValue[]>;
        default(): TransferValue[];
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    search: {
        type: PropType<SearchOption>;
        default: boolean;
    };
    transferItem: PropType<(h: typeof import("vue").h, props: import("../type").TransferItem<import("../type").DataOption>) => import("../..").SlotReturnValue>;
    empty: {
        type: PropType<EmptyType>;
    };
    pagination: (ObjectConstructor | BooleanConstructor)[];
    footer: (FunctionConstructor | StringConstructor)[];
    checkAll: BooleanConstructor;
    isTreeMode: {
        type: PropType<boolean>;
        default: boolean;
    };
    onCheckedChange: PropType<(event: TransferValue[]) => void>;
    onPageChange: FunctionConstructor;
    onScroll: FunctionConstructor;
    onSearch: FunctionConstructor;
    onDataChange: PropType<(data: TransferValue[], movedValue: TransferValue[]) => void>;
    draggable: BooleanConstructor;
    currentValue: {
        type: PropType<TransferValue[]>;
    };
}>>, {
    search: boolean;
    draggable: boolean;
    disabled: boolean;
    checkAll: boolean;
    isTreeMode: boolean;
    checkboxProps: {};
    dataSource: TransferItemOption[];
    listType: TransferListType;
    checkedValue: TransferValue[];
}, {}>;
export default _default;
