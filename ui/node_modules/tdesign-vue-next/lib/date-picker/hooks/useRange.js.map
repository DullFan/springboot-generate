{"version":3,"file":"useRange.js","sources":["../../../src/date-picker/hooks/useRange.tsx"],"sourcesContent":["import { ref, computed, watch } from 'vue';\nimport { CalendarIcon as TdCalendarIcon } from 'tdesign-icons-vue-next';\nimport omit from 'lodash/omit';\n\nimport { useTNodeJSX } from '../../hooks/tnode';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport { usePrefixClass, useConfig } from '../../hooks/useConfig';\n\nimport { TdDateRangePickerProps, DateValue } from '../type';\nimport { isValidDate, formatDate, getDefaultFormat, parseToDayjs } from '../../_common/js/date-picker/format';\nimport useRangeValue from './useRangeValue';\n\nexport const PARTIAL_MAP = { first: 'start', second: 'end' };\n\nexport default function useRange(props: TdDateRangePickerProps) {\n  const COMPONENT_NAME = usePrefixClass('date-range-picker');\n  const { globalConfig } = useConfig('datePicker');\n  const { CalendarIcon } = useGlobalIcon({ CalendarIcon: TdCalendarIcon });\n  const renderTNodeJSX = useTNodeJSX();\n\n  const isMountedRef = ref(false);\n  const inputRef = ref();\n\n  const { value, onChange, time, month, year, cacheValue, isFirstValueSelected } = useRangeValue(props);\n\n  const formatRef = computed(() =>\n    getDefaultFormat({\n      mode: props.mode,\n      format: props.format,\n      valueType: props.valueType,\n      enableTimePicker: props.enableTimePicker,\n    }),\n  );\n\n  const popupVisible = ref(false);\n  const isHoverCell = ref(false);\n  const activeIndex = ref(0); // 确定当前选中的输入框序号\n  const inputValue = ref(formatDate(props.value, { format: formatRef.value.format })); // 未真正选中前可能不断变更输入框的内容\n\n  // input 设置\n  const rangeInputProps = computed(() => ({\n    ...props.rangeInputProps,\n    size: props.size,\n    ref: inputRef,\n    clearable: props.clearable,\n    prefixIcon: () => renderTNodeJSX('prefixIcon'),\n    readonly: !props.allowInput,\n    separator: props.separator || globalConfig.value.rangeSeparator,\n    placeholder: props.placeholder || globalConfig.value.placeholder[props.mode],\n    activeIndex: popupVisible.value ? activeIndex.value : undefined,\n    suffixIcon: () => {\n      return renderTNodeJSX('suffixIcon') || <CalendarIcon />;\n    },\n    class: {\n      [`${COMPONENT_NAME.value}__input--placeholder`]: isHoverCell.value,\n    },\n    onClick: ({ position }: any) => {\n      activeIndex.value = position === 'first' ? 0 : 1;\n    },\n    onClear: ({ e }: { e: MouseEvent }) => {\n      e.stopPropagation();\n      popupVisible.value = false;\n      onChange?.([], { dayjsValue: [], trigger: 'clear' });\n    },\n    onBlur: (newVal: string[], { e, position }: any) => {\n      props.onBlur?.({ value: newVal, partial: PARTIAL_MAP[position], e });\n    },\n    onFocus: (newVal: string[], { e, position }: any) => {\n      props.onFocus?.({ value: newVal, partial: PARTIAL_MAP[position], e });\n      activeIndex.value = position === 'first' ? 0 : 1;\n    },\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onChange: (newVal: string[], { e, position }: any) => {\n      inputValue.value = newVal;\n\n      // 跳过不符合格式化的输入框内容\n      if (!isValidDate(newVal, formatRef.value.format)) return;\n      cacheValue.value = newVal;\n      const newYear: Array<number> = [];\n      const newMonth: Array<number> = [];\n      const newTime: Array<string> = [];\n      newVal.forEach((v) => {\n        newYear.push(parseToDayjs(v, formatRef.value.format).year());\n        newMonth.push(parseToDayjs(v, formatRef.value.format).month());\n        newTime.push(parseToDayjs(v, formatRef.value.format).format(formatRef.value.timeFormat));\n      });\n      year.value = newYear;\n      month.value = newMonth;\n      time.value = newTime;\n    },\n    onEnter: (newVal: string[]) => {\n      if (!isValidDate(newVal, formatRef.value.format) && !isValidDate(value.value, formatRef.value.format)) return;\n\n      popupVisible.value = false;\n      if (isValidDate(newVal, formatRef.value.format)) {\n        onChange?.(\n          formatDate(newVal, {\n            format: formatRef.value.format,\n            targetFormat: formatRef.value.valueType,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: newVal.map((v) => parseToDayjs(v, formatRef.value.format)),\n            trigger: 'enter',\n          },\n        );\n      } else if (isValidDate(value.value, formatRef.value.format)) {\n        inputValue.value = formatDate(value.value, {\n          format: formatRef.value.format,\n        });\n      } else {\n        inputValue.value = [];\n      }\n    },\n  }));\n\n  // popup 设置\n  const popupProps = computed(() => ({\n    expandAnimation: true,\n    ...omit(props.popupProps, 'on-visible-change'),\n    overlayInnerStyle: props.popupProps?.overlayInnerStyle ?? { width: 'auto' },\n    overlayClassName: [props.popupProps?.overlayClassName, `${COMPONENT_NAME.value}__panel-container`],\n    onVisibleChange: (visible: boolean, context: any) => {\n      // 这里劫持了进一步向 popup 传递的 onVisibleChange 事件，为了保证可以在 Datepicker 中使用 popupProps.onVisibleChange，故此处理\n      props.popupProps?.onVisibleChange?.(visible, context);\n      props.popupProps?.['on-visible-change']?.(visible, context);\n\n      // 输入框点击不关闭面板\n      if (context.trigger === 'trigger-element-click') {\n        const indexMap = { 0: 'first', 1: 'second' };\n        inputRef.value.focus({ position: indexMap[activeIndex.value] });\n        popupVisible.value = true;\n        return;\n      }\n\n      popupVisible.value = visible;\n    },\n  }));\n\n  // 输入框响应 value 变化\n  watch(\n    value,\n    (value) => {\n      if (!value) {\n        inputValue.value = [];\n        return;\n      }\n      if (!isValidDate(value, formatRef.value.format)) return;\n\n      inputValue.value = formatDate(value, {\n        format: formatRef.value.format,\n      });\n    },\n    {\n      immediate: true,\n    },\n  );\n\n  // activeIndex 变化自动 focus 对应输入框\n  watch(\n    activeIndex,\n    (index) => {\n      if (!isMountedRef.value) {\n        isMountedRef.value = true;\n        return;\n      }\n      if (!popupVisible.value) return;\n      const indexMap = { 0: 'first', 1: 'second' };\n      inputRef.value?.focus?.({ position: indexMap[index] });\n    },\n    {\n      immediate: true,\n    },\n  );\n\n  return {\n    year,\n    month,\n    value,\n    time,\n    inputValue,\n    popupVisible,\n    rangeInputProps,\n    popupProps,\n    isHoverCell,\n    activeIndex,\n    isFirstValueSelected,\n    cacheValue,\n    onChange,\n  };\n}\n"],"names":["PARTIAL_MAP","first","second","useRange","props","COMPONENT_NAME","usePrefixClass","_useConfig","useConfig","globalConfig","_useGlobalIcon","useGlobalIcon","CalendarIcon","TdCalendarIcon","renderTNodeJSX","useTNodeJSX","isMountedRef","ref","inputRef","_useRangeValue","useRangeValue","value","onChange","time","month","year","cacheValue","isFirstValueSelected","formatRef","computed","getDefaultFormat","mode","format","valueType","enableTimePicker","popupVisible","isHoverCell","activeIndex","inputValue","formatDate","rangeInputProps","_objectSpread","size","clearable","prefixIcon","readonly","allowInput","separator","rangeSeparator","placeholder","suffixIcon","_createVNode","_defineProperty","concat","onClick","_ref","position","onClear","_ref2","e","stopPropagation","dayjsValue","trigger","onBlur","newVal","_ref3","_props$onBlur","call","partial","onFocus","_ref4","_props$onFocus","_ref5","isValidDate","newYear","newMonth","newTime","forEach","v","push","parseToDayjs","timeFormat","onEnter","targetFormat","autoSwap","map","popupProps","_props$popupProps$ove","_props$popupProps","_props$popupProps2","expandAnimation","omit","overlayInnerStyle","width","overlayClassName","onVisibleChange","visible","context","_props$popupProps3","_props$popupProps3$on","_props$popupProps4","_props$popupProps4$on","indexMap","focus","watch","immediate","index","_inputRef$value","_inputRef$value$focus"],"mappings":"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"}