{"version":3,"file":"useTreeScroll.js","sources":["../../../src/tree/hooks/useTreeScroll.ts"],"sourcesContent":["import { computed, onMounted, TypeRef, useVirtualScroll, TypeScroll, TreeNode } from '../adapt';\nimport { TypeTreeState, TypeTimer } from '../tree-types';\n\n// tree 虚拟滚动整合\nexport default function useTreeScroll(state: TypeTreeState) {\n  const treeState = state;\n  const { props, context, allNodes, nodes, scope, treeContentRef, isScrolling } = treeState;\n\n  const scrollProps: TypeRef<TypeScroll> = computed(() => ({\n    // 默认一行高度为 34px\n    rowHeight: 34,\n    ...props.scroll,\n  }));\n  scope.scrollProps = scrollProps;\n\n  // 虚拟滚动\n  const virtualScrollParams = computed(() => {\n    const list = allNodes.value.filter((node: TreeNode) => node.visible);\n    return {\n      data: list,\n      scroll: scrollProps.value,\n    };\n  });\n\n  const virtualConfig = useVirtualScroll(treeContentRef, virtualScrollParams);\n  scope.virtualConfig = virtualConfig;\n  treeState.virtualConfig = virtualConfig;\n\n  onMounted(() => {\n    const isVirtual = virtualConfig?.isVirtualScroll.value;\n    if (isVirtual) {\n      virtualConfig.handleScroll();\n    }\n  });\n\n  const emitScrollEvent = (e: WheelEvent) => {\n    props.onScroll?.({ e });\n    // Vue3 ignore next line\n    context.emit('scroll', { e });\n  };\n\n  // 设置滚动结束状态\n  let scrollStopTimer: TypeTimer = null;\n  const setScrolling = () => {\n    isScrolling.value = true;\n    if (scrollStopTimer) {\n      clearTimeout(scrollStopTimer);\n      scrollStopTimer = null;\n    }\n    scrollStopTimer = setTimeout(() => {\n      scrollStopTimer = null;\n      isScrolling.value = false;\n    }, 100);\n  };\n\n  let lastScrollY = 0;\n  const onInnerVirtualScroll = (e: WheelEvent) => {\n    setScrolling();\n    const isVirtual = virtualConfig?.isVirtualScroll.value;\n    const target = (e.target || e.srcElement) as HTMLElement;\n    const top = target.scrollTop;\n    // 排除横向滚动出发的纵向虚拟滚动计算\n    if (lastScrollY !== top) {\n      if (isVirtual) {\n        virtualConfig.handleScroll();\n        nodes.value = virtualConfig.visibleData.value;\n      }\n    } else {\n      lastScrollY = 0;\n    }\n    lastScrollY = top;\n    emitScrollEvent(e);\n  };\n\n  return {\n    // 虚拟滚动相关\n    treeContentRef,\n    onInnerVirtualScroll,\n    virtualConfig,\n    scrollToElement: virtualConfig.scrollToElement,\n  };\n}\n"],"names":["useTreeScroll","state","treeState","props","context","allNodes","nodes","scope","treeContentRef","isScrolling","scrollProps","computed","_objectSpread","rowHeight","scroll","virtualScrollParams","list","value","filter","node","visible","data","virtualConfig","useVirtualScroll","onMounted","isVirtual","isVirtualScroll","handleScroll","emitScrollEvent","e","_props$onScroll","onScroll","call","emit","scrollStopTimer","setScrolling","clearTimeout","setTimeout","lastScrollY","onInnerVirtualScroll","target","srcElement","top","scrollTop","visibleData","scrollToElement"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA,SAAwBA,cAAcC,KAAsB,EAAA;EAC1D,IAAMC,SAAY,GAAAD,KAAA,CAAA;AACZ,EAAA,IAAEE,QAAwED,SAAA,CAAxEC;IAAOC,OAAS,GAAwDF,SAAA,CAAjEE,OAAS;IAAAC,QAAA,GAAwDH,SAAA,CAAxDG,QAAA;IAAUC,QAA8CJ,SAAA,CAA9CI;IAAOC,KAAO,GAAgCL,SAAA,CAAvCK,KAAO;IAAAC,cAAA,GAAgCN,SAAA,CAAhCM,cAAA;IAAgBC,cAAgBP,SAAA,CAAhBO;EAE1D,IAAAC,WAAA,GAAmCC,SAAS,YAAA;AAAA,IAAA,OAAAC,aAAA,CAAA;AAEhDC,MAAAA,SAAW,EAAA,EAAA;KACRV,EAAAA,KAAM,CAAAW,MAAA,CAAA,CAAA;AAAA,GACT,CAAA,CAAA;EACFP,KAAA,CAAMG,WAAc,GAAAA,WAAA,CAAA;AAGd,EAAA,IAAAK,mBAAA,GAAsBJ,SAAS,YAAM;IACzC,IAAMK,OAAOX,QAAS,CAAAY,KAAA,CAAMC,OAAO,UAACC,IAAA,EAAA;MAAA,OAAmBA,KAAKC,OAAO,CAAA;KAAA,CAAA,CAAA;IAC5D,OAAA;AACLC,MAAAA,IAAM,EAAAL,IAAA;MACNF,QAAQJ,WAAY,CAAAO,KAAAA;KACtB,CAAA;AACF,GAAC,CAAA,CAAA;AAEK,EAAA,IAAAK,aAAA,GAAgBC,gBAAiB,CAAAf,cAAA,EAAgBO,mBAAmB,CAAA,CAAA;EAC1ER,KAAA,CAAMe,aAAgB,GAAAA,aAAA,CAAA;EACtBpB,SAAA,CAAUoB,aAAgB,GAAAA,aAAA,CAAA;AAE1BE,EAAAA,SAAA,CAAU,YAAM;IACR,IAAAC,SAAA,GAAYH,kBAAAA,IAAAA,IAAAA,oCAAAA,cAAeI,eAAgB,CAAAT,KAAA,CAAA;AACjD,IAAA,IAAIQ,SAAW,EAAA;MACbH,aAAA,CAAcK,YAAa,EAAA,CAAA;AAC7B,KAAA;AACF,GAAC,CAAA,CAAA;AAEK,EAAA,IAAAC,eAAA,GAAkB,SAAlBA,eAAAA,CAAmBC,CAAkB,EAAA;AAAA,IAAA,IAAAC,eAAA,CAAA;AACnC,IAAA,CAAAA,eAAA,GAAA3B,KAAA,CAAA4B,QAAA,MAAA,IAAA,IAAAD,eAAA,KAAA,KAAA,CAAA,IAAAA,eAAA,CAAAE,IAAA,CAAA7B,KAAA,EAAW;AAAE0B,MAAAA,CAAA,EAAAA,CAAAA;AAAE,KAAC,CAAA,CAAA;AAEtBzB,IAAAA,OAAA,CAAQ6B,IAAK,CAAA,QAAA,EAAU;AAAEJ,MAAAA,CAAA,EAAAA,CAAAA;AAAE,KAAC,CAAA,CAAA;GAC9B,CAAA;EAGA,IAAIK,eAA6B,GAAA,IAAA,CAAA;AACjC,EAAA,IAAMC,eAAe,SAAfA,eAAqB;IACzB1B,WAAA,CAAYQ,KAAQ,GAAA,IAAA,CAAA;AACpB,IAAA,IAAIiB,eAAiB,EAAA;MACnBE,YAAA,CAAaF,eAAe,CAAA,CAAA;AACVA,MAAAA,eAAA,GAAA,IAAA,CAAA;AACpB,KAAA;IACAA,eAAA,GAAkBG,WAAW,YAAM;AACfH,MAAAA,eAAA,GAAA,IAAA,CAAA;MAClBzB,WAAA,CAAYQ,KAAQ,GAAA,KAAA,CAAA;OACnB,GAAG,CAAA,CAAA;GACR,CAAA;EAEA,IAAIqB,WAAc,GAAA,CAAA,CAAA;AACZ,EAAA,IAAAC,oBAAA,GAAuB,SAAvBA,oBAAAA,CAAwBV,CAAkB,EAAA;AACjCM,IAAAA,YAAA,EAAA,CAAA;IACP,IAAAV,SAAA,GAAYH,kBAAAA,IAAAA,IAAAA,oCAAAA,cAAeI,eAAgB,CAAAT,KAAA,CAAA;IAC3C,IAAAuB,MAAA,GAAUX,CAAE,CAAAW,MAAA,IAAUX,CAAE,CAAAY,UAAA,CAAA;AAC9B,IAAA,IAAMC,MAAMF,MAAO,CAAAG,SAAA,CAAA;IAEnB,IAAIL,gBAAgBI,GAAK,EAAA;AACvB,MAAA,IAAIjB,SAAW,EAAA;QACbH,aAAA,CAAcK,YAAa,EAAA,CAAA;AACrBrB,QAAAA,KAAA,CAAAW,KAAA,GAAQK,cAAcsB,WAAY,CAAA3B,KAAA,CAAA;AAC1C,OAAA;AACF,KAAO,MAAA;AACSqB,MAAAA,WAAA,GAAA,CAAA,CAAA;AAChB,KAAA;AACcA,IAAAA,WAAA,GAAAI,GAAA,CAAA;IACdd,eAAA,CAAgBC,CAAC,CAAA,CAAA;GACnB,CAAA;EAEO,OAAA;AAELrB,IAAAA,cAAA,EAAAA,cAAA;AACA+B,IAAAA,oBAAA,EAAAA,oBAAA;AACAjB,IAAAA,aAAA,EAAAA,aAAA;IACAuB,iBAAiBvB,aAAc,CAAAuB,eAAAA;GACjC,CAAA;AACF;;;;"}