{"version":3,"file":"useSingle.js","sources":["../../src/select-input/useSingle.tsx"],"sourcesContent":["import { SetupContext, ref, computed, toRefs, Ref } from 'vue';\nimport isObject from 'lodash/isObject';\nimport pick from 'lodash/pick';\nimport Input, { StrInputProps } from '../input';\nimport Loading from '../loading';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport { useFormDisabled } from '../form/hooks';\nimport { PopupInstanceFunctions } from '../popup';\nimport { TdSelectInputProps } from './type';\nimport { SelectInputCommonProperties } from './interface';\n\n// single 和 multiple 共有特性\nconst COMMON_PROPERTIES = [\n  'status',\n  'clearable',\n  'disabled',\n  'label',\n  'placeholder',\n  'readonly',\n  'suffix',\n  'suffixIcon',\n  'onPaste',\n  'onMouseenter',\n  'onMouseleave',\n];\n\nconst DEFAULT_KEYS = {\n  label: 'label',\n  value: 'value',\n  children: 'children',\n};\n\nexport interface SelectInputValueDisplayOptions {\n  useInputDisplay: boolean;\n  usePlaceholder: boolean;\n}\n\nfunction getInputValue(value: TdSelectInputProps['value'], keys: TdSelectInputProps['keys']) {\n  const iKeys = { ...DEFAULT_KEYS, ...keys };\n  return isObject(value) ? value[iKeys.label] : value;\n}\n\nexport default function useSingle(\n  props: TdSelectInputProps & { valueDisplayOptions: SelectInputValueDisplayOptions },\n  context: SetupContext,\n  popupRef: Ref<PopupInstanceFunctions>,\n) {\n  const { value, keys, inputValue: propsInputValue } = toRefs(props);\n  const classPrefix = usePrefixClass();\n  const isSingleFocus = ref(props.autofocus);\n  const inputRef = ref();\n  const [inputValue, setInputValue] = useDefaultValue(\n    propsInputValue,\n    props.defaultInputValue ?? '',\n    props.onInputChange,\n    'inputValue',\n  );\n  const renderTNode = useTNodeJSX();\n  const disable = useFormDisabled();\n\n  const commonInputProps = computed<SelectInputCommonProperties>(() => ({\n    ...pick(props, COMMON_PROPERTIES),\n    disabled: disable.value,\n  }));\n\n  const onInnerClear = (context: { e: MouseEvent }) => {\n    context?.e?.stopPropagation();\n    props.onClear?.(context);\n    setInputValue('', { trigger: 'clear' });\n  };\n\n  const onInnerInputChange: StrInputProps['onChange'] = (value, context) => {\n    if (props.allowInput) {\n      setInputValue(value, { ...context, trigger: context.trigger || 'input' });\n    }\n  };\n\n  const renderSelectSingle = (popupVisible: boolean) => {\n    const singleValueDisplay = renderTNode('valueDisplay');\n    const displayedValue = popupVisible && props.allowInput ? inputValue.value : getInputValue(value.value, keys.value);\n    const prefixContent = renderPrefixContent(singleValueDisplay, popupVisible);\n    const inputProps = {\n      ...commonInputProps.value,\n      value: renderInputDisplay(singleValueDisplay, displayedValue, popupVisible),\n      label: prefixContent.length ? () => prefixContent : undefined,\n      autoWidth: props.autoWidth,\n      readonly: !props.allowInput || props.readonly,\n      placeholder: renderPlaceholder(singleValueDisplay),\n      suffixIcon: !disable.value && props.loading ? () => <Loading loading size=\"small\" /> : props.suffixIcon,\n      showClearIconOnEmpty: Boolean(\n        props.clearable && (inputValue.value || displayedValue) && !disable.value && !props.readonly,\n      ),\n      ...props.inputProps,\n    };\n\n    // eslint-disable-next-line\n    const { tips, ...slots } = context.slots;\n\n    const inputClassProps = popupVisible\n      ? [`${classPrefix.value}-input--focused`, `${classPrefix.value}-is-focused`, inputProps?.inputClass]\n      : inputProps?.inputClass;\n\n    const onEnter: StrInputProps['onEnter'] = (val, context) => {\n      props.onEnter?.(value.value, { ...context, inputValue: val });\n    };\n\n    const onFocus: StrInputProps['onFocus'] = (val, context) => {\n      const overlayState = popupRef.value?.getOverlayState();\n      if (isSingleFocus.value || overlayState?.hover) return;\n      isSingleFocus.value = true;\n      props.onFocus?.(value.value, { ...context, inputValue: val });\n    };\n\n    const onBlur: StrInputProps['onBlur'] = (val, context) => {\n      const overlayState = popupRef.value?.getOverlayState();\n      if (overlayState?.hover) return;\n      isSingleFocus.value = false;\n      props.onBlur?.(value.value, { ...context, inputValue: val });\n    };\n\n    return (\n      <Input\n        ref={inputRef}\n        style={context.attrs?.style}\n        v-slots={slots}\n        {...{\n          onChange: onInnerInputChange,\n          onClear: onInnerClear,\n          onEnter,\n          onFocus,\n          onBlur,\n          ...inputProps,\n        }}\n        inputClass={inputClassProps}\n      />\n    );\n  };\n\n  const renderPrefixContent = (singleValueDisplay: any, popupVisible: boolean) => {\n    // 需要隐藏valueDisplay的两个情况\n    // 1 用户传入usePlaceholder希望使用自带占位符实现，则应在未选择值时隐藏valueDisplay，只展示占位符\n    // 2 用户传入useInputDisplay希望使用自带输入回显实现，激活选择器浮层时只展示input值（待讨论是否修改为激活后真的输入字符再隐藏valueDisplay，此处实现效果与不使用valueDisplay只使用filterable时不同）\n    const label = renderTNode('label');\n\n    if (!label && !singleValueDisplay) {\n      return [];\n    }\n\n    if (singleValueDisplay) {\n      if (\n        (props.valueDisplayOptions?.usePlaceholder && !value.value) ||\n        (props.valueDisplayOptions?.useInputDisplay && popupVisible)\n      ) {\n        return [label];\n      }\n    }\n    return [label, singleValueDisplay];\n  };\n\n  const renderInputDisplay = (singleValueDisplay: any, displayedValue: any, popupVisible: boolean) => {\n    // 使用valueDisplay插槽时，如用户传入useInputDisplay使用自带输入回显实现，未传则认为用户自行实现。\n    if (singleValueDisplay)\n      if (\n        !props.valueDisplayOptions?.useInputDisplay ||\n        (props.valueDisplayOptions?.useInputDisplay && !popupVisible)\n      ) {\n        return undefined;\n      }\n    return displayedValue;\n  };\n\n  const renderPlaceholder = (singleValueDisplay: any) => {\n    // 使用valueDisplay插槽时，如用户传入usePlaceholder使用自带占位符实现，未传则认为用户自行实现。\n    // 如果当前存在value（对应直接使用组件和select组件调用时），不显示占位符。\n    if (singleValueDisplay) {\n      if (!props.valueDisplayOptions?.usePlaceholder || (props.valueDisplayOptions?.usePlaceholder && value.value)) {\n        return '';\n      }\n    }\n    return props.placeholder;\n  };\n\n  return {\n    inputRef,\n    isSingleFocus,\n    commonInputProps,\n    singleInputValue: inputValue,\n    onInnerClear,\n    renderSelectSingle,\n  };\n}\n"],"names":["COMMON_PROPERTIES","DEFAULT_KEYS","label","value","children","getInputValue","keys","iKeys","_objectSpread","isObject","useSingle","props","context","popupRef","_props$defaultInputVa","_toRefs","toRefs","propsInputValue","inputValue","classPrefix","usePrefixClass","isSingleFocus","ref","autofocus","inputRef","_useDefaultValue","useDefaultValue","defaultInputValue","onInputChange","_useDefaultValue2","_slicedToArray","setInputValue","renderTNode","useTNodeJSX","disable","useFormDisabled","commonInputProps","computed","pick","disabled","onInnerClear","_context2$e","_props$onClear","e","stopPropagation","onClear","call","trigger","onInnerInputChange","allowInput","renderSelectSingle","popupVisible","_context$attrs","singleValueDisplay","displayedValue","prefixContent","renderPrefixContent","inputProps","renderInputDisplay","length","autoWidth","readonly","placeholder","renderPlaceholder","suffixIcon","loading","_createVNode","Loading","showClearIconOnEmpty","Boolean","clearable","_context$slots","slots","tips","_objectWithoutProperties","_excluded","inputClassProps","concat","inputClass","onEnter","val","_props$onEnter","onFocus","_popupRef$value","_props$onFocus","overlayState","getOverlayState","hover","onBlur","_popupRef$value2","_props$onBlur","Input","_mergeProps","attrs","style","onChange","_props$valueDisplayOp","_props$valueDisplayOp2","valueDisplayOptions","usePlaceholder","useInputDisplay","_props$valueDisplayOp3","_props$valueDisplayOp4","_props$valueDisplayOp5","_props$valueDisplayOp6","singleInputValue"],"mappings":"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"}