{"version":3,"file":"option.js","sources":["../../src/select/option.tsx"],"sourcesContent":["import { defineComponent, ref, computed, inject, onMounted, onBeforeUnmount } from 'vue';\n\nimport props from './option-props';\nimport Checkbox from '../checkbox/index';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useRipple from '../hooks/useRipple';\nimport { useContent } from '../hooks/tnode';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { selectInjectKey, getNewMultipleValue } from './helper';\nimport { SelectValue } from './type';\n\nexport default defineComponent({\n  name: 'TOption',\n\n  props: {\n    ...props,\n    createAble: Boolean,\n    multiple: Boolean,\n    index: Number,\n    rowIndex: Number,\n    trs: Map,\n    scrollType: String,\n    isVirtual: Boolean,\n    bufferSize: Number,\n    checkAll: Boolean,\n  },\n  emits: ['row-mounted'],\n\n  setup(props, context) {\n    const selectProvider = inject(selectInjectKey);\n    const formDisabled = useFormDisabled();\n\n    const isReachMax = computed(\n      () =>\n        selectProvider.value.max !== 0 &&\n        selectProvider.value.max <= (selectProvider.value.selectValue as SelectValue[]).length,\n    );\n    const disabled = computed(\n      () =>\n        formDisabled.value ||\n        (props.multiple && isReachMax.value && !isSelected.value && !selectProvider.value.isCheckAll),\n    );\n\n    const renderContent = useContent();\n\n    const selectName = usePrefixClass('select');\n    const { STATUS, SIZE } = useCommonClassName();\n    const liRef = ref<HTMLElement>();\n\n    const isHover = ref(false);\n\n    const isSelected = computed(() => {\n      if (selectProvider.value.isCheckAll && !props.disabled) return true;\n      return !props.multiple\n        ? selectProvider.value.selectValue === props.value\n        : (selectProvider.value.selectValue as SelectValue[]).includes(props.value);\n    });\n\n    const isIndeterminate = computed(() => {\n      if (!props.checkAll) return false;\n      return selectProvider.value.indeterminate;\n    });\n\n    const classes = computed(() => [\n      `${selectName.value}-option`,\n      [SIZE.value[selectProvider.value.size]],\n      {\n        [STATUS.value.disabled]: disabled.value,\n        [STATUS.value.selected]: isSelected.value,\n        [`${selectName.value}-option__hover`]:\n          (isHover.value || selectProvider.value.hoverIndex === props.index) && !disabled.value,\n      },\n    ]);\n\n    const labelText = computed(() => props.label || props.value);\n\n    const handleClick = (e: MouseEvent | KeyboardEvent) => {\n      if (props.disabled || disabled.value) return;\n      if (props.multiple) {\n        handleCheckboxClick(!isSelected.value, { e });\n        e.preventDefault();\n        return;\n      }\n\n      if (props.createAble) {\n        selectProvider.value.handleCreate?.(props.value);\n        if (selectProvider.value.multiple) {\n          selectProvider.value.handleValueChange(\n            [...(selectProvider.value.selectValue as SelectValue[]), props.value],\n            {\n              selectedOptions: selectProvider.value.getSelectedOptions(),\n              trigger: 'check',\n              e,\n            },\n          );\n          return;\n        }\n      }\n      const selectedOptions = selectProvider.value.getSelectedOptions(props.value);\n      selectProvider.value.handleValueChange(props.value, {\n        option: selectedOptions?.[0],\n        selectedOptions: selectedOptions,\n        trigger: 'check',\n        e,\n      });\n      selectProvider.value.handlePopupVisibleChange(false, { e });\n    };\n\n    const handleCheckboxClick = (val: boolean, context: { e: MouseEvent | KeyboardEvent }) => {\n      if (props.checkAll) {\n        selectProvider.value.onCheckAllChange(val);\n        return;\n      }\n      const newValue = getNewMultipleValue(selectProvider.value.selectValue as SelectValue[], props.value);\n      const selectedOptions = selectProvider.value.getSelectedOptions(newValue.value);\n\n      selectProvider.value.handleValueChange(newValue.value, {\n        option: selectedOptions.find((v) => v.value === props.value),\n        selectedOptions,\n        trigger: val ? 'check' : 'uncheck',\n        e: context.e,\n      });\n      if (!selectProvider.value.reserveKeyword) {\n        selectProvider.value.handlerInputChange('');\n      }\n    };\n\n    // 处理虚拟滚动节点挂载\n    onMounted(() => {\n      const { trs, rowIndex, isVirtual } = props;\n      if (isVirtual) {\n        trs.set(rowIndex, liRef.value);\n        context.emit('row-mounted');\n      }\n    });\n\n    // 处理虚拟滚动节点移除\n    onBeforeUnmount(() => {\n      if (props.isVirtual) {\n        const { trs, rowIndex } = props;\n        trs.delete(rowIndex);\n      }\n    });\n\n    useRipple(liRef);\n\n    return () => {\n      const optionChild = renderContent('default', 'content') || labelText.value;\n\n      return (\n        <li\n          ref={liRef}\n          class={classes.value}\n          title={props.title || `${labelText.value}`}\n          onMouseenter={() => (isHover.value = true)}\n          onMouseleave={() => (isHover.value = false)}\n          onClick={handleClick}\n        >\n          {selectProvider && props.multiple ? (\n            <Checkbox\n              checked={isSelected.value}\n              disabled={disabled.value}\n              onChange={handleCheckboxClick}\n              indeterminate={isIndeterminate.value}\n            >\n              {optionChild}\n            </Checkbox>\n          ) : (\n            <span>{optionChild}</span>\n          )}\n        </li>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","props","_objectSpread","createAble","Boolean","multiple","index","Number","rowIndex","trs","Map","scrollType","String","isVirtual","bufferSize","checkAll","emits","setup","context","selectProvider","inject","selectInjectKey","formDisabled","useFormDisabled","isReachMax","computed","value","max","selectValue","length","disabled","isSelected","isCheckAll","renderContent","useContent","selectName","usePrefixClass","_useCommonClassName","useCommonClassName","STATUS","SIZE","liRef","ref","isHover","includes","isIndeterminate","indeterminate","classes","concat","size","_defineProperty","selected","hoverIndex","labelText","label","handleClick","e","handleCheckboxClick","preventDefault","_selectProvider$value","_selectProvider$value2","handleCreate","handleValueChange","_toConsumableArray","selectedOptions","getSelectedOptions","trigger","option","handlePopupVisibleChange","val","onCheckAllChange","newValue","getNewMultipleValue","find","v","reserveKeyword","handlerInputChange","onMounted","set","emit","onBeforeUnmount","useRipple","optionChild","_createVNode","title","onMouseenter","onMouseleave","_default"],"mappings":"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"}