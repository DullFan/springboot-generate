import { TdTabsProps, TdTabPanelProps } from './type';
import './style';
export * from './type';
export declare type TabsProps = TdTabsProps;
export declare type TabPanelProps = TdTabPanelProps;
export declare const Tabs: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        action: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        addable: BooleanConstructor;
        disabled: BooleanConstructor;
        dragSort: BooleanConstructor;
        list: {
            type: import("vue").PropType<TdTabPanelProps[]>;
        };
        placement: {
            type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
            default: "left" | "top" | "bottom" | "right";
            validator(val: "left" | "top" | "bottom" | "right"): boolean;
        };
        size: {
            type: import("vue").PropType<"medium" | "large">;
            default: "medium" | "large";
            validator(val: "medium" | "large"): boolean;
        };
        theme: {
            type: import("vue").PropType<"normal" | "card">;
            default: "normal" | "card";
            validator(val: "normal" | "card"): boolean;
        };
        value: {
            type: import("vue").PropType<import("./type").TabValue>;
            default: import("./type").TabValue;
        };
        modelValue: {
            type: import("vue").PropType<import("./type").TabValue>;
            default: import("./type").TabValue;
        };
        defaultValue: {
            type: import("vue").PropType<import("./type").TabValue>;
        };
        onAdd: import("vue").PropType<(context: {
            e: MouseEvent;
        }) => void>;
        onChange: import("vue").PropType<(value: import("./type").TabValue) => void>;
        onDragSort: import("vue").PropType<(context: import("./type").TabsDragSortContext) => void>;
        onRemove: import("vue").PropType<(options: {
            value: import("./type").TabValue;
            index: number;
            e: MouseEvent;
        }) => void>;
    }>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        action: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        addable: BooleanConstructor;
        disabled: BooleanConstructor;
        dragSort: BooleanConstructor;
        list: {
            type: import("vue").PropType<TdTabPanelProps[]>;
        };
        placement: {
            type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
            default: "left" | "top" | "bottom" | "right";
            validator(val: "left" | "top" | "bottom" | "right"): boolean;
        };
        size: {
            type: import("vue").PropType<"medium" | "large">;
            default: "medium" | "large";
            validator(val: "medium" | "large"): boolean;
        };
        theme: {
            type: import("vue").PropType<"normal" | "card">;
            default: "normal" | "card";
            validator(val: "normal" | "card"): boolean;
        };
        value: {
            type: import("vue").PropType<import("./type").TabValue>;
            default: import("./type").TabValue;
        };
        modelValue: {
            type: import("vue").PropType<import("./type").TabValue>;
            default: import("./type").TabValue;
        };
        defaultValue: {
            type: import("vue").PropType<import("./type").TabValue>;
        };
        onAdd: import("vue").PropType<(context: {
            e: MouseEvent;
        }) => void>;
        onChange: import("vue").PropType<(value: import("./type").TabValue) => void>;
        onDragSort: import("vue").PropType<(context: import("./type").TabsDragSortContext) => void>;
        onRemove: import("vue").PropType<(options: {
            value: import("./type").TabValue;
            index: number;
            e: MouseEvent;
        }) => void>;
    }>>, {
        value: import("./type").TabValue;
        disabled: boolean;
        size: "medium" | "large";
        modelValue: import("./type").TabValue;
        theme: "normal" | "card";
        placement: "left" | "top" | "bottom" | "right";
        dragSort: boolean;
        addable: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        action: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        addable: BooleanConstructor;
        disabled: BooleanConstructor;
        dragSort: BooleanConstructor;
        list: {
            type: import("vue").PropType<TdTabPanelProps[]>;
        };
        placement: {
            type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
            default: "left" | "top" | "bottom" | "right";
            validator(val: "left" | "top" | "bottom" | "right"): boolean;
        };
        size: {
            type: import("vue").PropType<"medium" | "large">;
            default: "medium" | "large";
            validator(val: "medium" | "large"): boolean;
        };
        theme: {
            type: import("vue").PropType<"normal" | "card">;
            default: "normal" | "card";
            validator(val: "normal" | "card"): boolean;
        };
        value: {
            type: import("vue").PropType<import("./type").TabValue>;
            default: import("./type").TabValue;
        };
        modelValue: {
            type: import("vue").PropType<import("./type").TabValue>;
            default: import("./type").TabValue;
        };
        defaultValue: {
            type: import("vue").PropType<import("./type").TabValue>;
        };
        onAdd: import("vue").PropType<(context: {
            e: MouseEvent;
        }) => void>;
        onChange: import("vue").PropType<(value: import("./type").TabValue) => void>;
        onDragSort: import("vue").PropType<(context: import("./type").TabsDragSortContext) => void>;
        onRemove: import("vue").PropType<(options: {
            value: import("./type").TabValue;
            index: number;
            e: MouseEvent;
        }) => void>;
    }>>, () => JSX.Element, {}, {}, {}, {
        value: import("./type").TabValue;
        disabled: boolean;
        size: "medium" | "large";
        modelValue: import("./type").TabValue;
        theme: "normal" | "card";
        placement: "left" | "top" | "bottom" | "right";
        dragSort: boolean;
        addable: boolean;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    action: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    addable: BooleanConstructor;
    disabled: BooleanConstructor;
    dragSort: BooleanConstructor;
    list: {
        type: import("vue").PropType<TdTabPanelProps[]>;
    };
    placement: {
        type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
        default: "left" | "top" | "bottom" | "right";
        validator(val: "left" | "top" | "bottom" | "right"): boolean;
    };
    size: {
        type: import("vue").PropType<"medium" | "large">;
        default: "medium" | "large";
        validator(val: "medium" | "large"): boolean;
    };
    theme: {
        type: import("vue").PropType<"normal" | "card">;
        default: "normal" | "card";
        validator(val: "normal" | "card"): boolean;
    };
    value: {
        type: import("vue").PropType<import("./type").TabValue>;
        default: import("./type").TabValue;
    };
    modelValue: {
        type: import("vue").PropType<import("./type").TabValue>;
        default: import("./type").TabValue;
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").TabValue>;
    };
    onAdd: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onChange: import("vue").PropType<(value: import("./type").TabValue) => void>;
    onDragSort: import("vue").PropType<(context: import("./type").TabsDragSortContext) => void>;
    onRemove: import("vue").PropType<(options: {
        value: import("./type").TabValue;
        index: number;
        e: MouseEvent;
    }) => void>;
}>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    value: import("./type").TabValue;
    disabled: boolean;
    size: "medium" | "large";
    modelValue: import("./type").TabValue;
    theme: "normal" | "card";
    placement: "left" | "top" | "bottom" | "right";
    dragSort: boolean;
    addable: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin<any[]>;
export declare const TabPanel: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        default: {
            type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
        };
        destroyOnHide: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: BooleanConstructor;
        draggable: {
            type: BooleanConstructor;
            default: boolean;
        };
        label: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        lazy: BooleanConstructor;
        panel: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        removable: BooleanConstructor;
        value: {
            type: import("vue").PropType<import("./type").TabValue>;
        };
        onRemove: import("vue").PropType<(options: {
            value: import("./type").TabValue;
            e: MouseEvent;
        }) => void>;
    }>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        default: {
            type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
        };
        destroyOnHide: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: BooleanConstructor;
        draggable: {
            type: BooleanConstructor;
            default: boolean;
        };
        label: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        lazy: BooleanConstructor;
        panel: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        removable: BooleanConstructor;
        value: {
            type: import("vue").PropType<import("./type").TabValue>;
        };
        onRemove: import("vue").PropType<(options: {
            value: import("./type").TabValue;
            e: MouseEvent;
        }) => void>;
    }>>, {
        draggable: boolean;
        lazy: boolean;
        disabled: boolean;
        destroyOnHide: boolean;
        removable: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        default: {
            type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
        };
        destroyOnHide: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: BooleanConstructor;
        draggable: {
            type: BooleanConstructor;
            default: boolean;
        };
        label: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        lazy: BooleanConstructor;
        panel: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        removable: BooleanConstructor;
        value: {
            type: import("vue").PropType<import("./type").TabValue>;
        };
        onRemove: import("vue").PropType<(options: {
            value: import("./type").TabValue;
            e: MouseEvent;
        }) => void>;
    }>>, () => JSX.Element, {}, {}, {}, {
        draggable: boolean;
        lazy: boolean;
        disabled: boolean;
        destroyOnHide: boolean;
        removable: boolean;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    default: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    destroyOnHide: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: BooleanConstructor;
    draggable: {
        type: BooleanConstructor;
        default: boolean;
    };
    label: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    lazy: BooleanConstructor;
    panel: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    removable: BooleanConstructor;
    value: {
        type: import("vue").PropType<import("./type").TabValue>;
    };
    onRemove: import("vue").PropType<(options: {
        value: import("./type").TabValue;
        e: MouseEvent;
    }) => void>;
}>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    draggable: boolean;
    lazy: boolean;
    disabled: boolean;
    destroyOnHide: boolean;
    removable: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin<any[]>;
export default Tabs;
