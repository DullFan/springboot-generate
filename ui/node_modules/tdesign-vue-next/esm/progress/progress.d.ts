declare const _default: import("vue").DefineComponent<{
    color: {
        type: import("vue").PropType<string | string[] | Record<string, string>>;
        default: string | string[] | Record<string, string>;
    };
    label: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    percentage: {
        type: NumberConstructor;
        default: number;
    };
    size: {
        type: import("vue").PropType<string | number>;
        default: string;
    };
    status: {
        type: import("vue").PropType<import("./type").StatusEnum>;
        validator(val: import("./type").StatusEnum): boolean;
    };
    strokeWidth: {
        type: import("vue").PropType<string | number>;
    };
    theme: {
        type: import("vue").PropType<import("./type").ThemeEnum>;
        default: import("./type").ThemeEnum;
        validator(val: import("./type").ThemeEnum): boolean;
    };
    trackColor: {
        type: StringConstructor;
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: import("vue").PropType<string | string[] | Record<string, string>>;
        default: string | string[] | Record<string, string>;
    };
    label: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean;
    };
    percentage: {
        type: NumberConstructor;
        default: number;
    };
    size: {
        type: import("vue").PropType<string | number>;
        default: string;
    };
    status: {
        type: import("vue").PropType<import("./type").StatusEnum>;
        validator(val: import("./type").StatusEnum): boolean;
    };
    strokeWidth: {
        type: import("vue").PropType<string | number>;
    };
    theme: {
        type: import("vue").PropType<import("./type").ThemeEnum>;
        default: import("./type").ThemeEnum;
        validator(val: import("./type").ThemeEnum): boolean;
    };
    trackColor: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    color: string | string[] | Record<string, string>;
    label: string | boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    size: string | number;
    theme: import("./type").ThemeEnum;
    percentage: number;
    trackColor: string;
}, {}>;
export default _default;
