import { TdDividerProps } from './type';
import './style';
export * from './type';
export declare type DividerProps = TdDividerProps;
export declare const Divider: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        align: {
            type: import("vue").PropType<"center" | "left" | "right">;
            default: "center" | "left" | "right";
            validator(val: "center" | "left" | "right"): boolean;
        };
        content: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        dashed: BooleanConstructor;
        default: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        layout: {
            type: import("vue").PropType<"horizontal" | "vertical">;
            default: "horizontal" | "vertical";
            validator(val: "horizontal" | "vertical"): boolean;
        };
        theme: {
            type: import("vue").PropType<"horizontal" | "vertical">;
            validator(val: "horizontal" | "vertical"): boolean;
        };
    }>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        align: {
            type: import("vue").PropType<"center" | "left" | "right">;
            default: "center" | "left" | "right";
            validator(val: "center" | "left" | "right"): boolean;
        };
        content: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        dashed: BooleanConstructor;
        default: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        layout: {
            type: import("vue").PropType<"horizontal" | "vertical">;
            default: "horizontal" | "vertical";
            validator(val: "horizontal" | "vertical"): boolean;
        };
        theme: {
            type: import("vue").PropType<"horizontal" | "vertical">;
            validator(val: "horizontal" | "vertical"): boolean;
        };
    }>>, {
        dashed: boolean;
        layout: "horizontal" | "vertical";
        align: "center" | "left" | "right";
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        align: {
            type: import("vue").PropType<"center" | "left" | "right">;
            default: "center" | "left" | "right";
            validator(val: "center" | "left" | "right"): boolean;
        };
        content: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        dashed: BooleanConstructor;
        default: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        };
        layout: {
            type: import("vue").PropType<"horizontal" | "vertical">;
            default: "horizontal" | "vertical";
            validator(val: "horizontal" | "vertical"): boolean;
        };
        theme: {
            type: import("vue").PropType<"horizontal" | "vertical">;
            validator(val: "horizontal" | "vertical"): boolean;
        };
    }>>, () => JSX.Element, {}, {}, {}, {
        dashed: boolean;
        layout: "horizontal" | "vertical";
        align: "center" | "left" | "right";
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    align: {
        type: import("vue").PropType<"center" | "left" | "right">;
        default: "center" | "left" | "right";
        validator(val: "center" | "left" | "right"): boolean;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    dashed: BooleanConstructor;
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    layout: {
        type: import("vue").PropType<"horizontal" | "vertical">;
        default: "horizontal" | "vertical";
        validator(val: "horizontal" | "vertical"): boolean;
    };
    theme: {
        type: import("vue").PropType<"horizontal" | "vertical">;
        validator(val: "horizontal" | "vertical"): boolean;
    };
}>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    dashed: boolean;
    layout: "horizontal" | "vertical";
    align: "center" | "left" | "right";
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin<any[]>;
export default Divider;
