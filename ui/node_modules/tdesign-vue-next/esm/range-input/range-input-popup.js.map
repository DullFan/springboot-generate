{"version":3,"file":"range-input-popup.js","sources":["../../src/range-input/range-input-popup.tsx"],"sourcesContent":["import { defineComponent, computed } from 'vue';\nimport Popup from '../popup';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport RangeInput from './range-input';\nimport props from './range-input-popup-props';\nimport useOverlayInnerStyle from '../select-input/useOverlayInnerStyle';\nimport { TdRangeInputPopupProps } from './type';\n\nexport default defineComponent({\n  name: 'TRangeInputPopup',\n  props,\n\n  setup(props: TdRangeInputPopupProps) {\n    const COMPONENT_NAME = usePrefixClass('range-input-popup');\n\n    const { tOverlayInnerStyle, innerPopupVisible, onInnerPopupVisibleChange } = useOverlayInnerStyle(props);\n\n    const popupClasses = computed(() => [\n      COMPONENT_NAME.value,\n      {\n        [`${COMPONENT_NAME.value}--visible`]: props.popupVisible || innerPopupVisible.value,\n      },\n    ]);\n\n    return () => (\n      <div class={popupClasses.value}>\n        <Popup\n          hideEmptyPopup\n          content={props.panel}\n          trigger=\"click\"\n          placement=\"bottom-left\"\n          disabled={props.disabled}\n          visible={props.popupVisible || innerPopupVisible.value}\n          {...{\n            overlayInnerStyle: tOverlayInnerStyle.value,\n            onVisibleChange: onInnerPopupVisibleChange,\n            ...props.popupProps,\n          }}\n        >\n          <RangeInput\n            {...{\n              value: props.inputValue,\n              onChange: props.onInputChange,\n              disabled: props.disabled,\n              status: props.status,\n              tips: props.tips,\n              ...props.rangeInputProps,\n            }}\n          />\n        </Popup>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","_useOverlayInnerStyle","useOverlayInnerStyle","tOverlayInnerStyle","innerPopupVisible","onInnerPopupVisibleChange","popupClasses","computed","value","_defineProperty","concat","popupVisible","_createVNode","Popup","_mergeProps","panel","disabled","_objectSpread","overlayInnerStyle","onVisibleChange","popupProps","_default","RangeInput","inputValue","onChange","onInputChange","status","tips","rangeInputProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,uBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,kBAAA;AACNC,EAAAA,KAAA,EAAAA,KAAA;EAEAC,qBAAMD,CAAAA,MAA+B,EAAA;AAC7B,IAAA,IAAAE,cAAA,GAAiBC,eAAe,mBAAmB,CAAA,CAAA;AAEzD,IAAA,IAAAC,qBAAA,GAA6EC,qBAAqBL,MAAK,CAAA;MAA/FM,kBAAoB,GAAAF,qBAAA,CAApBE,kBAAoB;MAAAC,iBAAA,GAAAH,qBAAA,CAAAG,iBAAA;MAAmBC,yBAA0B,GAAAJ,qBAAA,CAA1BI,yBAA0B,CAAA;IAEnE,IAAAC,YAAA,GAAeC,SAAS,YAAA;MAAA,OAAM,CAClCR,cAAe,CAAAS,KAAA,EAAAC,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAC,MAAA,CAETX,cAAA,CAAeS,KAAmBX,EAAAA,WAAAA,CAAAA,EAAAA,MAAAA,CAAMc,gBAAgBP,iBAAkB,CAAAI,KAAA,CAEjF,CAAA,CAAA;KAAA,CAAA,CAAA;IAEM,OAAA,YAAA;AAAA,MAAA,OAAAI,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACON,aAAaE,KAAAA;AACvB,OAAA,EAAA,CAAAI,WAAA,CAAAC,KAAA,EAAAC,UAAA,CAAA;AAAA,QAAA,gBAAA,EAAA,IAAA;QAAA,SAEWjB,EAAAA,MAAAA,CAAMkB;;;kBAGLlB,EAAAA,MAAAA,CAAMmB;mBACPnB,MAAAA,CAAMc,YAAgB,IAAAP,iBAAA,CAAkBI,KAAAA;AAC7C,OAAA,EAAAS,aAAA,CAAA;QACFC,mBAAmBf,kBAAmB,CAAAK,KAAA;AACtCW,QAAAA,eAAiB,EAAAd,yBAAAA;OACdR,EAAAA,MAAM,CAAAuB,UAAA,CAAA,CAAA,EAAA;AAAA,QAAA,SAAA,EAAA,SAAAC,QAAA,GAAA;AAAA,UAAA,OAAA,CAAAT,WAAA,CAAAU,WAAA,EAAAL,aAAA,CAAA;YAKPT,OAAOX,MAAM,CAAA0B,UAAA;YACbC,UAAU3B,MAAM,CAAA4B,aAAA;YAChBT,UAAUnB,MAAM,CAAAmB,QAAA;YAChBU,QAAQ7B,MAAM,CAAA6B,MAAA;YACdC,MAAM9B,MAAM,CAAA8B,IAAAA;WACT9B,EAAAA,MAAM,CAAA+B,eAAA,CAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA,CAAA,CAAA,CAAA;KArBhB,CAAA;AA2BL,GAAA;AACF,CAAC,CAAA;;;;"}