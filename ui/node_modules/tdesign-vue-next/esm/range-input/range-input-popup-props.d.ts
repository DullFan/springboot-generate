import { TdRangeInputPopupProps } from '../range-input/type';
import { PropType } from 'vue';
declare const _default: {
    autoWidth: BooleanConstructor;
    disabled: BooleanConstructor;
    inputValue: {
        type: PropType<import("../range-input/type").RangeInputValue>;
        default: any;
    };
    defaultInputValue: {
        type: PropType<import("../range-input/type").RangeInputValue>;
    };
    panel: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    popupProps: {
        type: PropType<import("..").TdPopupProps>;
    };
    popupVisible: BooleanConstructor;
    rangeInputProps: {
        type: PropType<import("../range-input/type").TdRangeInputProps>;
    };
    readonly: BooleanConstructor;
    status: {
        type: PropType<"error" | "default" | "success" | "warning">;
        default: "error" | "default" | "success" | "warning";
        validator(val: TdRangeInputPopupProps['status']): boolean;
    };
    tips: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    onInputChange: PropType<(value: import("../range-input/type").RangeInputValue, context?: import("../range-input/type").RangeInputValueChangeContext) => void>;
    onPopupVisibleChange: PropType<(visible: boolean, context: import("..").PopupVisibleChangeContext) => void>;
};
export default _default;
