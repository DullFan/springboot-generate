{"version":3,"file":"useInputNumber.js","sources":["../../src/input-number/useInputNumber.tsx"],"sourcesContent":["import { computed, ref, toRefs, watch } from 'vue';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport useVModel from '../hooks/useVModel';\nimport { InputNumberValue, TdInputNumberProps } from './type';\n// 计算逻辑，统一到 common 中，方便各框架复用（如超过 16 位的大数处理）\nimport {\n  canAddNumber,\n  canInputNumber,\n  canReduceNumber,\n  getMaxOrMinValidateResult,\n  getStepValue,\n  formatThousandths,\n  canSetValue,\n  formatUnCompleteNumber,\n  largeNumberToFixed,\n} from '../_common/js/input-number/number';\nimport { useFormDisabled } from '../form/hooks';\nimport { StrInputProps } from '../input';\n\n/**\n * 独立一个组件 Hook 方便用户直接使用相关逻辑 自定义任何样式的数字输入框\n */\nexport default function useInputNumber(props: TdInputNumberProps) {\n  const { classPrefix, sizeClassNames, statusClassNames } = useCommonClassName();\n  const { value, modelValue, max, min } = toRefs(props);\n  // 统一处理受控、非受控、语法糖 v-model 等\n  const [tValue, setTValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n  const inputRef = ref();\n  const userInput = ref('');\n\n  const tDisabled = useFormDisabled();\n\n  const isError = ref<'exceed-maximum' | 'below-minimum'>();\n\n  const disabledReduce = computed(\n    () => tDisabled.value || !canReduceNumber(tValue.value, props.min, props.largeNumber),\n  );\n\n  const disabledAdd = computed(() => tDisabled.value || !canAddNumber(tValue.value, props.max, props.largeNumber));\n\n  const wrapClasses = computed(() => [\n    `${classPrefix.value}-input-number`,\n    sizeClassNames[props.size],\n    {\n      [statusClassNames.disabled]: tDisabled.value,\n      [`${classPrefix.value}-is-controls-right`]: props.theme === 'column',\n      [`${classPrefix.value}-input-number--${props.theme}`]: props.theme,\n      [`${classPrefix.value}-input-number--auto-width`]: props.autoWidth,\n    },\n  ]);\n\n  const reduceClasses = computed(() => [\n    `${classPrefix.value}-input-number__decrease`,\n    { [statusClassNames.disabled]: disabledReduce.value },\n  ]);\n\n  const addClasses = computed(() => [\n    `${classPrefix.value}-input-number__increase`,\n    { [statusClassNames.disabled]: disabledAdd.value },\n  ]);\n\n  const getUserInput = (value: InputNumberValue) => {\n    if (!value && value !== 0) return '';\n    let inputStr = value || value === 0 ? String(value) : '';\n    if (!inputRef.value?.inputRef?.contains(document.activeElement)) {\n      const num = formatUnCompleteNumber(inputStr, {\n        decimalPlaces: props.decimalPlaces,\n        largeNumber: props.largeNumber,\n        isToFixed: true,\n      });\n      inputStr = num || num === 0 ? String(num) : '';\n      if (props.format) {\n        inputStr = String(props.format(value, { fixedNumber: inputStr }));\n      }\n    }\n    return inputStr;\n  };\n\n  watch(\n    tValue,\n    (val) => {\n      const { largeNumber, decimalPlaces } = props;\n      const inputValue = [undefined, null].includes(val) ? '' : String(val);\n      // userInput.value 为非合法数字，则表示用户正在输入，此时无需处理\n      if (!largeNumber && !Number.isNaN(userInput.value)) {\n        if (parseFloat(userInput.value) !== val) {\n          userInput.value = getUserInput(inputValue);\n        }\n        const fixedNumber = Number(largeNumberToFixed(inputValue, decimalPlaces, largeNumber));\n        if (\n          decimalPlaces !== undefined &&\n          ![undefined, null].includes(val) &&\n          Number(fixedNumber) !== Number(tValue.value)\n        ) {\n          setTValue(fixedNumber, { type: 'props', e: undefined });\n        }\n      }\n      if (largeNumber) {\n        userInput.value = getUserInput(inputValue);\n        if (decimalPlaces !== undefined && largeNumberToFixed(inputValue, decimalPlaces, largeNumber) !== val) {\n          setTValue(userInput.value, { type: 'props', e: undefined });\n        }\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(\n    [tValue, max, min],\n    () => {\n      // @ts-ignore 没有输入完成，则无需校验\n      if ([undefined, '', null].includes(tValue.value)) return;\n      const { max, min, largeNumber } = props;\n      const error = getMaxOrMinValidateResult({\n        value: tValue.value,\n        largeNumber,\n        max,\n        min,\n      });\n      isError.value = error;\n      props.onValidate?.({ error });\n    },\n    { immediate: true },\n  );\n\n  const handleStepValue = (op: 'add' | 'reduce') => {\n    const newValue = getStepValue({\n      op,\n      step: props.step,\n      max: props.max,\n      min: props.min,\n      lastValue: tValue.value,\n      largeNumber: props.largeNumber,\n    });\n    const { largeNumber, max, min } = props;\n    const overLimit = getMaxOrMinValidateResult({\n      value: newValue,\n      largeNumber,\n      max,\n      min,\n    });\n    return {\n      overLimit,\n      newValue,\n    };\n  };\n\n  const handleReduce = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledReduce.value || props.readonly) return;\n    const r = handleStepValue('reduce');\n    if (r.overLimit && !props.allowInputOverLimit) return;\n    setTValue(r.newValue, { type: 'reduce', e });\n  };\n\n  const handleAdd = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledAdd.value || props.readonly) return;\n    const r = handleStepValue('add');\n    if (r.overLimit && !props.allowInputOverLimit) return;\n    setTValue(r.newValue, { type: 'add', e });\n  };\n\n  const onInnerInputChange: StrInputProps['onChange'] = (inputValue, { e }) => {\n    // 千分位处理\n    const val = formatThousandths(inputValue);\n\n    if (!canInputNumber(val, props.largeNumber)) return;\n\n    userInput.value = val;\n\n    if (props.largeNumber) {\n      setTValue(val, { type: 'input', e });\n      return;\n    }\n\n    if (canSetValue(String(val), Number(tValue.value))) {\n      const newVal = val === '' ? undefined : Number(val);\n      setTValue(newVal, { type: 'input', e });\n    }\n  };\n\n  const handleBlur = (value: string, ctx: { e: FocusEvent }) => {\n    const { largeNumber, max, min, decimalPlaces } = props;\n    if (!props.allowInputOverLimit && tValue.value !== undefined) {\n      const r = getMaxOrMinValidateResult({ value: tValue.value, largeNumber, max, min });\n      if (r === 'below-minimum') {\n        setTValue(min, { type: 'blur', e: ctx.e });\n        props.onBlur?.(min, ctx);\n        return;\n      }\n      if (r === 'exceed-maximum') {\n        setTValue(max, { type: 'blur', e: ctx.e });\n        props.onBlur?.(max, ctx);\n        return;\n      }\n    }\n    const newValue = formatUnCompleteNumber(value, {\n      decimalPlaces,\n      largeNumber,\n    });\n    userInput.value = getUserInput(newValue);\n\n    if (newValue !== tValue.value) {\n      setTValue(newValue, { type: 'blur', e: ctx.e });\n    }\n    props.onBlur?.(newValue, ctx);\n  };\n\n  const handleFocus = (value: string, ctx: { e: FocusEvent }) => {\n    userInput.value = tValue.value || tValue.value === 0 ? String(tValue.value) : '';\n    props.onFocus?.(value, ctx);\n  };\n\n  const handleKeydown = (value: string, ctx: { e: KeyboardEvent }) => {\n    if (tDisabled.value) return;\n    const { e } = ctx;\n    const keyEvent = {\n      ArrowUp: handleAdd,\n      ArrowDown: handleReduce,\n    };\n    const code = e.code || e.key;\n    if (keyEvent[code] !== undefined) {\n      keyEvent[code](e);\n    }\n    props.onKeydown?.(value, ctx);\n  };\n\n  const handleKeyup = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeyup?.(value, ctx);\n  };\n\n  const handleKeypress = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeypress?.(value, ctx);\n  };\n\n  const handleEnter = (value: string, ctx: { e: KeyboardEvent }) => {\n    userInput.value = getUserInput(value);\n    const newValue = formatUnCompleteNumber(value, {\n      decimalPlaces: props.decimalPlaces,\n      largeNumber: props.largeNumber,\n    });\n    if (newValue !== value && String(newValue) !== value) {\n      setTValue(newValue, { type: 'enter', e: ctx.e });\n    }\n    props.onEnter?.(newValue, ctx);\n  };\n\n  const focus = () => {\n    (inputRef.value as any).focus();\n  };\n\n  const blur = () => {\n    (inputRef.value as any).blur();\n  };\n\n  const listeners = {\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeydown: handleKeydown,\n    onKeyup: handleKeyup,\n    onKeypress: handleKeypress,\n    onEnter: handleEnter,\n    onClick: focus,\n  };\n\n  return {\n    classPrefix,\n    wrapClasses,\n    reduceClasses,\n    addClasses,\n    tDisabled,\n    isError,\n    listeners,\n    userInput,\n    tValue,\n    inputRef,\n    focus,\n    blur,\n    handleReduce,\n    handleAdd,\n    onInnerInputChange,\n  };\n}\n"],"names":["useInputNumber","props","_useCommonClassName","useCommonClassName","classPrefix","sizeClassNames","statusClassNames","_toRefs","toRefs","value","modelValue","max","min","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","tValue","setTValue","inputRef","ref","userInput","tDisabled","useFormDisabled","isError","disabledReduce","computed","canReduceNumber","largeNumber","disabledAdd","canAddNumber","wrapClasses","concat","size","_defineProperty","disabled","theme","autoWidth","reduceClasses","addClasses","getUserInput","_inputRef$value","inputStr","String","contains","document","activeElement","num","formatUnCompleteNumber","decimalPlaces","isToFixed","format","fixedNumber","watch","val","inputValue","includes","Number","isNaN","parseFloat","largeNumberToFixed","type","e","immediate","_props$onValidate","error","getMaxOrMinValidateResult","onValidate","call","handleStepValue","op","newValue","getStepValue","step","lastValue","overLimit","handleReduce","readonly","r","allowInputOverLimit","handleAdd","onInnerInputChange","_ref4","formatThousandths","canInputNumber","canSetValue","newVal","handleBlur","ctx","_props$onBlur3","_props$onBlur","onBlur","_props$onBlur2","handleFocus","_props$onFocus","onFocus","handleKeydown","_props$onKeydown","keyEvent","ArrowUp","ArrowDown","code","key","onKeydown","handleKeyup","_props$onKeyup","onKeyup","handleKeypress","_props$onKeypress","onKeypress","handleEnter","_props$onEnter","onEnter","focus","blur","listeners","onClick"],"mappings":"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"}