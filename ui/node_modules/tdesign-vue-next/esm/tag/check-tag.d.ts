import { TdTagProps } from './type';
declare const _default: import("vue").DefineComponent<{
    checked: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultChecked: BooleanConstructor;
    checkedProps: {
        type: import("vue").PropType<TdTagProps>;
    };
    content: {
        type: import("vue").PropType<string | number | string[] | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    uncheckedProps: {
        type: import("vue").PropType<TdTagProps>;
    };
    value: {
        type: import("vue").PropType<string | number>;
    };
    onChange: import("vue").PropType<(checked: boolean, context: import("./type").CheckTagChangeContext) => void>;
    onClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    checked: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultChecked: BooleanConstructor;
    checkedProps: {
        type: import("vue").PropType<TdTagProps>;
    };
    content: {
        type: import("vue").PropType<string | number | string[] | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    uncheckedProps: {
        type: import("vue").PropType<TdTagProps>;
    };
    value: {
        type: import("vue").PropType<string | number>;
    };
    onChange: import("vue").PropType<(checked: boolean, context: import("./type").CheckTagChangeContext) => void>;
    onClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}>>, {
    disabled: boolean;
    size: import("..").SizeEnum;
    checked: boolean;
    modelValue: boolean;
    defaultChecked: boolean;
}, {}>;
export default _default;
