{"version":3,"file":"DateRangePicker.js","sources":["../../src/date-picker/DateRangePicker.tsx"],"sourcesContent":["import { defineComponent, computed, ref, watch } from 'vue';\nimport dayjs from 'dayjs';\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport isFunction from 'lodash/isFunction';\nimport isArray from 'lodash/isArray';\n\nimport props from './date-range-picker-props';\nimport { DateValue, DateRangePickerPartial } from './type';\n\nimport { RangeInputPopup as TRangeInputPopup } from '../range-input';\nimport TRangePanel from './panel/RangePanel';\nimport useRange from './hooks/useRange';\nimport {\n  parseToDayjs,\n  formatTime,\n  formatDate,\n  isValidDate,\n  getDefaultFormat,\n  initYearMonthTime,\n} from '../_common/js/date-picker/format';\nimport { subtractMonth, addMonth, extractTimeObj } from '../_common/js/date-picker/utils';\n\nexport default defineComponent({\n  name: 'TDateRangePicker',\n\n  props: {\n    ...props,\n  },\n\n  setup(props, { slots }) {\n    const COMPONENT_NAME = usePrefixClass('date-range-picker');\n\n    const {\n      inputValue,\n      popupVisible,\n      rangeInputProps,\n      popupProps,\n      value,\n      year,\n      month,\n      time,\n      cacheValue,\n      activeIndex,\n      isHoverCell,\n      isFirstValueSelected,\n      onChange,\n    } = useRange(props);\n\n    const disabled = useFormDisabled();\n\n    const formatRef = computed(() =>\n      getDefaultFormat({\n        mode: props.mode,\n        enableTimePicker: props.enableTimePicker,\n        format: props.format,\n        valueType: props.valueType,\n      }),\n    );\n\n    // 记录面板是否选中过\n    const isSelected = ref(false);\n\n    watch(popupVisible, (visible) => {\n      // 面板展开重置数据\n      if (visible) {\n        isSelected.value = false;\n        cacheValue.value = formatDate(value.value || [], {\n          format: formatRef.value.format,\n        }) as string[];\n        time.value = formatTime(\n          value.value || [dayjs().format(formatRef.value.timeFormat), dayjs().format(formatRef.value.timeFormat)],\n          formatRef.value.format,\n          formatRef.value.timeFormat,\n          props.defaultTime,\n        ) as string[];\n\n        // 空数据重置为当前年月\n        if (!value.value.length) {\n          const { year: defaultYear, month: defaultMonth } = initYearMonthTime({\n            value: value.value,\n            mode: props.mode,\n            format: formatRef.value.format,\n            enableTimePicker: props.enableTimePicker,\n          });\n          year.value = defaultYear;\n          month.value = defaultMonth;\n        } else if (value.value.length === 2 && !props.enableTimePicker) {\n          // 确保右侧面板月份比左侧大 避免两侧面板月份一致\n          const nextMonth = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).month());\n          year.value = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).year());\n          if (year.value[0] === year.value[1] && nextMonth[0] === nextMonth[1]) {\n            nextMonth[0] === 11 ? (nextMonth[0] -= 1) : (nextMonth[1] += 1);\n          }\n          month.value = nextMonth;\n          // 月份季度选择时需要确保右侧面板年份比左侧大\n          if ((props.mode === 'month' || props.mode === 'quarter') && year.value[0] === year.value[1]) {\n            year.value = [year.value[0], year.value[0] + 1];\n          }\n        } else {\n          year.value = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).year());\n          if (year.value.length === 1) year.value = [year.value[0], year.value[0]];\n\n          month.value = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).month());\n          if (month.value.length === 1) month.value = [month.value[0], Math.min(month.value[0] + 1, 11)];\n        }\n      } else {\n        activeIndex.value = 0;\n        isHoverCell.value = false;\n        isFirstValueSelected.value = false;\n        inputValue.value = formatDate(value.value, {\n          format: formatRef.value.format,\n        });\n      }\n    });\n\n    // 日期 hover\n    function onCellMouseEnter(date: Date) {\n      isHoverCell.value = true;\n      const nextValue = [...(inputValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      inputValue.value = nextValue;\n    }\n\n    // 日期 leave\n    function onCellMouseLeave() {\n      isHoverCell.value = false;\n      inputValue.value = cacheValue.value;\n    }\n\n    // 日期点击\n    function onCellClick(date: Date, { e, partial }: { e: MouseEvent; partial: DateRangePickerPartial }) {\n      props.onPick?.(date, { e, partial: activeIndex.value ? 'end' : 'start' });\n\n      isHoverCell.value = false;\n      isSelected.value = true;\n\n      const nextValue = [...(inputValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      cacheValue.value = nextValue;\n      inputValue.value = nextValue;\n\n      // date 模式自动切换年月\n      if (props.mode === 'date') {\n        // 选择了不属于面板中展示月份的日期\n        const partialIndex = partial === 'start' ? 0 : 1;\n        const isAdditional = dayjs(date).month() !== month.value[partialIndex];\n        if (isAdditional) {\n          // 保证左侧时间小于右侧\n          if (activeIndex.value === 0) month.value = [dayjs(date).month(), Math.min(dayjs(date).month() + 1, 11)];\n          if (activeIndex.value === 1) month.value = [Math.max(dayjs(date).month() - 1, 0), dayjs(date).month()];\n        }\n      }\n\n      // 有时间选择器走 confirm 逻辑\n      if (props.enableTimePicker) return;\n\n      // 确保两端都是有效值\n      const notValidIndex = nextValue.findIndex((v) => !v || !isValidDate(v, formatRef.value.format));\n\n      // 当两端都有有效值时更改 value\n      if (notValidIndex === -1 && nextValue.length === 2) {\n        // 二次修改时当其中一侧不符合上次区间规范时，清空另一侧数据\n        if (\n          !isFirstValueSelected.value &&\n          parseToDayjs(nextValue[0], formatRef.value.format).isAfter(parseToDayjs(nextValue[1], formatRef.value.format))\n        ) {\n          nextValue[activeIndex.value ? 0 : 1] = '';\n          cacheValue.value = nextValue;\n          inputValue.value = nextValue;\n        } else {\n          onChange?.(\n            formatDate(nextValue, {\n              format: formatRef.value.format,\n              targetFormat: formatRef.value.valueType,\n              autoSwap: true,\n            }) as DateValue[],\n            {\n              dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n              trigger: 'pick',\n            },\n          );\n        }\n      }\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (!isFirstValueSelected.value) {\n        let nextIndex = notValidIndex;\n        if (nextIndex === -1) nextIndex = activeIndex.value ? 0 : 1;\n        activeIndex.value = nextIndex;\n        isFirstValueSelected.value = true;\n      } else {\n        popupVisible.value = false;\n      }\n    }\n\n    // 头部快速切换\n    function onJumperClick({ trigger, partial }: { trigger: string; partial: DateRangePickerPartial }) {\n      const partialIndex = partial === 'start' ? 0 : 1;\n\n      const monthCountMap = { date: 1, week: 1, month: 12, quarter: 12, year: 120 };\n      const monthCount = monthCountMap[props.mode] || 0;\n      const current = new Date(year.value[partialIndex], month.value[partialIndex]);\n\n      let next = null;\n      if (trigger === 'prev') {\n        next = subtractMonth(current, monthCount);\n      } else if (trigger === 'current') {\n        next = new Date();\n      } else if (trigger === 'next') {\n        next = addMonth(current, monthCount);\n      }\n\n      const nextYear = [...year.value];\n      nextYear[partialIndex] = next.getFullYear();\n      const nextMonth = [...month.value];\n      nextMonth[partialIndex] = next.getMonth();\n\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 0) {\n        nextYear[1] = Math.max(nextYear[0], nextYear[1]);\n\n        if (nextYear[0] === nextYear[1]) {\n          nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);\n        }\n      }\n\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 1) {\n        nextYear[0] = Math.min(nextYear[0], nextYear[1]);\n\n        if (nextYear[0] === nextYear[1]) {\n          nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n        }\n      }\n\n      year.value = nextYear;\n      month.value = nextMonth;\n    }\n\n    // time-picker 点击\n    function onTimePickerChange(val: string) {\n      const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n      const nextInputValue = [...(inputValue.value as DateValue[])];\n      const changedInputValue = inputValue.value[activeIndex.value];\n      const currentDate = !dayjs(changedInputValue, formatRef.value.format).isValid()\n        ? dayjs().year(year.value[activeIndex.value]).month(month.value[activeIndex.value])\n        : dayjs(changedInputValue, formatRef.value.format);\n      // am pm 12小时制转化 24小时制\n      let nextHours = hours;\n      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n\n      const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n      nextInputValue[activeIndex.value] = nextDate;\n\n      const nextTime = [...time.value];\n      nextTime[activeIndex.value] = val;\n      time.value = nextTime;\n\n      isSelected.value = true;\n      inputValue.value = formatDate(nextInputValue, {\n        format: formatRef.value.format,\n      });\n      cacheValue.value = formatDate(nextInputValue, {\n        format: formatRef.value.format,\n      });\n    }\n\n    // 确定\n    function onConfirmClick({ e }: { e: MouseEvent }) {\n      const nextValue = [...(inputValue.value as string[])];\n\n      const notValidIndex = nextValue.findIndex((v) => !v || !isValidDate(v, formatRef.value.format));\n\n      // 当两端都有有效值时更改 value\n      if (notValidIndex === -1 && nextValue.length === 2) {\n        // 二次修改时当其中一侧不符合上次区间规范时，清空另一侧数据\n        if (\n          !isFirstValueSelected.value &&\n          parseToDayjs(nextValue[0], formatRef.value.format).isAfter(parseToDayjs(nextValue[1], formatRef.value.format))\n        ) {\n          nextValue[activeIndex.value ? 0 : 1] = '';\n          cacheValue.value = nextValue;\n          inputValue.value = nextValue;\n        } else {\n          props?.onConfirm?.({\n            date: nextValue.map((v) => dayjs(v).toDate()),\n            e,\n            partial: activeIndex.value ? 'end' : 'start',\n          });\n          onChange?.(\n            formatDate(nextValue, {\n              format: formatRef.value.format,\n              targetFormat: formatRef.value.valueType,\n              autoSwap: true,\n            }) as DateValue[],\n            {\n              dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n              trigger: 'confirm',\n            },\n          );\n        }\n      }\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (!isFirstValueSelected.value || nextValue.length === 1) {\n        let nextIndex = notValidIndex;\n        if (nextIndex === -1) nextIndex = activeIndex.value ? 0 : 1;\n        activeIndex.value = nextIndex;\n        isFirstValueSelected.value = true;\n      } else if (nextValue.length === 2) {\n        popupVisible.value = false;\n      }\n    }\n\n    // 预设\n    function onPresetClick(preset: any, context: any) {\n      let presetValue = preset;\n      if (isFunction(preset)) {\n        presetValue = preset();\n      }\n      if (!isArray(presetValue)) {\n        console.error(`preset: ${preset} 预设值必须是数组!`);\n      } else {\n        onChange?.(\n          formatDate(presetValue, {\n            format: formatRef.value.format,\n            targetFormat: formatRef.value.valueType,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: presetValue.map((p) => parseToDayjs(p, formatRef.value.format)),\n            trigger: 'preset',\n          },\n        );\n        popupVisible.value = false;\n        props.onPresetClick?.(context);\n      }\n    }\n\n    function onYearChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      const nextYear = [...year.value];\n      nextYear[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 0) nextYear[1] = Math.max(nextYear[0], nextYear[1]);\n      if (partialIndex === 1) nextYear[0] = Math.min(nextYear[0], nextYear[1]);\n\n      year.value = nextYear;\n    }\n\n    function onMonthChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      const nextMonth = [...month.value];\n      nextMonth[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (year.value[0] === year.value[1]) {\n        if (partialIndex === 0) nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);\n        if (partialIndex === 1) nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n      }\n\n      month.value = nextMonth;\n    }\n\n    const panelProps = computed(() => ({\n      hoverValue: (isHoverCell.value ? inputValue.value : []) as string[],\n      value: (isSelected.value ? cacheValue.value : value.value) as string[],\n      isFirstValueSelected: isFirstValueSelected.value,\n      activeIndex: activeIndex.value,\n      year: year.value,\n      month: month.value,\n      format: formatRef.value.format,\n      mode: props.mode,\n      presets: props.presets,\n      time: time.value,\n      disableDate: props.disableDate,\n      firstDayOfWeek: props.firstDayOfWeek,\n      timePickerProps: props.timePickerProps,\n      enableTimePicker: props.enableTimePicker,\n      presetsPlacement: props.presetsPlacement,\n      popupVisible: popupVisible.value,\n      panelPreselection: props.panelPreselection,\n      cancelRangeSelectLimit: props.cancelRangeSelectLimit,\n      onCellClick,\n      onCellMouseEnter,\n      onCellMouseLeave,\n      onJumperClick,\n      onConfirmClick,\n      onPresetClick,\n      onYearChange,\n      onMonthChange,\n      onTimePickerChange,\n    }));\n\n    return () => (\n      <div class={COMPONENT_NAME.value}>\n        <TRangeInputPopup\n          disabled={disabled.value}\n          status={props.status}\n          tips={props.tips || slots.tips}\n          inputValue={inputValue.value as string[]}\n          popupProps={popupProps.value}\n          rangeInputProps={rangeInputProps.value}\n          popupVisible={popupVisible.value}\n          panel={() => <TRangePanel {...panelProps.value} />}\n        />\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","setup","slots","_ref","COMPONENT_NAME","usePrefixClass","_useRange","useRange","inputValue","popupVisible","rangeInputProps","popupProps","value","year","month","time","cacheValue","activeIndex","isHoverCell","isFirstValueSelected","onChange","disabled","useFormDisabled","formatRef","computed","getDefaultFormat","mode","enableTimePicker","format","valueType","isSelected","ref","watch","visible","formatDate","formatTime","dayjs","timeFormat","defaultTime","length","_initYearMonthTime","initYearMonthTime","defaultYear","defaultMonth","nextMonth","map","v","parseToDayjs","Math","min","onCellMouseEnter","date","nextValue","_toConsumableArray","onCellMouseLeave","onCellClick","_ref2","_props2$onPick","e","partial","onPick","partialIndex","isAdditional","max","notValidIndex","findIndex","isValidDate","isAfter","targetFormat","autoSwap","dayjsValue","trigger","nextIndex","onJumperClick","_ref3","monthCountMap","week","quarter","monthCount","current","Date","next","subtractMonth","addMonth","nextYear","getFullYear","getMonth","onTimePickerChange","val","_extractTimeObj","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextInputValue","changedInputValue","currentDate","isValid","nextHours","test","nextDate","hour","minute","second","millisecond","toDate","nextTime","onConfirmClick","_ref4","_props2$onConfirm","onConfirm","onPresetClick","preset","context","presetValue","isFunction","isArray","console","error","concat","_props2$onPresetClick","p","onYearChange","nextVal","_ref5","onMonthChange","_ref6","panelProps","hoverValue","presets","disableDate","firstDayOfWeek","timePickerProps","presetsPlacement","panelPreselection","cancelRangeSelectLimit","_createVNode","status","tips","panel","TRangePanel"],"mappings":"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"}