{"version":3,"file":"single-panel.js","sources":["../../../src/time-picker/panel/single-panel.tsx"],"sourcesContent":["import { computed, defineComponent, ref, watch, toRefs, onMounted, reactive, nextTick } from 'vue';\nimport debounce from 'lodash/debounce';\nimport range from 'lodash/range';\nimport padStart from 'lodash/padStart';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\nimport { panelColProps } from './props';\nimport {\n  EPickerCols,\n  TWELVE_HOUR_FORMAT,\n  TIME_FORMAT,\n  AM,\n  PM,\n  MERIDIEM_LIST,\n} from '../../_common/js/time-picker/const';\nimport { closestLookup } from '../../_common/js/time-picker/utils';\nimport { useCommonClassName, useConfig, usePrefixClass } from '../../hooks/useConfig';\n\ndayjs.extend(customParseFormat);\n\nconst timeArr = [EPickerCols.hour, EPickerCols.minute, EPickerCols.second, EPickerCols.milliSecond];\n\nconst panelOffset = {\n  top: 15,\n  bottom: 21,\n};\n\nexport default defineComponent({\n  name: 'TTimePickerPanelCol',\n  props: {\n    ...panelColProps(),\n    position: String,\n    triggerScroll: Boolean,\n    onChange: Function,\n    resetTriggerScroll: Function,\n    isShowPanel: Boolean,\n  },\n\n  setup(props) {\n    const { globalConfig } = useConfig('timePicker');\n    const COMPONENT_NAME = usePrefixClass('time-picker__panel');\n    const { STATUS } = useCommonClassName();\n\n    const { steps, value, format, position, triggerScroll } = toRefs(props);\n\n    const cols = ref<Array<EPickerCols>>([]);\n    const bodyRef = ref();\n    const maskRef = ref(null);\n    // 每个滚动列的ref 顺序不定 所以只要有5列标识即可\n    const colsRef = reactive({ 0: null, 1: null, 2: null, 3: null, 4: null, 5: null });\n\n    const dayjsValue = computed(() => {\n      const isStepsSet = !!steps.value.filter((step) => Number(step) > 1).length;\n\n      if (value.value) return dayjs(value.value, format.value);\n\n      if (isStepsSet) return dayjs().hour(0).minute(0).second(0);\n\n      return dayjs();\n    });\n\n    // 面板打开时 触发滚动 初始化面板\n    watch(\n      () => dayjsValue.value,\n      () => {\n        if (dayjsValue.value && value.value) updateTimeScrollPos(true);\n      },\n    );\n\n    // 时间通过外部触发时 同样触发滚动\n    watch(\n      () => triggerScroll.value,\n      () => {\n        if (triggerScroll.value) {\n          updateTimeScrollPos(true);\n        }\n      },\n    );\n\n    onMounted(() => {\n      const match = format.value.match(TIME_FORMAT);\n\n      const [, startCol, hourCol, minuteCol, secondCol, milliSecondCol, endCol] = match;\n      const { meridiem, hour, minute, second, milliSecond } = EPickerCols;\n\n      const renderCol = [\n        startCol && meridiem,\n        hourCol && hour,\n        minuteCol && minute,\n        secondCol && second,\n        milliSecondCol && milliSecond,\n        endCol && meridiem,\n      ].filter((v) => !!v);\n\n      cols.value = renderCol;\n    });\n\n    // 获取每个时间的高度\n    const getItemHeight = () => {\n      const maskDom = maskRef.value?.querySelector('div');\n      if (!maskDom) {\n        return {\n          offsetHeight: 0,\n          margin: 0,\n        };\n      }\n      return {\n        offsetHeight: parseFloat(getComputedStyle(maskDom).height),\n        margin: parseFloat(getComputedStyle(maskDom).marginTop),\n      };\n    };\n\n    const timeItemCanUsed = (col: EPickerCols, el: string | number) => {\n      const colIdx = timeArr.indexOf(col);\n      if (colIdx !== -1) {\n        const params: [number, number, number, number] = [\n          dayjsValue.value.hour(),\n          dayjsValue.value.minute(),\n          dayjsValue.value.second(),\n          dayjsValue.value.millisecond(),\n        ];\n        params[colIdx] = Number(el);\n        return !props.disableTime?.(...params, { partial: position.value || 'start' })?.[col]?.includes(Number(el));\n      }\n      return true;\n    };\n\n    // 获取需要渲染的column\n    const getColList = (col: EPickerCols) => {\n      let count = 0;\n\n      if (timeArr.includes(col)) {\n        // hour、minute and second columns\n        const colIdx = timeArr.indexOf(col);\n        const colStep = steps.value[colIdx] || 1;\n\n        if (col === EPickerCols.hour)\n          count = TWELVE_HOUR_FORMAT.test(format.value) ? 11 : 23; // 小时最大为23 12小时制最大为11\n        else if (col === EPickerCols.milliSecond) count = 999; // 毫秒最大为999\n        else count = 59;\n\n        const colList = range(0, count + 1, Number(colStep)).map((v) => padStart(String(v), 2, '0')) || [];\n        return props.hideDisabledTime && !!props.disableTime\n          ? colList.filter((t) => {\n              const params: [number, number, number, number] = [\n                dayjsValue.value.hour(),\n                dayjsValue.value.minute(),\n                dayjsValue.value.second(),\n                dayjsValue.value.millisecond(),\n              ];\n              params[colIdx] = Number(t);\n              return !props\n                .disableTime?.(...params, { partial: position.value || 'start' })\n                ?.[col]?.includes(Number(t));\n            })\n          : colList;\n      }\n      // meridiem column\n      return MERIDIEM_LIST;\n    };\n\n    const getScrollDistance = (col: EPickerCols, time: number | string) => {\n      if (col === EPickerCols.hour && /[h]{1}/.test(format.value))\n        // eslint-disable-next-line no-param-reassign\n        (time as number) %= 12; // 一定是数字，直接cast\n\n      const itemIdx = getColList(col).indexOf(padStart(String(time), 2, '0'));\n      const { offsetHeight, margin } = getItemHeight();\n      const timeItemTotalHeight = offsetHeight + margin;\n      const distance = Math.abs(Math.max(0, itemIdx) * timeItemTotalHeight);\n      return distance;\n    };\n\n    const handleScroll = (col: EPickerCols, idx: number, e: MouseEvent) => {\n      let val: number | string;\n      let formattedVal: string;\n      if (!props.isShowPanel) return;\n\n      const scrollTop = (colsRef[idx]?.scrollTop || 0) + panelOffset.top;\n      const { offsetHeight, margin } = getItemHeight();\n      const timeItemTotalHeight = offsetHeight + margin;\n      let colStep = Math.abs(Math.round(scrollTop / timeItemTotalHeight + 0.5));\n\n      const meridiem = MERIDIEM_LIST[Math.min(colStep - 1, 1)].toLowerCase(); // 处理PM、AM与am、pm\n\n      if (Number.isNaN(colStep)) colStep = 1;\n      if (timeArr.includes(col)) {\n        // hour、minute、 second and milliSecond\n        let max = 59;\n        if (col === EPickerCols.hour) max = /[h]{1}/.test(format.value) ? 11 : 23; // 小时最大为23 12小时制最大为11\n        else if (col === EPickerCols.milliSecond) max = 999; // 毫秒最大为999\n\n        const colIdx = timeArr.indexOf(col);\n        const availableArr = range(0, max + 1, Number(steps.value[colIdx]) || 1);\n        val = closestLookup(\n          availableArr,\n          Number(getColList(col)[Math.min(colStep - 1, max + 1, availableArr.length - 1)]),\n          Number(steps.value[colIdx]) || 1,\n        );\n        if (Number.isNaN(val)) val = availableArr[availableArr.length - 1];\n        if (col === EPickerCols.hour && cols.value.includes(EPickerCols.meridiem) && dayjsValue.value.hour() >= 12) {\n          // 如果是十二小时制需要再判断\n          val = Number(val) + 12;\n        }\n      }\n      // meridiem columns\n      else val = meridiem;\n\n      const distance = getScrollDistance(col, val);\n      if (!dayjs(dayjsValue.value).isValid() || (value.value && !dayjs(value.value, format.value, true).isValid()))\n        return;\n\n      if (timeArr.includes(col)) {\n        if (timeItemCanUsed(col, val)) formattedVal = dayjsValue.value[col]?.(val).format(format.value);\n        else formattedVal = dayjsValue.value.format(format.value);\n      } else {\n        const currentHour = dayjsValue.value.hour();\n        if (meridiem === AM && currentHour >= 12) {\n          formattedVal = dayjsValue.value.hour(currentHour - 12).format(format.value);\n        } else if (meridiem === PM && currentHour < 12) {\n          formattedVal = dayjsValue.value.hour(currentHour + 12).format(format.value);\n        } else {\n          formattedVal = dayjsValue.value.format(format.value);\n        }\n      }\n      if (formattedVal !== value.value) props.onChange?.(formattedVal, e);\n\n      if (distance !== scrollTop) {\n        const scrollCtrl = colsRef[cols.value.indexOf(col)];\n\n        if (!scrollCtrl || scrollCtrl.scrollTop === distance) return;\n\n        scrollCtrl.scrollTo?.({\n          top: distance,\n          behavior: 'smooth',\n        });\n      }\n    };\n\n    const scrollToTime = (\n      col: EPickerCols,\n      time: number | string,\n      idx: number,\n      behavior: 'auto' | 'smooth' = 'auto',\n    ) => {\n      const distance = getScrollDistance(col, time);\n      const scrollCtrl = colsRef[idx];\n      if (!scrollCtrl || scrollCtrl.scrollTop === distance || !timeItemCanUsed(col, time)) return;\n\n      scrollCtrl.scrollTo?.({\n        top: distance,\n        behavior,\n      });\n    };\n\n    const handleTimeItemClick = (col: EPickerCols, el: string | number, idx: number, e: MouseEvent) => {\n      if (!timeItemCanUsed(col, el)) return;\n      if (timeArr.includes(col)) {\n        if (\n          col === EPickerCols.hour &&\n          dayjsValue.value.format('a') === PM &&\n          cols.value.includes(EPickerCols.meridiem)\n        ) {\n          // eslint-disable-next-line no-param-reassign\n          el = Number(el) + 12;\n        }\n        scrollToTime(col, el, idx, 'smooth');\n      } else {\n        const currentHour = dayjsValue.value.hour();\n        if (el === AM && currentHour >= 12) {\n          props.onChange?.(dayjsValue.value.hour(currentHour - 12).format(format.value), e);\n        } else if (el === PM && currentHour < 12) {\n          props.onChange?.(dayjsValue.value.hour(currentHour + 12).format(format.value), e);\n        }\n      }\n    };\n\n    // update each columns scroll distance\n    const updateTimeScrollPos = (isAutoScroll = false) => {\n      const behavior = value.value && !isAutoScroll ? 'smooth' : 'auto';\n      const isStepsSet = !!steps.value.filter((step) => Number(step) > 1).length;\n      nextTick(() => {\n        cols.value.forEach((col: EPickerCols, idx: number) => {\n          if (!isStepsSet || (isStepsSet && value.value)) {\n            // 如果没有设置大于1的steps或设置了大于1的step 正常处理滚动\n            scrollToTime(\n              col,\n              timeArr.includes(col) ? dayjsValue.value[col]?.() : dayjsValue.value.format('a'),\n              idx,\n              behavior,\n            );\n          } else {\n            // 否则初始化到每列第一个选项\n            scrollToTime(col, getColList(col)?.[0], idx, behavior);\n          }\n        });\n      });\n\n      props.resetTriggerScroll();\n    };\n\n    const isCurrent = (col: EPickerCols, colItem: string | number) => {\n      let colVal: number;\n      if (col === EPickerCols.meridiem) {\n        const currentMeridiem = dayjsValue.value.format('a');\n        return currentMeridiem === colItem;\n      }\n      colVal = dayjsValue.value[col]?.();\n      if (col === EPickerCols.hour && /[h]{1}/.test(format.value)) {\n        colVal %= 12;\n      }\n      return colVal === Number(colItem);\n    };\n\n    return () => (\n      <div class={`${COMPONENT_NAME.value}-body`} ref={bodyRef}>\n        <div class={`${COMPONENT_NAME.value}-body-active-mask`} ref={maskRef}>\n          {/* 渲染遮罩层 */}\n          {cols.value.map?.((col, idx) => (\n            <div key={`${col}_${idx}`} />\n          ))}\n        </div>\n        {/* 渲染实际滚动列 */}\n        {cols.value.map?.((col, idx) => (\n          <ul\n            key={`${col}_${idx}`}\n            ref={(el) => (colsRef[idx] = el)}\n            class={`${COMPONENT_NAME.value}-body-scroll`}\n            onScroll={debounce((e) => handleScroll(col, idx, e), 50)}\n          >\n            {getColList(col).map((el) => (\n              <li\n                key={el}\n                class={[\n                  `${COMPONENT_NAME.value}-body-scroll-item`,\n                  {\n                    [STATUS.value.disabled]: !timeItemCanUsed(col, el),\n                    [STATUS.value.current]: isCurrent(col, el),\n                  },\n                ]}\n                onClick={(e) => handleTimeItemClick(col, el, idx, e)}\n              >\n                {/* eslint-disable-next-line no-nested-ternary */}\n                {timeArr.includes(col)\n                  ? TWELVE_HOUR_FORMAT.test(format.value) && col === EPickerCols.hour && el === '00'\n                    ? '12'\n                    : el\n                  : globalConfig.value[el === AM ? 'anteMeridiem' : 'postMeridiem']}\n              </li>\n            ))}\n          </ul>\n        ))}\n      </div>\n    );\n  },\n});\n"],"names":["dayjs","extend","customParseFormat","timeArr","EPickerCols","hour","minute","second","milliSecond","panelOffset","top","bottom","defineComponent","name","props","_objectSpread","panelColProps","position","String","triggerScroll","Boolean","onChange","Function","resetTriggerScroll","isShowPanel","setup","_useConfig","useConfig","globalConfig","COMPONENT_NAME","usePrefixClass","_useCommonClassName","useCommonClassName","STATUS","_toRefs","toRefs","steps","value","format","cols","ref","bodyRef","maskRef","colsRef","reactive","dayjsValue","computed","isStepsSet","filter","step","Number","length","watch","updateTimeScrollPos","onMounted","match","TIME_FORMAT","_match","_slicedToArray","startCol","hourCol","minuteCol","secondCol","milliSecondCol","endCol","meridiem","renderCol","v","getItemHeight","_maskRef$value","maskDom","querySelector","offsetHeight","margin","parseFloat","getComputedStyle","height","marginTop","timeItemCanUsed","col","el","colIdx","indexOf","_props$disableTime","params","millisecond","disableTime","call","apply","concat","partial","includes","getColList","count","colStep","TWELVE_HOUR_FORMAT","test","colList","range","map","padStart","hideDisabledTime","t","_props$disableTime2","MERIDIEM_LIST","getScrollDistance","time","itemIdx","_getItemHeight","timeItemTotalHeight","distance","Math","abs","max","handleScroll","idx","e","_colsRef$idx","_props$onChange","val","formattedVal","scrollTop","_getItemHeight2","round","min","toLowerCase","isNaN","availableArr","closestLookup","isValid","_dayjsValue$value$col","_dayjsValue$value","currentHour","AM","PM","_scrollCtrl$scrollTo","scrollCtrl","scrollTo","behavior","scrollToTime","_scrollCtrl$scrollTo2","handleTimeItemClick","_props$onChange2","_props$onChange3","isAutoScroll","arguments","undefined","nextTick","forEach","_dayjsValue$value$col2","_dayjsValue$value2","_getColList","isCurrent","colItem","_dayjsValue$value$col3","_dayjsValue$value3","colVal","currentMeridiem","_cols$value$map","_cols$value","_cols$value$map2","_cols$value2","_createVNode","debounce","_defineProperty","disabled","current","onClick"],"mappings":"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"}