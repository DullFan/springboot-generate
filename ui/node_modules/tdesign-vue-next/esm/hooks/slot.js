/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import _typeof from '@babel/runtime/helpers/typeof';
import { getCurrentInstance, Fragment, Comment } from 'vue';
import isArray from 'lodash/isArray';

function useChildComponentSlots() {
  var instance = getCurrentInstance();
  return function (childComponentName, slots) {
    var _slots, _slots$default;
    if (!slots) {
      slots = instance.slots;
    }
    var content = ((_slots = slots) === null || _slots === void 0 || (_slots$default = _slots["default"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(_slots)) || [];
    var childList = [];
    var getChildren = function getChildren(content2) {
      if (!isArray(content2)) return;
      content2.forEach(function (item) {
        if (item.children && isArray(item.children)) {
          if (item.type !== Fragment) return;
          getChildren(item.children);
        } else {
          childList.push(item);
        }
      });
      return childList;
    };
    return getChildren(content).filter(function (item) {
      var _item$type$name;
      return (_item$type$name = item.type.name) === null || _item$type$name === void 0 ? void 0 : _item$type$name.endsWith(childComponentName);
    });
  };
}
function useChildSlots() {
  var instance = getCurrentInstance();
  return function () {
    var _slots$default2;
    var slots = instance.slots;
    var content = (slots === null || slots === void 0 || (_slots$default2 = slots["default"]) === null || _slots$default2 === void 0 ? void 0 : _slots$default2.call(slots)) || [];
    return content.filter(function (item) {
      if (_typeof(item.type) === "symbol" && !item.children) {
        return false;
      }
      return item.type !== Comment;
    }).map(function (item) {
      if (item.children && isArray(item.children) && item.type === Fragment) return item.children;
      return item;
    }).flat();
  };
}

export { useChildComponentSlots, useChildSlots };
//# sourceMappingURL=slot.js.map
