{"version":3,"file":"menu.js","sources":["../../src/menu/menu.tsx"],"sourcesContent":["import { defineComponent, ref, computed, provide, watchEffect, watch, onMounted, toRefs } from 'vue';\nimport props from './props';\nimport { MenuValue } from './type';\nimport { TdMenuInterface, TdOpenType } from './const';\nimport { renderContent, renderTNodeJSX } from '../utils/render-tnode';\nimport VMenu from './v-menu';\nimport log from '../_common/js/log/log';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport isNumber from 'lodash/isNumber';\nimport isArray from 'lodash/isArray';\n\nexport default defineComponent({\n  name: 'TMenu',\n  props: { ...props, onCollapsed: Function },\n  setup(props, ctx) {\n    const classPrefix = usePrefixClass();\n    watchEffect(() => {\n      if (ctx.slots.options) {\n        log.warnOnce('TMenu', '`options` slot is going to be deprecated, please use `operations` for slot instead.');\n      }\n    });\n    const mode = ref(props.expandType);\n    const theme = computed(() => props.theme);\n    const isMutex = computed(() => props.expandMutex);\n    const collapsed = computed(() => props.collapsed);\n    const menuClass = computed(() => [\n      `${classPrefix.value}-default-menu`,\n      `${classPrefix.value}-menu--${props.theme}`,\n      {\n        [`${classPrefix.value}-is-collapsed`]: props.collapsed,\n      },\n    ]);\n    const innerClasses = computed(() => [`${classPrefix.value}-menu`, `${classPrefix.value}-menu--scroll`]);\n    const expandWidth = computed(() => {\n      const { width } = props;\n      const format = (val: string | number) => (isNumber(val) ? `${val}px` : val);\n      if (isArray(width)) return width.map((item) => format(item));\n\n      return [format(width), '64px'];\n    });\n\n    const styles = computed(() => ({\n      height: '100%',\n      width: props.collapsed ? expandWidth.value[1] : expandWidth.value[0],\n    }));\n\n    const { value, modelValue, expanded } = toRefs(props);\n    const [activeValue, setActiveValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [expandValues, setExpand] = useDefaultValue(expanded, props.defaultExpanded, props.onExpand, 'expanded');\n    const activeValues = ref([]);\n\n    watchEffect(() => {\n      mode.value = props.collapsed ? 'popup' : props.expandType;\n      props.onCollapsed?.({ collapsed: props.collapsed });\n    });\n\n    const vMenu = new VMenu({ isMutex, expandValues: expandValues.value ? [...expandValues.value] : [] });\n    provide<TdMenuInterface>('TdMenu', {\n      activeValue,\n      activeValues,\n      expandValues,\n      mode,\n      theme,\n      isHead: false,\n      vMenu,\n      collapsed,\n      select: (value: MenuValue) => {\n        if (value !== activeValue.value) {\n          setActiveValue(value);\n        }\n      },\n      open: (value: MenuValue, type: TdOpenType) => {\n        if (mode.value === 'normal') {\n          setExpand(vMenu.expand(value));\n        } else if (type === 'add') {\n          if (expandValues.value.indexOf(value) === -1) {\n            // 可能初始expanded里包含了该value\n            setExpand([...expandValues.value, value]);\n          }\n        } else if (type === 'remove') {\n          const index = expandValues.value.indexOf(value);\n          const tmp = [...expandValues.value];\n          tmp.splice(index, 1);\n          setExpand(tmp);\n        }\n      },\n    });\n\n    // watch\n    watch(\n      () => props.expanded,\n      (value) => {\n        vMenu.expandValues = new Set(value);\n      },\n    );\n    watch(\n      () => props.collapsed,\n      (newValue, oldValue) => {\n        if (!newValue && oldValue) {\n          // 如果重新打开菜单，就将原本已经展开的子菜单重新展开\n          setExpand([...vMenu.expandValues]);\n        }\n      },\n    );\n\n    const updateActiveValues = (value: MenuValue) => {\n      activeValues.value = vMenu.select(value);\n    };\n    watch(activeValue, updateActiveValues);\n\n    // timelifes\n    onMounted(() => {\n      activeValues.value = vMenu.select(activeValue.value);\n    });\n\n    return {\n      styles,\n      classPrefix,\n      menuClass,\n      innerClasses,\n      activeValue,\n      activeValues,\n      expandValues,\n    };\n  },\n  render() {\n    const operations = renderContent(this, 'operations', 'options');\n    const logo = renderTNodeJSX(this, 'logo');\n    return (\n      <div class={this.menuClass} style={this.styles}>\n        <div class={`${this.classPrefix}-default-menu__inner`}>\n          {logo && <div class={`${this.classPrefix}-menu__logo`}>{logo}</div>}\n          <ul class={this.innerClasses}>{renderContent(this, 'default', 'content')}</ul>\n          {operations && <div class={`${this.classPrefix}-menu__operations`}>{operations}</div>}\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","onCollapsed","Function","setup","ctx","classPrefix","usePrefixClass","watchEffect","slots","options","log","warnOnce","mode","ref","expandType","theme","computed","isMutex","expandMutex","collapsed","menuClass","concat","value","_defineProperty","innerClasses","expandWidth","width","format","val","isNumber","isArray","map","item","styles","height","_toRefs","toRefs","modelValue","expanded","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","activeValue","setActiveValue","_useDefaultValue","useDefaultValue","defaultExpanded","onExpand","_useDefaultValue2","expandValues","setExpand","activeValues","_props2$onCollapsed","vMenu","VMenu","_toConsumableArray","provide","isHead","select","open","type","expand","indexOf","index","tmp","splice","watch","Set","newValue","oldValue","updateActiveValues","onMounted","render","operations","renderContent","logo","renderTNodeJSX","_createVNode"],"mappings":"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"}