/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import _typeof from '@babel/runtime/helpers/typeof';
import { defineComponent, createVNode, mergeProps } from 'vue';
import { SearchIcon } from 'tdesign-icons-vue-next';
import { Input } from '../../input/index.js';
import { usePrefixClass } from '../../hooks/useConfig.js';
import { useGlobalIcon } from '../../hooks/useGlobalIcon.js';
import '../../input/input.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/defineProperty';
import '../../input/props.js';
import '../../form/hooks.js';
import '../../hooks/tnode.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import '../../input/useInput.js';
import '@babel/runtime/helpers/slicedToArray';
import '../../form/const.js';
import '../../hooks/index.js';
import '../../hooks/icon.js';
import '../../hooks/slot.js';
import 'lodash/isArray';
import '../../hooks/useCommonClassName.js';
import '../../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../../_common/js/global-config/default-config.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_chunks/dep-4514b13f.js';
import '../../_chunks/dep-224df961.js';
import 'dayjs';
import '../../_chunks/dep-d396aaa6.js';
import '../../config-provider/type.js';
import '../../hooks/useDefaultValue.js';
import '../../hooks/useDestroyOnClose.js';
import '../../hooks/useKeepAnimation.js';
import '../../hooks/useRipple.js';
import '../../utils/set-style.js';
import '../../hooks/useVirtualScroll.js';
import '../../hooks/useVModel.js';
import '../../hooks/useImagePreviewUrl.js';
import '../../_common/js/upload/utils.js';
import '../../_common/js/log/log.js';
import '../../input/useLengthLimit.js';
import '../../_common/js/log/index.js';
import '../../_common/js/utils/helper.js';
import '@babel/runtime/helpers/toConsumableArray';
import 'lodash/isNull';
import 'lodash/isUndefined';
import 'lodash/isNumber';
import '../../input/useInputEventHandler.js';
import '../../input/useInputWidth.js';
import '../../hooks/useResizeObserver.js';
import '../../input/input-group.js';
import '../../input/input-group-props.js';
import '../../utils/withInstall.js';
import '../../input/style';
import '../../input/type.js';

var Search = defineComponent({
  name: "TTransferSearch",
  props: {
    value: {
      type: String,
      "default": ""
    },
    search: {
      type: [Boolean, Object],
      "default": false
    },
    placeholder: {
      type: String,
      "default": ""
    },
    onChange: Function
  },
  setup: function setup(props) {
    var classPrefix = usePrefixClass();
    var _useGlobalIcon = useGlobalIcon({
        SearchIcon: SearchIcon
      }),
      SearchIcon$1 = _useGlobalIcon.SearchIcon;
    var handleChange = function handleChange(value, changeCtx) {
      var _props$onChange;
      (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call(props, {
        value: value,
        e: changeCtx.e
      });
    };
    var inputProps = _typeof(props.search) === "object" ? props.search : {
      clearable: true
    };
    return function () {
      return createVNode("div", {
        "class": "".concat(classPrefix.value, "-transfer__search-wrapper")
      }, [createVNode(Input, mergeProps(inputProps, {
        "defaultValue": props.value,
        "onChange": handleChange,
        "placeholder": props.placeholder
      }), {
        "default": function _default() {
          return [createVNode(SearchIcon$1, {
            "slot": "suffix-icon"
          }, null)];
        }
      })]);
    };
  }
});

export { Search as default };
//# sourceMappingURL=transfer-search.js.map
