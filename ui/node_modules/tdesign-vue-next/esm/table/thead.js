/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import _typeof from '@babel/runtime/helpers/typeof';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { isVNode, defineComponent, ref, computed, h, createVNode, mergeProps } from 'vue';
import isFunction from 'lodash/isFunction';
import { getColumnFixedStyles } from './hooks/useFixed.js';
import useClassName from './hooks/useClassName.js';
import { renderTitle } from './hooks/useTableHeader.js';
import TEllipsis from './ellipsis.js';
import { formatClassNames } from './utils.js';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/get';
import 'lodash/debounce';
import 'lodash/xorWith';
import '../_common/js/log/index.js';
import '../_common/js/log/log.js';
import '../_common/js/utils/getScrollbarWidth.js';
import '../_common/js/utils/helper.js';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/objectWithoutProperties';
import 'lodash/isString';
import 'lodash/isNull';
import 'lodash/isUndefined';
import 'lodash/isNumber';
import 'lodash/isArray';
import '../utils/dom.js';
import '../_chunks/dep-224df961.js';
import '../utils/easing.js';
import 'lodash/pick';
import '../hooks/useConfig.js';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_chunks/dep-4514b13f.js';
import 'dayjs';
import '../_chunks/dep-d396aaa6.js';
import '../config-provider/type.js';
import './hooks/useMultiHeader.js';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../tooltip/index.js';
import '../tooltip/tooltip.js';
import 'lodash/omit';
import '../tooltip/props.js';
import '../popup/props.js';
import '../popup/index.js';
import '../popup/popup.js';
import '@popperjs/core';
import '../hooks/index.js';
import '../hooks/icon.js';
import '../hooks/slot.js';
import '../hooks/tnode.js';
import '../hooks/useCommonClassName.js';
import '../hooks/useDefaultValue.js';
import '../hooks/useDestroyOnClose.js';
import '../hooks/useKeepAnimation.js';
import '../hooks/useRipple.js';
import '../utils/set-style.js';
import '../hooks/useVirtualScroll.js';
import '../hooks/useVModel.js';
import '../hooks/useImagePreviewUrl.js';
import '../_common/js/upload/utils.js';
import '../_common/js/utils/set-style.js';
import '../popup/container.js';
import '../hooks/useResizeObserver.js';
import '../utils/withInstall.js';
import '../popup/style';
import '../popup/type.js';
import '../tooltip/util.js';
import '../tooltip/style';
import '../tooltip/type.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var THead = defineComponent({
  name: "THead",
  props: {
    classPrefix: String,
    ellipsisOverlayClassName: String,
    isFixedHeader: Boolean,
    thDraggable: Boolean,
    maxHeight: [String, Number],
    height: [String, Number],
    rowAndColFixedPosition: Map,
    thWidthList: Object,
    bordered: Boolean,
    isMultipleHeader: Boolean,
    resizable: Boolean,
    attach: [String, Function],
    spansAndLeafNodes: Object,
    thList: Array,
    columnResizeParams: Object,
    showColumnShadow: Object
  },
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var theadRef = ref();
    var classnames = useClassName();
    var tableHeaderClasses = classnames.tableHeaderClasses,
      tableBaseClass = classnames.tableBaseClass;
    var theadClasses = computed(function () {
      return [tableHeaderClasses.header, _defineProperty(_defineProperty(_defineProperty({}, tableHeaderClasses.fixed, Boolean(props.maxHeight || props.height)), tableBaseClass.bordered, props.bordered && props.isMultipleHeader), tableHeaderClasses.multipleHeader, props.isMultipleHeader)];
    });
    var colspanSkipMap = computed(function () {
      var map = {};
      var list = props.thList[0];
      for (var i = 0, len = list.length; i < len; i++) {
        var item = list[i];
        if (item.colspan > 1) {
          for (var j = i + 1; j < i + item.colspan; j++) {
            if (list[j]) {
              map[list[j].colKey] = true;
            }
          }
        }
      }
      return map;
    });
    var getTableNode = function getTableNode(thead) {
      var parent = thead;
      while (parent) {
        var _parent;
        parent = parent.parentNode;
        if ((_parent = parent) !== null && _parent !== void 0 && (_parent = _parent.classList) !== null && _parent !== void 0 && _parent.contains("".concat(props.classPrefix, "-table"))) {
          break;
        }
      }
      return parent;
    };
    return _objectSpread(_objectSpread({}, classnames), {}, {
      colspanSkipMap: colspanSkipMap,
      theadClasses: theadClasses,
      theadRef: theadRef,
      slots: slots,
      getTableNode: getTableNode
    });
  },
  render: function render() {
    var _this = this;
    var renderThNodeList = function renderThNodeList(rowAndColFixedPosition, thWidthList) {
      var thBorderMap = /* @__PURE__ */new Map();
      var thRowspanAndColspan = _this.spansAndLeafNodes.rowspanAndColspanMap;
      return _this.thList.map(function (row, rowIndex) {
        var thRow = row.map(function (col, index) {
          var _col$children;
          if (_this.colspanSkipMap[col.colKey]) return null;
          var rowspanAndColspan = thRowspanAndColspan.get(col);
          if (index === 0 && rowspanAndColspan.rowspan > 1) {
            for (var j = rowIndex + 1; j < rowIndex + rowspanAndColspan.rowspan; j++) {
              thBorderMap.set(_this.thList[j][0], true);
            }
          }
          var thStyles = getColumnFixedStyles(col, index, rowAndColFixedPosition, _this.tableColFixedClasses);
          var colParams = {
            col: col,
            colIndex: index,
            row: {},
            rowIndex: -1
          };
          var customClasses = formatClassNames(col.className, _objectSpread(_objectSpread({}, colParams), {}, {
            type: "th"
          }));
          var isLeftFixedActive = _this.showColumnShadow.left && col.fixed === "left";
          var isRightFixedActive = _this.showColumnShadow.right && col.fixed === "right";
          var canDragSort = _this.thDraggable && !(isLeftFixedActive || isRightFixedActive);
          var thClasses = [thStyles.classes, customClasses, col.thClassName, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, _this.tableHeaderClasses.thBordered, thBorderMap.get(col)), "".concat(_this.classPrefix, "-table__th-").concat(col.colKey), col.colKey), _this.tdAlignClasses[col.align], col.align && col.align !== "left"), _this.tableDraggableClasses.dragSortTh, canDragSort)];
          var withoutChildren = !((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length);
          var width = withoutChildren && thWidthList !== null && thWidthList !== void 0 && thWidthList[col.colKey] ? "".concat(thWidthList === null || thWidthList === void 0 ? void 0 : thWidthList[col.colKey], "px") : void 0;
          var styles = _objectSpread(_objectSpread({}, thStyles.style || {}), {}, {
            width: width
          });
          var innerTh = renderTitle(_this.slots, col, index);
          var resizeColumnListener = _this.resizable || !canDragSort ? {
            onMousedown: function onMousedown(e) {
              if (_this.resizable) {
                var _this$columnResizePar, _this$columnResizePar2;
                (_this$columnResizePar = _this.columnResizeParams) === null || _this$columnResizePar === void 0 || (_this$columnResizePar2 = _this$columnResizePar.onColumnMousedown) === null || _this$columnResizePar2 === void 0 || _this$columnResizePar2.call(_this$columnResizePar, e, col, index);
              }
              if (!canDragSort) {
                var timer = setTimeout(function () {
                  var _thList$index;
                  var thList = _this.theadRef.querySelectorAll("th");
                  (_thList$index = thList[index]) === null || _thList$index === void 0 || _thList$index.removeAttribute("draggable");
                  clearTimeout(timer);
                }, 10);
              }
            },
            onMousemove: function onMousemove(e) {
              var _this$columnResizePar3, _this$columnResizePar4;
              _this.resizable && ((_this$columnResizePar3 = _this.columnResizeParams) === null || _this$columnResizePar3 === void 0 || (_this$columnResizePar4 = _this$columnResizePar3.onColumnMouseover) === null || _this$columnResizePar4 === void 0 ? void 0 : _this$columnResizePar4.call(_this$columnResizePar3, e, col));
            }
          } : {};
          var content = isFunction(col.ellipsisTitle) ? col.ellipsisTitle(h, {
            col: col,
            colIndex: index
          }) : void 0;
          var isEllipsis = col.ellipsisTitle !== void 0 ? Boolean(col.ellipsisTitle) : Boolean(col.ellipsis);
          var attrs = (isFunction(col.attrs) ? col.attrs(_objectSpread(_objectSpread({}, colParams), {}, {
            type: "th"
          })) : col.attrs) || {};
          if (col.colspan > 1) {
            attrs.colspan = col.colspan;
          }
          return createVNode("th", mergeProps({
            "key": col.colKey,
            "data-colkey": col.colKey,
            "class": thClasses,
            "style": styles
          }, attrs, rowspanAndColspan, resizeColumnListener), [createVNode("div", {
            "class": _this.tableBaseClass.thCellInner
          }, [isEllipsis ? createVNode(TEllipsis, {
            "placement": "bottom",
            "attach": _this.attach || (_this.theadRef ? function () {
              return _this.getTableNode(_this.theadRef);
            } : void 0),
            "tooltipContent": content && function () {
              return content;
            },
            "tooltipProps": _typeof(col.ellipsisTitle) === "object" ? col.ellipsisTitle : void 0,
            "overlayClassName": _this.ellipsisOverlayClassName,
            "classPrefix": _this.classPrefix
          }, _isSlot(innerTh) ? innerTh : {
            "default": function _default() {
              return [innerTh];
            }
          }) : innerTh])]);
        });
        return createVNode("tr", {
          "key": rowIndex
        }, [thRow]);
      });
    };
    return createVNode("thead", {
      "ref": "theadRef",
      "class": this.theadClasses
    }, [renderThNodeList(this.rowAndColFixedPosition, this.thWidthList)]);
  }
});

export { THead as default };
//# sourceMappingURL=thead.js.map
