import { GlobalConfigProvider } from './type';
import type { ConfigProviderProps } from './config-provider';
export * from './type';
export declare function useConfig<T extends keyof GlobalConfigProvider>(componentName?: T, componentLocale?: GlobalConfigProvider[T]): {
    t: <T_1>(pattern: T_1, ...args: any[]) => any;
    global: import("vue").ComputedRef<{} & GlobalConfigProvider[T]>;
    globalConfig: import("vue").ComputedRef<{} & GlobalConfigProvider[T]>;
    classPrefix: import("vue").ComputedRef<string>;
};
export declare const provideConfig: (props: ConfigProviderProps) => import("vue").ComputedRef<GlobalConfigProvider>;
