{"version":3,"file":"tab-nav.js","sources":["../../src/tabs/tab-nav.tsx"],"sourcesContent":["import { h, defineComponent, Transition, ref, computed, watch, onMounted, nextTick } from 'vue';\nimport debounce from 'lodash/debounce';\nimport {\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  AddIcon as TdAddIcon,\n} from 'tdesign-icons-vue-next';\nimport { TdTabsProps } from './type';\nimport tabProps from './props';\nimport tabBase from '../_common/js/tabs/base';\n\n// 子组件\nimport TTabPanel from './tab-panel';\nimport TTabNavItem from './tab-nav-item';\nimport TTabNavBar from './tab-nav-bar';\n\n// hooks\nimport { useResize } from '../hooks/useListener';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport useDragSort from '../hooks/useDragSort';\nimport isFunction from 'lodash/isFunction';\n\nconst { calculateCanToLeft, calculateCanToRight, calcScrollLeft, scrollToLeft, scrollToRight, moveActiveTabIntoView } =\n  tabBase;\n\nexport default defineComponent({\n  name: 'TTabNav',\n  ...{ resizeObserver: null },\n  props: {\n    theme: tabProps.theme,\n    panels: {\n      type: Array as { new (): Array<InstanceType<typeof TTabPanel>> },\n      default: (): Array<InstanceType<typeof TTabPanel>> => [] as Array<InstanceType<typeof TTabPanel>>,\n    },\n    action: Array,\n    value: tabProps.value,\n    placement: tabProps.placement,\n    size: tabProps.size,\n    disabled: tabProps.disabled,\n    addable: tabProps.addable,\n    onChange: tabProps.onChange,\n    onAdd: tabProps.onAdd,\n    onRemove: tabProps.onRemove,\n    dragSort: tabProps.dragSort,\n    onDragSort: tabProps.onDragSort,\n  },\n  setup(props) {\n    const componentName = usePrefixClass('tabs');\n    const { ChevronLeftIcon, ChevronRightIcon, AddIcon } = useGlobalIcon({\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      AddIcon: TdAddIcon,\n    });\n    const classPrefix = usePrefixClass();\n\n    const { SIZE } = useCommonClassName();\n\n    const scrollLeft = ref(0);\n    const canToLeft = ref(false);\n    const canToRight = ref(false);\n\n    // refs\n    // const panels = ref(props.panels);\n    const navsContainerRef = ref();\n    const navsWrapRef = ref();\n    const leftOperationsRef = ref();\n    const toLeftBtnRef = ref();\n    const rightOperationsRef = ref();\n    const toRightBtnRef = ref();\n    const activeTabRef = ref();\n\n    const getRefs = () => ({\n      navsContainer: navsContainerRef.value,\n      navsWrap: navsWrapRef.value,\n      leftOperations: leftOperationsRef.value,\n      toLeftBtn: toLeftBtnRef.value,\n      rightOperations: rightOperationsRef.value,\n      toRightBtn: toRightBtnRef.value,\n    });\n\n    // left right位置 选项卡的位置是在左右侧垂直方向铺开的\n    const isVerticalPlacement = computed(() => ['left', 'right'].includes(props.placement.toLowerCase()));\n\n    // style\n    const wrapTransformStyle = computed(() => {\n      if (isVerticalPlacement.value) return {};\n      return {\n        transform: `translate3d(${-scrollLeft.value}px, 0, 0)`,\n      };\n    });\n    const navsContainerStyle = computed(() => {\n      return props.addable ? { 'min-height': '48px' } : null;\n    });\n\n    // class\n    const iconBaseClass = computed(() => {\n      return {\n        [`${componentName.value}__btn`]: true,\n        [SIZE.value.medium]: props.size === 'medium',\n        [SIZE.value.large]: props.size === 'large',\n      };\n    });\n    const leftIconClass = computed(() => {\n      return {\n        [`${componentName.value}__btn--left`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const rightIconClass = computed(() => {\n      return {\n        [`${componentName.value}__btn--right`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const addIconClass = computed(() => {\n      return {\n        [`${componentName.value}__add-btn`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const navContainerClass = computed(() => {\n      return {\n        [`${componentName.value}__nav-container`]: true,\n        [`${componentName.value}__nav--card`]: props.theme === 'card',\n        [`${classPrefix.value}-is-${props.placement}`]: true,\n        [`${classPrefix.value}-is-addable`]: props.addable,\n      };\n    });\n    const navScrollContainerClass = computed(() => {\n      return {\n        [`${componentName.value}__nav-scroll`]: true,\n        [`${classPrefix.value}-is-scrollable`]: canToLeft.value || canToRight.value,\n      };\n    });\n\n    const navsWrapClass = computed(() => {\n      return [\n        `${componentName.value}__nav-wrap`,\n        `${classPrefix.value}-is-smooth`,\n        { [`${classPrefix.value}-is-vertical`]: isVerticalPlacement.value },\n      ];\n    });\n\n    const totalAdjust = () => {\n      nextTick(() => {\n        adjustArrowDisplay();\n        adjustScrollLeft();\n      });\n    };\n    // watch\n    watch([scrollLeft, () => props.placement, () => props.panels], totalAdjust);\n\n    // life times\n    useResize(debounce(totalAdjust), navsContainerRef.value);\n\n    onMounted(() => {\n      calculateMountedScrollLeft();\n      totalAdjust();\n    });\n\n    // calculate scroll left after mounted\n    const calculateMountedScrollLeft = () => {\n      if (isVerticalPlacement.value) return;\n      nextTick(() => {\n        const container = navsContainerRef.value;\n        const activeTabEl = activeTabRef.value;\n        const activeTabWidth = activeTabEl?.offsetWidth || 0;\n        const containerWidth = container?.offsetWidth || 0;\n\n        const activeElIndex = Array.prototype.indexOf.call(navsWrapRef.value.children, activeTabEl); // index of the active tab\n\n        const isRightBtnShow =\n          navs.value.length - activeElIndex >= Math.round((containerWidth - activeTabWidth) / activeTabWidth) ? 1 : 0; // calculate whether the right btn is display or not\n        const totalWidthBeforeActiveTab = activeTabEl?.offsetLeft;\n        if (totalWidthBeforeActiveTab > containerWidth - activeTabWidth)\n          scrollLeft.value = totalWidthBeforeActiveTab - isRightBtnShow * activeTabWidth;\n      });\n    };\n\n    // methods\n    const adjustScrollLeft = () => {\n      scrollLeft.value = calcScrollLeft(getRefs(), scrollLeft.value);\n    };\n\n    const adjustArrowDisplay = () => {\n      canToLeft.value = calculateCanToLeft(getRefs(), scrollLeft.value, props.placement);\n      canToRight.value = calculateCanToRight(getRefs(), scrollLeft.value, props.placement);\n    };\n\n    const handleScroll = (direction: 'left' | 'right') => {\n      if (direction === 'left') {\n        scrollLeft.value = scrollToLeft(getRefs(), scrollLeft.value);\n      } else {\n        scrollLeft.value = scrollToRight(getRefs(), scrollLeft.value);\n      }\n    };\n\n    const handleAddTab = (e: MouseEvent) => {\n      props.onAdd?.({ e });\n    };\n\n    const tabClick = (event: MouseEvent, nav: Partial<InstanceType<typeof TTabPanel>>) => {\n      const { value, disabled } = nav;\n      if (disabled || props.value === value) {\n        return false;\n      }\n      props.onChange(value);\n    };\n    const removeBtnClick = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ e, value, index });\n    };\n    const setActiveTab = (ref: any) => {\n      if (!ref?.$el) return;\n      if (ref?.value === props.value && activeTabRef.value !== ref.$el) {\n        activeTabRef.value = ref.$el;\n        scrollLeft.value = moveActiveTabIntoView(\n          {\n            activeTab: activeTabRef.value,\n            ...getRefs(),\n          },\n          scrollLeft.value,\n        );\n      }\n    };\n\n    const { setNavsWrap } = useDragSort(props);\n\n    onMounted(() => {\n      setNavsWrap(navsWrapRef.value);\n    });\n    // renders\n    const navs = computed(() => {\n      return props.panels.map((panel, index) => {\n        let label;\n        if (panel?.children?.label) {\n          label = panel.children.label();\n        } else if (isFunction(panel.label)) {\n          label = panel.label(h);\n        } else {\n          label = panel.label || `选项卡${index + 1}`;\n        }\n        let draggable = props.dragSort;\n        if (draggable && panel.draggable === false) {\n          draggable = panel.draggable;\n        }\n        return (\n          <TTabNavItem\n            ref={setActiveTab}\n            draggable={draggable}\n            key={panel.value}\n            index={index}\n            theme={props.theme}\n            size={props.size}\n            placement={props.placement}\n            label={label}\n            active={panel.value === props.value}\n            disabled={props.disabled || panel.disabled}\n            removable={panel.removable}\n            value={panel.value}\n            onClick={(e: MouseEvent) => tabClick(e, panel)}\n            onRemove={removeBtnClick}\n          />\n        );\n      });\n    });\n    const renderArrows = () => {\n      return [\n        <div\n          ref={leftOperationsRef}\n          class={[`${componentName.value}__operations`, `${componentName.value}__operations--left`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToLeft.value ? (\n              <div ref={toLeftBtnRef} class={leftIconClass.value} onClick={() => handleScroll('left')}>\n                <ChevronLeftIcon />\n              </div>\n            ) : null}\n          </Transition>\n        </div>,\n        <div\n          ref={rightOperationsRef}\n          class={[`${componentName.value}__operations`, `${componentName.value}__operations--right`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToRight.value ? (\n              <div ref={toRightBtnRef} class={rightIconClass.value} onClick={() => handleScroll('right')}>\n                <ChevronRightIcon></ChevronRightIcon>\n              </div>\n            ) : null}\n          </Transition>\n          {props.addable ? (\n            <div class={addIconClass.value} onClick={handleAddTab}>\n              <AddIcon></AddIcon>\n            </div>\n          ) : null}\n          {props.action}\n        </div>,\n      ];\n    };\n    const renderNavs = () => {\n      return (\n        <div class={navContainerClass.value}>\n          <div class={navScrollContainerClass.value}>\n            <div ref={navsWrapRef} class={navsWrapClass.value} style={wrapTransformStyle.value}>\n              {props.theme !== 'card' && (\n                <TTabNavBar placement={props.placement} value={props.value} navs={navs.value} />\n              )}\n              {navs.value}\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      return (\n        <div ref={navsContainerRef} class={[`${componentName.value}__nav`]} style={navsContainerStyle.value}>\n          {renderArrows()}\n          {renderNavs()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["calculateCanToLeft","tabBase","calculateCanToRight","calcScrollLeft","scrollToLeft","scrollToRight","moveActiveTabIntoView","defineComponent","_objectSpread","name","resizeObserver","props","theme","tabProps","panels","type","Array","_default","action","value","placement","size","disabled","addable","onChange","onAdd","onRemove","dragSort","onDragSort","setup","componentName","usePrefixClass","_useGlobalIcon","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","AddIcon","TdAddIcon","classPrefix","_useCommonClassName","useCommonClassName","SIZE","scrollLeft","ref","canToLeft","canToRight","navsContainerRef","navsWrapRef","leftOperationsRef","toLeftBtnRef","rightOperationsRef","toRightBtnRef","activeTabRef","getRefs","navsContainer","navsWrap","leftOperations","toLeftBtn","rightOperations","toRightBtn","isVerticalPlacement","computed","includes","toLowerCase","wrapTransformStyle","transform","concat","navsContainerStyle","iconBaseClass","_defineProperty","medium","large","leftIconClass","rightIconClass","addIconClass","navContainerClass","navScrollContainerClass","navsWrapClass","totalAdjust","nextTick","adjustArrowDisplay","adjustScrollLeft","watch","useResize","debounce","onMounted","calculateMountedScrollLeft","container","activeTabEl","activeTabWidth","offsetWidth","containerWidth","activeElIndex","prototype","indexOf","call","children","isRightBtnShow","navs","length","Math","round","totalWidthBeforeActiveTab","offsetLeft","handleScroll","direction","handleAddTab","e","_props$onAdd","tabClick","event","nav","removeBtnClick","_ref5","index","setActiveTab","$el","activeTab","_useDragSort","useDragSort","setNavsWrap","map","panel","_panel$children","label","isFunction","h","draggable","_createVNode","TTabNavItem","removable","onClick","renderArrows","Transition","renderNavs","TTabNavBar"],"mappings":"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"}