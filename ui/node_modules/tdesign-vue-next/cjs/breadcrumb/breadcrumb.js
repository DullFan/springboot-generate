/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var breadcrumb_props = require('./props.js');
var breadcrumb_breadcrumbItem = require('./breadcrumb-item.js');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useConfig = require('../hooks/useConfig.js');
require('@babel/runtime/helpers/defineProperty');
require('tdesign-icons-vue-next');
require('./breadcrumb-item-props.js');
require('../tooltip/index.js');
require('../tooltip/tooltip.js');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isFunction');
require('lodash/omit');
require('../tooltip/props.js');
require('../popup/props.js');
require('../popup/index.js');
require('../popup/popup.js');
require('@popperjs/core');
require('lodash/isObject');
require('lodash/debounce');
require('lodash/isString');
require('../hooks/useVModel.js');
require('lodash/kebabCase');
require('../utils/dom.js');
require('../_chunks/dep-4980a22e.js');
require('lodash/isArray');
require('../utils/easing.js');
require('../_common/js/utils/set-style.js');
require('../popup/container.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../hooks/useResizeObserver.js');
require('../utils/withInstall.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('dayjs');
require('lodash/camelCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('../tooltip/util.js');
require('../hooks/useGlobalIcon.js');

var _Breadcrumb = Vue.defineComponent({
  name: "TBreadcrumb",
  props: breadcrumb_props["default"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _toRefs = Vue.toRefs(props2),
      separator = _toRefs.separator,
      theme = _toRefs.theme,
      maxItemWidth = _toRefs.maxItemWidth;
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("breadcrumb");
    Vue.provide("tBreadcrumb", Vue.reactive({
      separator: separator,
      theme: theme,
      slots: {
        separator: slots.separator
      },
      maxItemWidth: maxItemWidth
    }));
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    return function () {
      var content = renderTNodeJSX("default");
      if (props2.options && props2.options.length) {
        content = props2.options.map(function (option, index) {
          return Vue.createVNode(breadcrumb_breadcrumbItem["default"], Vue.mergeProps(option, {
            "key": index
          }), {
            "default": function _default() {
              return [option["default"] || option.content];
            }
          });
        });
      }
      return Vue.createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [content]);
    };
  }
});

exports["default"] = _Breadcrumb;
//# sourceMappingURL=breadcrumb.js.map
