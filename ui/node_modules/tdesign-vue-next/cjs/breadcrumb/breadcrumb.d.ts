import { TdBreadcrumbItemProps } from './type';
declare const _default: import("vue").DefineComponent<{
    maxItemWidth: {
        type: StringConstructor;
        default: any;
    };
    options: {
        type: import("vue").PropType<TdBreadcrumbItemProps[]>;
    };
    separator: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    theme: {
        type: import("vue").PropType<"light">;
        default: "light";
        validator(val: "light"): boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    maxItemWidth: {
        type: StringConstructor;
        default: any;
    };
    options: {
        type: import("vue").PropType<TdBreadcrumbItemProps[]>;
    };
    separator: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    theme: {
        type: import("vue").PropType<"light">;
        default: "light";
        validator(val: "light"): boolean;
    };
}>>, {
    theme: "light";
    maxItemWidth: string;
}, {}>;
export default _default;
