/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var hooks_tnode = require('../hooks/tnode.js');
var select_optionGroupProps = require('./option-group-props.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var select_helper = require('./helper.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-4980a22e.js');
require('dayjs');
require('lodash/isArray');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _OptionGroup = Vue.defineComponent({
  name: "TOptionGroup",
  props: _objectSpread({}, select_optionGroupProps["default"]),
  setup: function setup(props2) {
    var selectProvider = Vue.inject(select_helper.selectInjectKey);
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("select-option-group");
    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
      SIZE = _useCommonClassName.SIZE;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var classes = Vue.computed(function () {
      return [COMPONENT_NAME.value, SIZE.value[selectProvider.value.size], _defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "__divider"), props2.divider)];
    });
    return function () {
      return Vue.createVNode("li", {
        "class": classes.value
      }, [Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__header")
      }, [props2.label]), renderTNodeJSX("default")]);
    };
  }
});

exports["default"] = _OptionGroup;
//# sourceMappingURL=optionGroup.js.map
