{"version":3,"file":"tree-item.js","sources":["../../src/tree/tree-item.tsx"],"sourcesContent":["import {\n  TypePropType,\n  defineComponent,\n  TypeCreateElement,\n  ref,\n  TreeItemDefinition,\n  useRipple,\n  getCreateElement,\n} from './adapt';\nimport { TypeTreeItemProps } from './tree-types';\nimport useItemState from './hooks/useItemState';\nimport useTreeItem from './hooks/useTreeItem';\n\nexport const treeItemProps = {\n  stateId: {\n    type: String as TypePropType<TypeTreeItemProps['stateId']>,\n  },\n  itemKey: {\n    type: String as TypePropType<TypeTreeItemProps['itemKey']>,\n  },\n  rowIndex: {\n    type: Number as TypePropType<TypeTreeItemProps['rowIndex']>,\n  },\n  treeScope: {\n    type: Object as TypePropType<TypeTreeItemProps['treeScope']>,\n  },\n};\n\nexport default defineComponent({\n  props: treeItemProps,\n  ...TreeItemDefinition,\n  setup(props: TypeTreeItemProps, context) {\n    const { state } = useItemState(props, context);\n    const { treeItemRef } = state;\n    const label = ref<HTMLElement>();\n    useRipple(label);\n    const { renderItemNode } = useTreeItem(state);\n\n    return {\n      treeItemRef,\n      renderItemNode,\n    };\n  },\n  render(h: TypeCreateElement) {\n    const createElement = getCreateElement(h);\n    // 这个类型判断看起来多此一举\n    // 然而单元测试时没有它却会报错:\n    // This expression is not callable. Type '{}' has no call signatures.\n    if (typeof this.renderItemNode === 'function') {\n      return this.renderItemNode(createElement);\n    }\n    return null;\n  },\n});\n"],"names":["treeItemProps","stateId","type","String","itemKey","rowIndex","Number","treeScope","Object","defineComponent","_objectSpread","props","TreeItemDefinition","setup","context","_useItemState","useItemState","state","treeItemRef","ref","_useTreeItem","useTreeItem","renderItemNode","render","h","createElement","getCreateElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaO,IAAMA,aAAgB,GAAA;AAC3BC,EAAAA,OAAS,EAAA;AACPC,IAAAA,IAAM,EAAAC,MAAAA;GACR;AACAC,EAAAA,OAAS,EAAA;AACPF,IAAAA,IAAM,EAAAC,MAAAA;GACR;AACAE,EAAAA,QAAU,EAAA;AACRH,IAAAA,IAAM,EAAAI,MAAAA;GACR;AACAC,EAAAA,SAAW,EAAA;AACTL,IAAAA,IAAM,EAAAM,MAAAA;AACR,GAAA;AACF,EAAA;AAEA,eAAeC,mBAAgB,CAAAC,aAAA,CAAAA,aAAA,CAAA;AAC7BC,EAAAA,KAAO,EAAAX,aAAAA;AAAA,CAAA,EACJY,6BAAA,CAAA,EAAA,EAAA,EAAA;AACHC,EAAAA,KAAA,EAAAA,SAAAA,KAAAA,CAAMF,OAA0BG,OAAS,EAAA;AACvC,IAAA,IAAAC,aAAA,GAAkBC,kCAAA,CAAaL,OAAOG,OAAO,CAAA;MAArCG,KAAA,GAAAF,aAAA,CAAAE,KAAA,CAAA;AACF,IAAA,IAAEC,cAAgBD,KAAA,CAAhBC;AACR,IAAcC,OAAiB,GAAA;AAE/B,IAAA,IAAAC,YAAA,GAA2BC,iCAAA,CAAYJ,KAAK,CAAA;MAApCK,cAAA,GAAAF,YAAA,CAAAE,cAAA,CAAA;IAED,OAAA;AACLJ,MAAAA,WAAA,EAAAA,WAAA;AACAI,MAAAA,cAAA,EAAAA,cAAAA;KACF,CAAA;GACF;EACAC,uBAAOC,CAAAA,CAAsB,EAAA;AACrB,IAAA,IAAAC,aAAA,GAAgBC,4BAAkB,CAAA,CAAA;AAIpC,IAAA,IAAA,OAAO,IAAK,CAAAJ,cAAA,KAAmB,UAAY,EAAA;AACtC,MAAA,OAAA,IAAA,CAAKA,eAAeG,aAAa,CAAA,CAAA;AAC1C,KAAA;AACO,IAAA,OAAA,IAAA,CAAA;AACT,GAAA;AAAA,CAAA,CACD,CAAA;;;;;"}