/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tree_adapt = require('../adapt.js');
var Vue = require('vue');
require('../../utils/withInstall.js');
require('../../hooks/useVModel.js');
require('lodash/kebabCase');
require('../../hooks/useDefaultValue.js');
require('tdesign-icons-vue-next');
require('../../checkbox/index.js');
require('../../checkbox/checkbox.js');
require('@babel/runtime/helpers/slicedToArray');
require('@babel/runtime/helpers/defineProperty');
require('../../checkbox/props.js');
require('../../hooks/useRipple.js');
require('../../hooks/useKeepAnimation.js');
require('../../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../../_common/js/global-config/default-config.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-4980a22e.js');
require('dayjs');
require('lodash/isArray');
require('../../hooks/useConfig.js');
require('../../utils/set-style.js');
require('../../hooks/tnode.js');
require('lodash/camelCase');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../../checkbox/constants.js');
require('../../checkbox/hooks/useCheckboxLazyLoad.js');
require('../../_common/js/utils/observe.js');
require('../../checkbox/hooks/useKeyboardEvent.js');
require('../../_common/js/common.js');
require('../../hooks/useDisabled.js');
require('lodash/isBoolean');
require('../../checkbox/group.js');
require('@babel/runtime/helpers/toConsumableArray');
require('lodash/intersection');
require('lodash/isUndefined');
require('../../checkbox/checkbox-group-props.js');
require('../../hooks/slot.js');
require('../../loading/index.js');
require('../../loading/directive.js');
require('lodash/mapKeys');
require('lodash/isEqual');
require('../../loading/plugin.js');
require('../../loading/loading.js');
require('../../loading/icon/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isNumber');
require('../../utils/dom.js');
require('../../utils/easing.js');
require('../../loading/props.js');
require('../../hooks/useTeleport.js');
require('../../hooks/useGlobalIcon.js');
require('../../hooks/useLazyLoad.js');
require('../../hooks/useVirtualScrollNew.js');
require('../../hooks/useResizeObserver.js');
require('lodash/max');
require('lodash/min');
require('lodash/sum');
require('lodash/throttle');
require('../../_common/js/tree/tree-node.js');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/regenerator');
require('lodash/uniqueId');
require('lodash/isNil');
require('lodash/get');
require('../../_common/js/tree/tree-node-model.js');
require('lodash/omit');
require('../../_common/js/log/log.js');

function useTreeState(props, context) {
  var treeContentRef = Vue.ref();
  var nodes = Vue.ref([]);
  var allNodes = Vue.ref([]);
  var isScrolling = Vue.ref(false);
  var refProps = Vue.toRefs(props);
  var vmValue = tree_adapt.useVModel(props, refProps, "value", "defaultValue", "onChange", "change");
  var vmActived = tree_adapt.useVModel(props, refProps, "actived", "defaultActived", "onActive", "active");
  var vmExpanded = tree_adapt.useVModel(props, refProps, "expanded", "defaultExpanded", "onExpand", "expand");
  function setStore(store) {
    state.store = store;
    state.scope.store = store;
    allNodes.value = store.getNodes();
  }
  var state = {
    props: props,
    context: context,
    store: null,
    treeContentRef: treeContentRef,
    nodes: nodes,
    allNodes: allNodes,
    isScrolling: isScrolling,
    mouseEvent: null,
    virtualConfig: null,
    scope: {
      store: null,
      treeContentRef: treeContentRef,
      treeProps: props,
      scopedSlots: {},
      virtualConfig: null
    },
    setStore: setStore,
    refProps: refProps,
    vmValue: vmValue,
    vmActived: vmActived,
    vmExpanded: vmExpanded
  };
  return {
    state: state
  };
}

exports["default"] = useTreeState;
//# sourceMappingURL=useTreeState.js.map
