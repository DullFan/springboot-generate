/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var tree_util = require('../util.js');
var hooks_useConfig = require('../../hooks/useConfig.js');
var loading_index = require('../../loading/index.js');
var hooks_useGlobalIcon = require('../../hooks/useGlobalIcon.js');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
require('@babel/runtime/helpers/defineProperty');
require('lodash/camelCase');
require('../../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../../_common/js/global-config/default-config.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-4980a22e.js');
require('dayjs');
require('lodash/isArray');
require('../../loading/directive.js');
require('lodash/isObject');
require('lodash/mapKeys');
require('lodash/isEqual');
require('../../loading/plugin.js');
require('../../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../../loading/icon/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('../../utils/dom.js');
require('../../utils/easing.js');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/kebabCase');
require('../../loading/props.js');
require('../../hooks/useTeleport.js');
require('../../utils/withInstall.js');

function useRenderIcon(state) {
  var classPrefix = hooks_useConfig.usePrefixClass().value;
  var componentName = hooks_useConfig.usePrefixClass("tree").value;
  var getFolderIcon = function getFolderIcon(h) {
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        CaretRightSmallIcon: tdesignIconsVueNext.CaretRightSmallIcon
      }),
      CaretRightSmallIcon = _useGlobalIcon.CaretRightSmallIcon;
    return Vue.createVNode(CaretRightSmallIcon, null, null);
  };
  var handleMousedown = function handleMousedown(evt) {
    evt.preventDefault();
  };
  var renderIcon = function renderIcon(h) {
    var node = state.node,
      treeScope = state.treeScope;
    var scopedSlots = treeScope.scopedSlots;
    var treeProps = (treeScope === null || treeScope === void 0 ? void 0 : treeScope.treeProps) || {};
    var icon = treeProps.icon;
    var isDefaultIcon = false;
    var iconNode = null;
    if (icon === true) {
      if (scopedSlots !== null && scopedSlots !== void 0 && scopedSlots.icon) {
        iconNode = scopedSlots.icon({
          node: node === null || node === void 0 ? void 0 : node.getModel()
        });
      } else if (!node.vmIsLeaf) {
        isDefaultIcon = true;
        iconNode = getFolderIcon();
        if (node.loading && node.expanded) {
          iconNode = Vue.createVNode(loading_index.Loading, null, null);
        }
      } else {
        iconNode = "";
      }
    } else if (icon) {
      iconNode = tree_util.getTNode(icon, {
        createElement: h,
        node: node
      });
    }
    var wrapIconNode = Vue.createVNode("span", {
      "class": ["".concat(componentName, "__icon"), "".concat(classPrefix, "-folder-icon"), isDefaultIcon ? "".concat(componentName, "__icon--default") : ""],
      "trigger": "expand",
      "ignore": "active",
      "onmousedown": handleMousedown
    }, [iconNode]);
    return wrapIconNode;
  };
  return {
    renderIcon: renderIcon
  };
}

exports["default"] = useRenderIcon;
//# sourceMappingURL=useRenderIcon.js.map
