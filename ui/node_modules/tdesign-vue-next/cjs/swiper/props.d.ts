import { TdSwiperProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    animation: {
        type: PropType<"fade" | "slide">;
        default: "fade" | "slide";
        validator(val: TdSwiperProps['animation']): boolean;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    current: {
        type: NumberConstructor;
        default: number;
    };
    defaultCurrent: {
        type: NumberConstructor;
        default: number;
    };
    direction: {
        type: PropType<"horizontal" | "vertical">;
        default: "horizontal" | "vertical";
        validator(val: TdSwiperProps['direction']): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    height: {
        type: NumberConstructor;
    };
    interval: {
        type: NumberConstructor;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
    navigation: {
        type: PropType<((h: typeof import("vue").h) => import("..").SlotReturnValue) | import("./type").SwiperNavigation>;
    };
    stopOnHover: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: PropType<"dark" | "light">;
        default: "dark" | "light";
        validator(val: TdSwiperProps['theme']): boolean;
    };
    trigger: {
        type: PropType<"click" | "hover">;
        default: "click" | "hover";
        validator(val: TdSwiperProps['trigger']): boolean;
    };
    type: {
        type: PropType<"default" | "card">;
        default: "default" | "card";
        validator(val: TdSwiperProps['type']): boolean;
    };
    onChange: PropType<(current: number, context: {
        source: import("./type").SwiperChangeSource;
    }) => void>;
};
export default _default;
