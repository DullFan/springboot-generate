/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _common_js_utils_observe = require('../_common/js/utils/observe.js');

function useElementLazyRender(labelRef, lazyLoad) {
  var ioObserver = Vue.ref();
  var showElement = Vue.ref(true);
  var handleLazyLoad = function handleLazyLoad() {
    if (!lazyLoad.value || !labelRef.value || ioObserver.value) return;
    showElement.value = false;
    var io = _common_js_utils_observe["default"](labelRef.value, null, function () {
      showElement.value = true;
    }, 10);
    ioObserver.value = io;
  };
  Vue.onMounted(handleLazyLoad);
  lazyLoad.value && Vue.watch([lazyLoad, labelRef], handleLazyLoad);
  Vue.onBeforeUnmount(function () {
    var _ioObserver$value, _ioObserver$value$uno;
    if (!lazyLoad.value) return;
    (_ioObserver$value = ioObserver.value) === null || _ioObserver$value === void 0 || (_ioObserver$value$uno = _ioObserver$value.unobserve) === null || _ioObserver$value$uno === void 0 || _ioObserver$value$uno.call(_ioObserver$value, labelRef.value);
  });
  return {
    showElement: showElement
  };
}

exports["default"] = useElementLazyRender;
exports.useElementLazyRender = useElementLazyRender;
//# sourceMappingURL=useElementLazyRender.js.map
