{"version":3,"file":"head-menu.js","sources":["../../src/menu/head-menu.tsx"],"sourcesContent":["import {\n  defineComponent,\n  computed,\n  provide,\n  ref,\n  reactive,\n  watch,\n  onMounted,\n  watchEffect,\n  toRefs,\n  h,\n  VNode,\n  Component,\n  getCurrentInstance,\n} from 'vue';\nimport { EllipsisIcon } from 'tdesign-icons-vue-next';\nimport isFunction from 'lodash/isFunction';\nimport isArray from 'lodash/isArray';\n\nimport log from '../_common/js/log/log';\nimport props from './head-menu-props';\nimport { MenuValue } from './type';\nimport { TdMenuInterface, TdOpenType } from './const';\nimport { Tabs, TabPanel } from '../tabs';\nimport Submenu from './submenu';\nimport VMenu from './v-menu';\n\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\n\nexport default defineComponent({\n  name: 'THeadMenu',\n  props: { ...props },\n  setup(props, ctx) {\n    const classPrefix = usePrefixClass();\n    const { proxy } = getCurrentInstance();\n    watchEffect(() => {\n      if (ctx.slots.options) {\n        log.warnOnce('TMenu', '`options` slot is going to be deprecated, please use `operations` for slot instead.');\n      }\n    });\n    const { value, modelValue, expanded } = toRefs(props);\n    const [activeValue, setActiveValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [expandValues, setExpanded] = useDefaultValue(expanded, props.defaultExpanded, props.onExpand, 'expanded');\n    const activeValues = ref([]);\n    const theme = computed(() => props.theme);\n    const menuClass = computed(() => [\n      `${classPrefix.value}-menu`,\n      `${classPrefix.value}-head-menu`,\n      `${classPrefix.value}-menu--${props.theme}`,\n    ]);\n    const mode = ref(props.expandType);\n    const submenu = reactive([]);\n    const vMenu = new VMenu({ isMutex: true, expandValues: expandValues.value });\n\n    provide<TdMenuInterface>('TdMenu', {\n      mode,\n      theme,\n      vMenu,\n      isHead: true,\n      expandValues,\n      activeValue,\n      activeValues,\n      select: (value: MenuValue) => {\n        setActiveValue(value);\n      },\n      open: (value: MenuValue, type: TdOpenType) => {\n        const expanded = [...expandValues.value];\n        const index = expanded.indexOf(value);\n\n        if (mode.value === 'popup') {\n          if (type === 'add') {\n            if (index === -1) {\n              // 可能初始expanded里包含了该value\n              expanded.push(value);\n            }\n          } else if (type === 'remove') {\n            expanded.splice(index, 1);\n          }\n        } else if (mode.value === 'normal' && value !== undefined) {\n          expanded.splice(0, 1);\n          if (index === -1) {\n            expanded.push(value);\n          }\n        }\n        setExpanded(expanded);\n      },\n    });\n\n    // methods\n    const handleTabChange = (value: MenuValue) => {\n      setActiveValue(value);\n      handleClickSubMenuItem(value);\n    };\n\n    const handleSubmenuExpand = (value: MenuValue) => {\n      const ans = vMenu.getChild(value);\n      submenu.length = 0;\n      submenu.push(...ans);\n    };\n\n    // watch\n    watch(expandValues, (value) => {\n      if (mode.value === 'normal') {\n        handleSubmenuExpand(value[0]);\n      }\n    });\n    const updateActiveValues = (value: MenuValue) => {\n      activeValues.value = vMenu.select(value);\n    };\n    watch(activeValue, updateActiveValues);\n    watch(\n      () => props.expandType,\n      (value) => {\n        mode.value = value;\n      },\n    );\n\n    onMounted(() => {\n      activeValues.value = vMenu.select(activeValue.value);\n      if (expandValues.value?.length > 0) {\n        handleSubmenuExpand(expandValues.value[0]); // 顶部导航只能同时展开一个子菜单\n      }\n    });\n\n    const handleClickSubMenuItem = (value: MenuValue) => {\n      const activeMenuItem = submenu.find((v) => v.value === value);\n      activeMenuItem.onClick?.({ value });\n      const { to, href, replace } = activeMenuItem;\n      if (href) {\n        window.location.href = activeMenuItem.href;\n      }\n      const router = activeMenuItem.router || proxy.$router;\n      if (to && router) {\n        replace ? router.replace(to) : router.push(to);\n      }\n    };\n    // setup返回的render函数中无法访问methods属性中的类容，移动此方法到setup中\n    const renderNormalSubmenu = () => {\n      if (submenu.length === 0) return null;\n      return (\n        <ul class={[`${classPrefix.value}-head-menu__submenu`, `${classPrefix.value}-submenu`]}>\n          {\n            <Tabs value={activeValue.value} onChange={handleTabChange}>\n              {submenu.map((item) => (\n                <TabPanel value={item.value} label={item.vnode()[0]?.children} />\n              ))}\n            </Tabs>\n          }\n        </ul>\n      );\n    };\n\n    const menuRef = ref<HTMLUListElement>();\n    const innerRef = ref<HTMLDivElement>();\n    const logoRef = ref<HTMLDivElement>();\n    const operationRef = ref<HTMLDivElement>();\n\n    const getComputedCss = (el: Element, cssProperty: keyof CSSStyleDeclaration) =>\n      getComputedStyle(el)[cssProperty] ?? '';\n\n    const getComputedCssValue = (el: Element, cssProperty: keyof CSSStyleDeclaration) =>\n      Number.parseInt(String(getComputedCss(el, cssProperty)), 10);\n\n    const calcMenuWidth = () => {\n      const menuPaddingLeft = getComputedCssValue(menuRef.value, 'paddingLeft');\n      const menuPaddingRight = getComputedCssValue(menuRef.value, 'paddingRight');\n      let totalWidth = innerRef.value.clientWidth;\n      if (logoRef.value) {\n        const logoMarginLeft = getComputedCssValue(logoRef.value, 'marginLeft');\n        const logoMarginRight = getComputedCssValue(logoRef.value, 'marginRight');\n        totalWidth = totalWidth - logoRef.value.offsetWidth - logoMarginLeft - logoMarginRight;\n      }\n\n      if (operationRef.value) {\n        const operationMarginLeft = getComputedCssValue(operationRef.value, 'marginLeft');\n        const operationMarginRight = getComputedCssValue(operationRef.value, 'marginRight');\n        totalWidth = totalWidth - operationRef.value.offsetWidth - operationMarginLeft - operationMarginRight;\n      }\n\n      return totalWidth - menuPaddingLeft - menuPaddingRight;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const formatContent = () => {\n      let slot = ctx.slots.default?.() || ctx.slots.content?.() || [];\n\n      if (menuRef.value && innerRef.value) {\n        const validNodes = Array.from(menuRef.value.childNodes ?? []).filter(\n          (item) => item.nodeName !== '#text' || item.nodeValue,\n        ) as HTMLElement[];\n\n        const menuWidth = calcMenuWidth();\n        const menuItemMinWidth = 104;\n\n        let remainWidth = menuWidth;\n        let sliceIndex = validNodes.length;\n\n        for (let index = 0; index < validNodes.length; index++) {\n          const element = validNodes[index];\n          remainWidth -= element.offsetWidth || 0;\n          if (remainWidth < menuItemMinWidth) {\n            sliceIndex = index;\n            break;\n          }\n        }\n\n        const defaultSlot = slot.slice(0, sliceIndex);\n        const subMore = slot.slice(sliceIndex);\n\n        if (subMore.length) {\n          slot = defaultSlot.concat(\n            <Submenu expandType=\"popup\" title={() => <EllipsisIcon />}>\n              {subMore}\n            </Submenu>,\n          );\n        }\n      }\n      return slot;\n    };\n\n    const initVMenu = (slots: VNode[], parentValue?: string) => {\n      slots.forEach((node) => {\n        const nodeValue = node.props?.value;\n        if ((node.type as Component)?.name === 'TSubmenu' || (node.type as Component)?.name === 'TMenuItem') {\n          vMenu.add({ value: nodeValue, parent: parentValue, vnode: (node.children as any).default, ...node.props });\n        }\n        if (isFunction((node.children as any)?.default)) {\n          initVMenu((node.children as any).default(), nodeValue);\n          return;\n        }\n        if (isArray(node.children)) {\n          initVMenu(node.children as VNode[], nodeValue);\n        }\n      });\n    };\n    initVMenu(ctx.slots.default?.() || ctx.slots.content?.() || []);\n\n    return () => {\n      const logo = props.logo?.(h) || ctx.slots.logo?.();\n      const operations = props.operations?.(h) || ctx.slots.operations?.() || ctx.slots.options?.();\n\n      // TODO: 判断逻辑不够完善 影响封装组件的子菜单样式渲染 暂时先不执行 待调整实现方案\n      // const content = formatContent();\n      const content = ctx.slots.default?.() || ctx.slots.content?.() || [];\n\n      return (\n        <div class={menuClass.value}>\n          <div class={`${classPrefix.value}-head-menu__inner`} ref={innerRef}>\n            {logo && (\n              <div class={`${classPrefix.value}-menu__logo`} ref={logoRef}>\n                {logo}\n              </div>\n            )}\n            <ul class={`${classPrefix.value}-menu`} ref={menuRef}>\n              {content}\n            </ul>\n            {operations && (\n              <div class={`${classPrefix.value}-menu__operations`} ref={operationRef}>\n                {operations}\n              </div>\n            )}\n          </div>\n          {mode.value === 'normal' && renderNormalSubmenu()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","props","_objectSpread","setup","ctx","_ctx$slots$default2","_ctx$slots3","_ctx$slots$content2","_ctx$slots4","classPrefix","usePrefixClass","_getCurrentInstance","getCurrentInstance","proxy","watchEffect","slots","options","log","warnOnce","_toRefs","toRefs","value","modelValue","expanded","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","activeValue","setActiveValue","_useDefaultValue","useDefaultValue","defaultExpanded","onExpand","_useDefaultValue2","expandValues","setExpanded","activeValues","ref","theme","computed","menuClass","concat","mode","expandType","submenu","reactive","vMenu","VMenu","isMutex","provide","isHead","select","open","type","_toConsumableArray","index","indexOf","push","splice","handleTabChange","handleClickSubMenuItem","handleSubmenuExpand","ans","getChild","length","apply","watch","updateActiveValues","onMounted","_expandValues$value","_activeMenuItem$onCli","activeMenuItem","find","v","onClick","to","href","replace","window","location","router","$router","renderNormalSubmenu","_slot","_createVNode","map","item","_item$vnode$","TabPanel","vnode","children","_default","menuRef","innerRef","logoRef","operationRef","initVMenu","parentValue","forEach","node","_node$props","_node$type","_node$type2","_node$children","nodeValue","add","parent","isFunction","isArray","content","_props2$logo","_ctx$slots$logo","_ctx$slots5","_props2$operations","_ctx$slots$operations","_ctx$slots6","_ctx$slots$options","_ctx$slots7","_ctx$slots$default3","_ctx$slots8","_ctx$slots$content3","_ctx$slots9","logo","h","operations"],"mappings":"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"}