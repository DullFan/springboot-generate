import { PropType } from 'vue';
import { SortType } from './type';
import { TableConfig } from '../config-provider';
declare type SortTypeEnums = Array<'desc' | 'asc'>;
declare const _default: import("vue").DefineComponent<{
    sortType: {
        type: PropType<SortType>;
        default: string;
    };
    sortOrder: {
        type: StringConstructor;
        default: () => string;
    };
    locale: PropType<TableConfig>;
    sortIcon: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    tooltipProps: PropType<import("../tooltip").TdTooltipProps>;
    hideSortTips: BooleanConstructor;
}, {
    t: <T>(pattern: T, ...args: any[]) => any;
    globalConfig: import("vue").ComputedRef<{} & TableConfig>;
    tableSortClasses: {
        sortable: string;
        sortColumn: string;
        title: string;
        trigger: string;
        doubleIcon: string;
        sortIcon: string;
        iconDirection: {
            asc: string;
            desc: string;
        };
        iconActive: string;
        iconDefault: string;
    };
    negativeRotate180: string;
    allowSortTypes: import("vue").ComputedRef<SortTypeEnums>;
    getSortIcon: (direction: string, activeClass: string) => JSX.Element;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "sort-icon-click"[], "sort-icon-click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    sortType: {
        type: PropType<SortType>;
        default: string;
    };
    sortOrder: {
        type: StringConstructor;
        default: () => string;
    };
    locale: PropType<TableConfig>;
    sortIcon: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    tooltipProps: PropType<import("../tooltip").TdTooltipProps>;
    hideSortTips: BooleanConstructor;
}>> & {
    "onSort-icon-click"?: (...args: any[]) => any;
}, {
    hideSortTips: boolean;
    sortType: SortType;
    sortOrder: string;
}, {}>;
export default _default;
