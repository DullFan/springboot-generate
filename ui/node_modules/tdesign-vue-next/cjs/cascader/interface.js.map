{"version":3,"file":"interface.js","sources":["../../src/cascader/interface.tsx"],"sourcesContent":["import { TdCascaderProps, CascaderValue, CascaderChangeSource } from './type';\nimport { TdSelectInputProps } from '../select-input/type';\nimport TreeStore from '../_common/js/tree/tree-store';\nimport TreeNode from '../_common/js/tree/tree-node';\nimport { TreeNodeModel, TreeNodeValue } from '../_common/js/tree/types';\n\nexport * from './type';\nexport interface CascaderContextType\n  extends Pick<\n    TdCascaderProps,\n    | 'size'\n    | 'disabled'\n    | 'checkStrictly'\n    | 'lazy'\n    | 'multiple'\n    | 'filterable'\n    | 'filter'\n    | 'clearable'\n    | 'checkProps'\n    | 'showAllLevels'\n    | 'max'\n    | 'value'\n    | 'minCollapsedNum'\n    | 'valueType'\n  > {\n  treeStore: TreeStore;\n  setValue: (val: CascaderValue, source: CascaderChangeSource, node?: TreeNodeModel) => void;\n  visible: boolean;\n  setVisible: TdSelectInputProps['onPopupVisibleChange'];\n  treeNodes: TreeNode[];\n  setTreeNodes: (val: CascaderValue) => void;\n  inputVal: TdSelectInputProps['inputValue'];\n  setInputVal: (val: TdSelectInputProps['inputValue']) => void;\n  setExpend: (val: TreeNodeValue[]) => void;\n}\n\nexport { TreeNode } from '../_common/js/tree/tree-node';\nexport type { TreeNodeValue } from '../_common/js/tree/types';\nexport type { TreeOptionData } from '../_common/js/common';\nexport type { TreeNodeModel } from '../tree';\nexport type { TdSelectInputProps } from '../select-input/type';\n\nexport const EVENT_NAME_WITH_KEBAB = ['remove', 'blur', 'focus'];\n"],"names":["EVENT_NAME_WITH_KEBAB"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CO,IAAMA,qBAAwB,GAAA,CAAC,QAAU,EAAA,MAAA,EAAQ,OAAO;;;;;"}