/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var isString = require('lodash/isString');
var utils_dom = require('../utils/dom.js');
var _common_js_common = require('../_common/js/common.js');
require('../_chunks/dep-4980a22e.js');
require('lodash/isFunction');
require('lodash/isArray');
require('../utils/easing.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var isString__default = /*#__PURE__*/_interopDefaultLegacy(isString);

function useKeyboard(radioGroupRef, setInnerValue) {
  var checkRadioInGroup = function checkRadioInGroup(e) {
    var isCheckedCode = _common_js_common.CHECKED_CODE_REG.test(e.key) || _common_js_common.CHECKED_CODE_REG.test(e.code);
    if (isCheckedCode) {
      e.preventDefault();
      var inputNode = e.target.querySelector("input");
      if (!inputNode) return;
      var data = inputNode.dataset;
      if (inputNode.checked && data.allowUncheck) {
        setInnerValue(void 0, {
          e: e
        });
      } else {
        var value = !isNaN(Number(data.value)) ? Number(data.value) : data.value;
        value = isString__default["default"](value) && {
          "true": true,
          "false": false
        }[value] || value;
        value = isString__default["default"](value) && value[0] === "'" ? value.replace(/'/g, "") : value;
        setInnerValue(value, {
          e: e
        });
      }
    }
  };
  Vue.onMounted(function () {
    utils_dom.on(radioGroupRef.value, "keydown", checkRadioInGroup);
  });
  Vue.onBeforeMount(function () {
    utils_dom.off(radioGroupRef.value, "keydown", checkRadioInGroup);
  });
}

exports["default"] = useKeyboard;
//# sourceMappingURL=useKeyboard.js.map
