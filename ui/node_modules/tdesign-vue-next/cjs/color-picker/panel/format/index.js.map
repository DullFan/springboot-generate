{"version":3,"file":"index.js","sources":["../../../../src/color-picker/panel/format/index.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, watch } from 'vue';\nimport upperCase from 'lodash/upperCase';\nimport { TdColorPickerProps } from '../../type';\nimport props from '../../props';\nimport { FORMATS } from '../../const';\nimport { Color } from '../../utils';\nimport { Select as TSelect, Option as TOption } from '../../../select';\nimport FormatInputs from './inputs';\nimport { useBaseClassName } from '../../hooks';\nimport type { TdSelectInputProps } from '../../../select-input/type';\n\nexport default defineComponent({\n  name: 'FormatPanel',\n  inheritAttrs: false,\n  props: {\n    ...props,\n    color: {\n      type: Object as PropType<Color>,\n    },\n    onModeChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n    onInputChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const formatModel = ref<TdColorPickerProps['format']>(props.format);\n    watch(\n      () => [props.format],\n      () => (formatModel.value = props.format),\n    );\n\n    /**\n     * 格式化类型改变触发\n     * @param v\n     */\n    const handleModeChange = (v: TdColorPickerProps['format']) => {\n      formatModel.value = v;\n      props.onModeChange(v);\n    };\n\n    return {\n      formatModel,\n      baseClassName,\n      handleModeChange,\n    };\n  },\n  render() {\n    const formats: TdColorPickerProps['format'][] = [...FORMATS];\n    const { baseClassName, handleModeChange } = this;\n    const newProps = {\n      ...this.$props,\n      format: this.formatModel,\n    };\n    const selectInputProps = {\n      ...((this.selectInputProps as Object) || {}),\n    };\n    return (\n      <div class={`${baseClassName}__format`}>\n        <div class={`${baseClassName}__format--item`}>\n          <TSelect\n            size=\"small\"\n            class={`${baseClassName}__format-mode-select`}\n            {...selectInputProps}\n            popupProps={{\n              overlayClassName: `${baseClassName}__select-options`,\n              ...(selectInputProps as TdSelectInputProps).popupProps,\n            }}\n            v-model={this.formatModel}\n            onChange={handleModeChange}\n          >\n            {formats.map((item) => (\n              <TOption key={item} value={item} label={upperCase(item)} style={{ fontSize: '12px' }} />\n            ))}\n          </TSelect>\n        </div>\n        <div class={`${baseClassName}__format--item`}>\n          <FormatInputs {...newProps} />\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","inheritAttrs","props","_objectSpread","color","type","onModeChange","Function","_default","onInputChange","setup","baseClassName","useBaseClassName","formatModel","ref","format","watch","value","handleModeChange","v","render","_this","_slot","formats","_toConsumableArray","FORMATS","newProps","$props","selectInputProps","_createVNode","concat","TSelect","_mergeProps","overlayClassName","popupProps","onUpdateModelValue","$event","map","item","TOption","upperCase","fontSize"],"mappings":"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"}