/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var isString = require('lodash/isString');
var omit = require('lodash/omit');
var hooks_tnode = require('../hooks/tnode.js');
var loading_index = require('../loading/index.js');
var list_listItem = require('./list-item.js');
var list_props = require('./props.js');
var list_const = require('./const.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var list_hooks_useListItems = require('./hooks/useListItems.js');
var list_hooks_useListVirtualScroll = require('./hooks/useListVirtualScroll.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../loading/directive.js');
require('lodash/mapKeys');
require('lodash/isEqual');
require('../loading/plugin.js');
require('lodash/merge');
require('../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('lodash/isArray');
require('../utils/dom.js');
require('../_chunks/dep-4980a22e.js');
require('../utils/easing.js');
require('../loading/props.js');
require('../hooks/useTeleport.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('dayjs');
require('../utils/withInstall.js');
require('../hooks/slot.js');
require('../hooks/useVirtualScrollNew.js');
require('../hooks/useResizeObserver.js');
require('lodash/max');
require('lodash/min');
require('lodash/sum');
require('lodash/throttle');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var isString__default = /*#__PURE__*/_interopDefaultLegacy(isString);
var omit__default = /*#__PURE__*/_interopDefaultLegacy(omit);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _List = Vue.defineComponent({
  name: "TList",
  props: _objectSpread({}, list_props["default"]),
  setup: function setup(props2) {
    var listRef = Vue.ref();
    var _useConfig = configProvider_useConfig.useConfig("list"),
      globalConfig = _useConfig.globalConfig;
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("list");
    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
      SIZE = _useCommonClassName.SIZE;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var _useListItems = list_hooks_useListItems.useListItems(),
      listItems = _useListItems.listItems;
    var _useListVirtualScroll = list_hooks_useListVirtualScroll.useListVirtualScroll(props2.scroll, listRef, listItems),
      virtualConfig = _useListVirtualScroll.virtualConfig,
      cursorStyle = _useListVirtualScroll.cursorStyle,
      listStyle = _useListVirtualScroll.listStyle,
      isVirtualScroll = _useListVirtualScroll.isVirtualScroll,
      onInnerVirtualScroll = _useListVirtualScroll.onInnerVirtualScroll;
    var listClass = Vue.computed(function () {
      return ["".concat(COMPONENT_NAME.value), SIZE.value[props2.size], _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "--split"), props2.split), "".concat(COMPONENT_NAME.value, "--stripe"), props2.stripe), "".concat(COMPONENT_NAME.value, "--vertical-action"), props2.layout === "vertical")];
    });
    var renderContent = function renderContent() {
      var propsHeaderContent = renderTNodeJSX("header");
      var propsFooterContent = renderTNodeJSX("footer");
      var isVirtualScroll2 = virtualConfig.isVirtualScroll.value;
      return Vue.createVNode(Vue.Fragment, null, [propsHeaderContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__header")
      }, [propsHeaderContent]) : null, isVirtualScroll2 ? Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("div", {
        "style": cursorStyle.value
      }, null), Vue.createVNode("ul", {
        "class": "".concat(COMPONENT_NAME.value, "__inner"),
        "style": listStyle.value
      }, [virtualConfig.visibleData.value.map(function (item) {
        return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode(list_listItem["default"], omit__default["default"](item, "slots"), item.slots)]);
      })])]) : Vue.createVNode("ul", {
        "class": "".concat(COMPONENT_NAME.value, "__inner")
      }, [renderTNodeJSX("default")]), propsFooterContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__footer")
      }, [propsFooterContent]) : null]);
    };
    var handleScroll = function handleScroll(e) {
      var _props2$onScroll;
      var listElement = e.target;
      var scrollTop = listElement.scrollTop,
        scrollHeight = listElement.scrollHeight,
        clientHeight = listElement.clientHeight;
      if (isVirtualScroll.value) onInnerVirtualScroll(e);
      (_props2$onScroll = props2.onScroll) === null || _props2$onScroll === void 0 || _props2$onScroll.call(props2, {
        e: e,
        scrollTop: scrollTop,
        scrollBottom: scrollHeight - clientHeight - scrollTop
      });
    };
    var loadingClass = Vue.computed(function () {
      return isString__default["default"](props2.asyncLoading) && ["loading", "load-more"].includes(props2.asyncLoading) ? "".concat(COMPONENT_NAME.value, "__load ").concat(COMPONENT_NAME.value, "__load--").concat(props2.asyncLoading) : "".concat(COMPONENT_NAME.value, "__load");
    });
    var renderLoading = function renderLoading() {
      if (props2.asyncLoading && isString__default["default"](props2.asyncLoading)) {
        if (props2.asyncLoading === list_const.LOADING) {
          return Vue.createVNode("div", null, [Vue.createVNode(loading_index.Loading, null, null), Vue.createVNode("span", null, [globalConfig.value.loadingText])]);
        }
        if (props2.asyncLoading === list_const.LOAD_MORE) {
          return Vue.createVNode("span", null, [globalConfig.value.loadingMoreText]);
        }
      }
      return renderTNodeJSX("asyncLoading");
    };
    var handleLoadMore = function handleLoadMore(e) {
      var _props2$onLoadMore;
      if (isString__default["default"](props2.asyncLoading) && props2.asyncLoading !== list_const.LOAD_MORE) return;
      (_props2$onLoadMore = props2.onLoadMore) === null || _props2$onLoadMore === void 0 || _props2$onLoadMore.call(props2, {
        e: e
      });
    };
    return {
      COMPONENT_NAME: COMPONENT_NAME,
      listClass: listClass,
      loadingClass: loadingClass,
      renderLoading: renderLoading,
      renderContent: renderContent,
      handleScroll: handleScroll,
      handleLoadMore: handleLoadMore,
      listRef: listRef,
      isVirtualScroll: isVirtualScroll
    };
  },
  render: function render() {
    var listContent = this.renderContent();
    listContent = [listContent, Vue.createVNode("div", {
      "class": this.loadingClass,
      "onClick": this.handleLoadMore
    }, [this.renderLoading()])];
    return Vue.createVNode("div", {
      "class": this.listClass,
      "onScroll": this.handleScroll,
      "ref": "listRef"
    }, [listContent]);
  }
});

exports["default"] = _List;
//# sourceMappingURL=list.js.map
