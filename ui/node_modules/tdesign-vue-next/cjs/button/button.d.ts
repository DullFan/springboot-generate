import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    block: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    ghost: BooleanConstructor;
    href: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: import("vue").PropType<(h: typeof h) => import("..").SlotReturnValue>;
    };
    loading: BooleanConstructor;
    shape: {
        type: import("vue").PropType<"square" | "round" | "circle" | "rectangle">;
        default: "square" | "round" | "circle" | "rectangle";
        validator(val: "square" | "round" | "circle" | "rectangle"): boolean;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    suffix: {
        type: import("vue").PropType<(h: typeof h) => import("..").SlotReturnValue>;
    };
    tag: {
        type: import("vue").PropType<"button" | "a" | "div">;
        validator(val: "button" | "a" | "div"): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "success" | "primary" | "warning" | "danger">;
        validator(val: "default" | "success" | "primary" | "warning" | "danger"): boolean;
    };
    type: {
        type: import("vue").PropType<"button" | "reset" | "submit">;
        default: "button" | "reset" | "submit";
        validator(val: "button" | "reset" | "submit"): boolean;
    };
    variant: {
        type: import("vue").PropType<"outline" | "base" | "text" | "dashed">;
        default: "outline" | "base" | "text" | "dashed";
        validator(val: "outline" | "base" | "text" | "dashed"): boolean;
    };
    onClick: import("vue").PropType<(e: MouseEvent) => void>;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    block: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    ghost: BooleanConstructor;
    href: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: import("vue").PropType<(h: typeof h) => import("..").SlotReturnValue>;
    };
    loading: BooleanConstructor;
    shape: {
        type: import("vue").PropType<"square" | "round" | "circle" | "rectangle">;
        default: "square" | "round" | "circle" | "rectangle";
        validator(val: "square" | "round" | "circle" | "rectangle"): boolean;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    suffix: {
        type: import("vue").PropType<(h: typeof h) => import("..").SlotReturnValue>;
    };
    tag: {
        type: import("vue").PropType<"button" | "a" | "div">;
        validator(val: "button" | "a" | "div"): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "success" | "primary" | "warning" | "danger">;
        validator(val: "default" | "success" | "primary" | "warning" | "danger"): boolean;
    };
    type: {
        type: import("vue").PropType<"button" | "reset" | "submit">;
        default: "button" | "reset" | "submit";
        validator(val: "button" | "reset" | "submit"): boolean;
    };
    variant: {
        type: import("vue").PropType<"outline" | "base" | "text" | "dashed">;
        default: "outline" | "base" | "text" | "dashed";
        validator(val: "outline" | "base" | "text" | "dashed"): boolean;
    };
    onClick: import("vue").PropType<(e: MouseEvent) => void>;
}>>, {
    type: "button" | "reset" | "submit";
    block: boolean;
    loading: boolean;
    disabled: boolean;
    size: import("..").SizeEnum;
    href: string;
    shape: "square" | "round" | "circle" | "rectangle";
    variant: "outline" | "base" | "text" | "dashed";
    ghost: boolean;
}, {}>;
export default _default;
