import dayjs from 'dayjs';
import { DateRangePickerPartial, DatePickerYearChangeTrigger, DatePickerMonthChangeTrigger } from './type';
declare const _default: import("vue").DefineComponent<{
    defaultTime: {
        type: import("vue").PropType<string[]>;
        default: () => string[];
    };
    onCellClick: import("vue").PropType<(context: {
        date: Date[];
        partial: DateRangePickerPartial;
        e: MouseEvent;
    }) => void>;
    onChange: import("vue").PropType<(value: import("./type").DateRangeValue, context: {
        dayjsValue?: dayjs.Dayjs[];
        partial: DateRangePickerPartial;
        e?: MouseEvent;
        trigger?: import("./type").DatePickerTriggerSource;
    }) => void>;
    onConfirm: import("vue").PropType<(context: {
        date: Date[];
        e: MouseEvent;
    }) => void>;
    onMonthChange: import("vue").PropType<(context: {
        month: number;
        date: Date[];
        partial: DateRangePickerPartial;
        e?: MouseEvent;
        trigger: DatePickerMonthChangeTrigger;
    }) => void>;
    onPanelClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onPresetClick: import("vue").PropType<(context: {
        preset: import("./type").PresetDate;
        e: MouseEvent;
    }) => void>;
    onTimeChange: import("vue").PropType<(context: {
        time: string;
        date: Date[];
        partial: DateRangePickerPartial;
        trigger: import("./type").DatePickerTimeChangeTrigger;
        e?: MouseEvent;
    }) => void>;
    onYearChange: import("vue").PropType<(context: {
        year: number;
        date: Date[];
        partial: DateRangePickerPartial;
        trigger: DatePickerYearChangeTrigger;
        e?: MouseEvent;
    }) => void>;
    value: {
        type: import("vue").PropType<import("./type").DateRangeValue>;
        default: import("./type").DateRangeValue;
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").DateRangeValue>;
        default: () => import("./type").DateRangeValue;
    };
    modelValue: {
        type: import("vue").PropType<import("./type").DateRangeValue>;
        default: import("./type").DateRangeValue;
    };
    disabled: BooleanConstructor;
    disableDate: {
        type: import("vue").PropType<import("./type").DisableRangeDate>;
    };
    enableTimePicker: BooleanConstructor;
    firstDayOfWeek: {
        type: NumberConstructor;
        validator(val: number): boolean;
    };
    format: {
        type: StringConstructor;
        default: string;
    };
    mode: {
        type: import("vue").PropType<"month" | "year" | "quarter" | "week" | "date">;
        default: "month" | "year" | "quarter" | "week" | "date";
        validator(val: "month" | "year" | "quarter" | "week" | "date"): boolean;
    };
    presets: {
        type: import("vue").PropType<import("./type").PresetRange>;
    };
    presetsPlacement: {
        type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
        default: "left" | "top" | "bottom" | "right";
        validator(val: "left" | "top" | "bottom" | "right"): boolean;
    };
    timePickerProps: {
        type: import("vue").PropType<import("..").TdTimePickerProps>;
    };
    panelPreselection: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    defaultTime: {
        type: import("vue").PropType<string[]>;
        default: () => string[];
    };
    onCellClick: import("vue").PropType<(context: {
        date: Date[];
        partial: DateRangePickerPartial;
        e: MouseEvent;
    }) => void>;
    onChange: import("vue").PropType<(value: import("./type").DateRangeValue, context: {
        dayjsValue?: dayjs.Dayjs[];
        partial: DateRangePickerPartial;
        e?: MouseEvent;
        trigger?: import("./type").DatePickerTriggerSource;
    }) => void>;
    onConfirm: import("vue").PropType<(context: {
        date: Date[];
        e: MouseEvent;
    }) => void>;
    onMonthChange: import("vue").PropType<(context: {
        month: number;
        date: Date[];
        partial: DateRangePickerPartial;
        e?: MouseEvent;
        trigger: DatePickerMonthChangeTrigger;
    }) => void>;
    onPanelClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onPresetClick: import("vue").PropType<(context: {
        preset: import("./type").PresetDate;
        e: MouseEvent;
    }) => void>;
    onTimeChange: import("vue").PropType<(context: {
        time: string;
        date: Date[];
        partial: DateRangePickerPartial;
        trigger: import("./type").DatePickerTimeChangeTrigger;
        e?: MouseEvent;
    }) => void>;
    onYearChange: import("vue").PropType<(context: {
        year: number;
        date: Date[];
        partial: DateRangePickerPartial;
        trigger: DatePickerYearChangeTrigger;
        e?: MouseEvent;
    }) => void>;
    value: {
        type: import("vue").PropType<import("./type").DateRangeValue>;
        default: import("./type").DateRangeValue;
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").DateRangeValue>;
        default: () => import("./type").DateRangeValue;
    };
    modelValue: {
        type: import("vue").PropType<import("./type").DateRangeValue>;
        default: import("./type").DateRangeValue;
    };
    disabled: BooleanConstructor;
    disableDate: {
        type: import("vue").PropType<import("./type").DisableRangeDate>;
    };
    enableTimePicker: BooleanConstructor;
    firstDayOfWeek: {
        type: NumberConstructor;
        validator(val: number): boolean;
    };
    format: {
        type: StringConstructor;
        default: string;
    };
    mode: {
        type: import("vue").PropType<"month" | "year" | "quarter" | "week" | "date">;
        default: "month" | "year" | "quarter" | "week" | "date";
        validator(val: "month" | "year" | "quarter" | "week" | "date"): boolean;
    };
    presets: {
        type: import("vue").PropType<import("./type").PresetRange>;
    };
    presetsPlacement: {
        type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
        default: "left" | "top" | "bottom" | "right";
        validator(val: "left" | "top" | "bottom" | "right"): boolean;
    };
    timePickerProps: {
        type: import("vue").PropType<import("..").TdTimePickerProps>;
    };
    panelPreselection: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    value: import("./type").DateRangeValue;
    disabled: boolean;
    mode: "month" | "year" | "quarter" | "week" | "date";
    format: string;
    modelValue: import("./type").DateRangeValue;
    defaultValue: import("./type").DateRangeValue;
    enableTimePicker: boolean;
    presetsPlacement: "left" | "top" | "bottom" | "right";
    defaultTime: string[];
    panelPreselection: boolean;
}, {}>;
export default _default;
