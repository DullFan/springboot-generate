/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var dayjs = require('dayjs');
var isFunction = require('lodash/isFunction');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var form_hooks = require('../form/hooks.js');
var datePicker_hooks_useSingle = require('./hooks/useSingle.js');
var _common_js_datePicker_utils = require('../_chunks/dep-8d57e5cd.js');
var datePicker_props = require('./props.js');
var selectInput_index = require('../select-input/index.js');
var datePicker_panel_SinglePanel = require('./panel/SinglePanel.js');
var isDate = require('lodash/isDate');
var configProvider_useConfig = require('../config-provider/useConfig.js');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('tdesign-icons-vue-next');
require('lodash/omit');
require('../hooks/useGlobalIcon.js');
require('./hooks/useSingleValue.js');
require('@babel/runtime/helpers/slicedToArray');
require('../hooks/useVModel.js');
require('../_chunks/dep-4980a22e.js');
require('@babel/runtime/helpers/objectDestructuringEmpty');
require('@babel/runtime/helpers/extends');
require('../_chunks/dep-05c45a56.js');
require('lodash/chunk');
require('../_common/js/log/log.js');
require('../select-input/select-input.js');
require('../popup/index.js');
require('../popup/popup.js');
require('@popperjs/core');
require('lodash/debounce');
require('../utils/dom.js');
require('lodash/isArray');
require('../utils/easing.js');
require('../_common/js/utils/set-style.js');
require('../popup/container.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../popup/props.js');
require('../hooks/useResizeObserver.js');
require('../utils/withInstall.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('../select-input/props.js');
require('../select-input/useSingle.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/pick');
require('../input/index.js');
require('../input/input.js');
require('../input/props.js');
require('../input/useInput.js');
require('../form/const.js');
require('../input/useLengthLimit.js');
require('../_common/js/utils/helper.js');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('../input/useInputEventHandler.js');
require('../input/useInputWidth.js');
require('../input/input-group.js');
require('../input/input-group-props.js');
require('../loading/index.js');
require('../loading/directive.js');
require('lodash/mapKeys');
require('lodash/isEqual');
require('../loading/plugin.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../loading/props.js');
require('../hooks/useTeleport.js');
require('../hooks/useDefaultValue.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/tag-input.js');
require('../tag-input/props.js');
require('../tag-input/hooks/useTagScroll.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/tag.js');
require('tinycolor2');
require('../tag/props.js');
require('../tag/check-tag.js');
require('../tag/check-tag-props.js');
require('../_common/js/common.js');
require('../tag/check-tag-group.js');
require('../tag/check-tag-group-props.js');
require('../tag-input/hooks/useHover.js');
require('../tag-input/hooks/useDragSorter.js');
require('../select-input/useOverlayInnerStyle.js');
require('./panel/PanelContent.js');
require('./base/Header.js');
require('../pagination/index.js');
require('../pagination/pagination.js');
require('lodash/isNaN');
require('../input-number/index.js');
require('../input-number/input-number.js');
require('../button/index.js');
require('../button/button.js');
require('../button/props.js');
require('../hooks/useRipple.js');
require('../hooks/useKeepAnimation.js');
require('../utils/set-style.js');
require('../hooks/useDisabled.js');
require('lodash/isBoolean');
require('../input-number/props.js');
require('../input-number/useInputNumber.js');
require('../hooks/useCommonClassName.js');
require('../_common/js/input-number/number.js');
require('../_common/js/input-number/large-number.js');
require('../select/index.js');
require('../select/select.js');
require('lodash/get');
require('lodash/intersection');
require('../common-components/fake-arrow.js');
require('../select/select-panel.js');
require('../select/option.js');
require('../select/option-props.js');
require('../checkbox/index.js');
require('../checkbox/checkbox.js');
require('../checkbox/props.js');
require('../checkbox/constants.js');
require('../checkbox/hooks/useCheckboxLazyLoad.js');
require('../_common/js/utils/observe.js');
require('../checkbox/hooks/useKeyboardEvent.js');
require('../checkbox/group.js');
require('../checkbox/checkbox-group-props.js');
require('../hooks/slot.js');
require('../select/helper.js');
require('../select/optionGroup.js');
require('../select/option-group-props.js');
require('../select/props.js');
require('../select/hooks/usePanelVirtualScroll.js');
require('../hooks/useVirtualScroll.js');
require('../select/hooks/useSelectOptions.js');
require('../select/hooks/useKeyboardControl.js');
require('../input-adornment/index.js');
require('../input-adornment/input-adornment.js');
require('../input-adornment/props.js');
require('../pagination/props.js');
require('../pagination/usePaginationClasses.js');
require('../pagination/useMoreAction.js');
require('../pagination/pagination-mini.js');
require('../pagination/pagination-mini-props.js');
require('./base/Table.js');
require('./base/Cell.js');
require('../time-picker/panel/time-picker-panel.js');
require('../_common/js/time-picker/const.js');
require('../time-picker/panel/props.js');
require('../time-picker/props.js');
require('../time-picker/panel/single-panel.js');
require('lodash/range');
require('lodash/padStart');
require('../_common/js/time-picker/utils.js');
require('./panel/ExtraContent.js');
require('./base/Footer.js');
require('./hooks/useTableData.js');
require('./hooks/useDisableDate.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);
var isFunction__default = /*#__PURE__*/_interopDefaultLegacy(isFunction);
var isDate__default = /*#__PURE__*/_interopDefaultLegacy(isDate);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _DatePicker = Vue.defineComponent({
  name: "TDatePicker",
  props: _objectSpread({}, datePicker_props["default"]),
  setup: function setup(props2) {
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("date-picker");
    var _useSingle = datePicker_hooks_useSingle["default"](props2),
      inputValue = _useSingle.inputValue,
      popupVisible = _useSingle.popupVisible,
      inputProps = _useSingle.inputProps,
      popupProps = _useSingle.popupProps,
      isHoverCell = _useSingle.isHoverCell,
      cacheValue = _useSingle.cacheValue,
      value = _useSingle.value,
      year = _useSingle.year,
      month = _useSingle.month,
      time = _useSingle.time,
      inputRef = _useSingle.inputRef,
      onChange = _useSingle.onChange;
    var disabled = form_hooks.useFormDisabled();
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var _useConfig = configProvider_useConfig.useConfig("datePicker"),
      globalConfig = _useConfig.globalConfig;
    var formatRef = Vue.computed(function () {
      return _common_js_datePicker_utils.getDefaultFormat({
        mode: props2.mode,
        format: props2.format,
        valueType: props2.valueType,
        enableTimePicker: props2.enableTimePicker
      });
    });
    var valueDisplayParams = Vue.computed(function () {
      return {
        value: value.value,
        displayValue: inputValue.value
      };
    });
    Vue.watch(popupVisible, function (visible) {
      var _formatRef$value;
      var dateValue = value.value && !isDate__default["default"](value.value) && !["week", "quarter"].includes(props2.mode) ? _common_js_datePicker_utils.covertToDate(value.value, (_formatRef$value = formatRef.value) === null || _formatRef$value === void 0 ? void 0 : _formatRef$value.valueType) : value.value;
      cacheValue.value = _common_js_datePicker_utils.formatDate(dateValue, {
        format: formatRef.value.format
      });
      inputValue.value = _common_js_datePicker_utils.formatDate(dateValue, {
        format: formatRef.value.format
      });
      if (visible) {
        year.value = _common_js_datePicker_utils.parseToDayjs(value.value, formatRef.value.format).year();
        month.value = _common_js_datePicker_utils.parseToDayjs(value.value, formatRef.value.format).month();
        time.value = _common_js_datePicker_utils.formatTime(value.value, formatRef.value.format, formatRef.value.timeFormat, props2.defaultTime);
      } else {
        isHoverCell.value = false;
      }
    });
    function onCellMouseEnter(date) {
      isHoverCell.value = true;
      inputValue.value = _common_js_datePicker_utils.formatDate(date, {
        format: formatRef.value.format
      });
    }
    function onCellMouseLeave() {
      isHoverCell.value = false;
      inputValue.value = _common_js_datePicker_utils.formatDate(cacheValue.value, {
        format: formatRef.value.format
      });
    }
    function onCellClick(date) {
      var _props2$onPick;
      isHoverCell.value = false;
      if (props2.mode === "date") {
        year.value = date.getFullYear();
        month.value = date.getMonth();
      }
      if (props2.enableTimePicker) {
        cacheValue.value = _common_js_datePicker_utils.formatDate(date, {
          format: formatRef.value.format
        });
      } else {
        onChange === null || onChange === void 0 || onChange(_common_js_datePicker_utils.formatDate(date, {
          format: formatRef.value.format,
          targetFormat: formatRef.value.valueType
        }), {
          dayjsValue: _common_js_datePicker_utils.parseToDayjs(date, formatRef.value.format),
          trigger: "pick"
        });
        popupVisible.value = false;
      }
      (_props2$onPick = props2.onPick) === null || _props2$onPick === void 0 || _props2$onPick.call(props2, date);
    }
    function onJumperClick(_ref) {
      var trigger = _ref.trigger;
      var monthCountMap = {
        date: 1,
        week: 1,
        month: 12,
        quarter: 12,
        year: 120
      };
      var monthCount = monthCountMap[props2.mode] || 0;
      var current = new Date(year.value, month.value);
      var next = null;
      if (trigger === "prev") {
        next = _common_js_datePicker_utils.subtractMonth(current, monthCount);
      } else if (trigger === "current") {
        next = new Date();
      } else if (trigger === "next") {
        next = _common_js_datePicker_utils.addMonth(current, monthCount);
      }
      var nextYear = next.getFullYear();
      var nextMonth = next.getMonth();
      year.value = nextYear;
      month.value = nextMonth;
    }
    function onTimePickerChange(val) {
      var _props2$onPick2;
      time.value = val;
      var _extractTimeObj = _common_js_datePicker_utils.extractTimeObj(val),
        hours = _extractTimeObj.hours,
        minutes = _extractTimeObj.minutes,
        seconds = _extractTimeObj.seconds,
        milliseconds = _extractTimeObj.milliseconds,
        meridiem = _extractTimeObj.meridiem;
      var nextHours = hours;
      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
      var currentDate = !dayjs__default["default"](inputValue.value, formatRef.value.format).isValid() ? dayjs__default["default"]() : dayjs__default["default"](inputValue.value, formatRef.value.format);
      var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
      inputValue.value = _common_js_datePicker_utils.formatDate(nextDate, {
        format: formatRef.value.format
      });
      cacheValue.value = _common_js_datePicker_utils.formatDate(nextDate, {
        format: formatRef.value.format
      });
      (_props2$onPick2 = props2.onPick) === null || _props2$onPick2 === void 0 || _props2$onPick2.call(props2, nextDate);
    }
    function onConfirmClick(_ref2) {
      var e = _ref2.e;
      var nextValue = _common_js_datePicker_utils.formatDate(inputValue.value, {
        format: formatRef.value.format
      });
      if (nextValue) {
        var _props2$onConfirm;
        props2 === null || props2 === void 0 || (_props2$onConfirm = props2.onConfirm) === null || _props2$onConfirm === void 0 || _props2$onConfirm.call(props2, {
          date: dayjs__default["default"](nextValue).toDate(),
          e: e
        });
        onChange === null || onChange === void 0 || onChange(_common_js_datePicker_utils.formatDate(inputValue.value, {
          format: formatRef.value.format,
          targetFormat: formatRef.value.valueType
        }), {
          dayjsValue: _common_js_datePicker_utils.parseToDayjs(inputValue.value, formatRef.value.format),
          trigger: "confirm"
        });
      } else {
        inputValue.value = _common_js_datePicker_utils.formatDate(value.value, {
          format: formatRef.value.format
        });
      }
      popupVisible.value = false;
    }
    function onPresetClick(presetValue) {
      var presetVal = isFunction__default["default"](presetValue) ? presetValue() : presetValue;
      onChange === null || onChange === void 0 || onChange(_common_js_datePicker_utils.formatDate(presetVal, {
        format: formatRef.value.format,
        targetFormat: formatRef.value.valueType
      }), {
        dayjsValue: _common_js_datePicker_utils.parseToDayjs(presetVal, formatRef.value.format),
        trigger: "preset"
      });
      popupVisible.value = false;
    }
    function onYearChange(nextYear) {
      year.value = nextYear;
    }
    function onMonthChange(nextMonth) {
      month.value = nextMonth;
    }
    var panelProps = Vue.computed(function () {
      return {
        value: cacheValue.value,
        year: year.value,
        month: month.value,
        format: formatRef.value.format,
        mode: props2.mode,
        presets: props2.presets,
        time: time.value,
        disableDate: props2.disableDate,
        firstDayOfWeek: props2.firstDayOfWeek,
        timePickerProps: props2.timePickerProps,
        enableTimePicker: props2.enableTimePicker,
        presetsPlacement: props2.presetsPlacement,
        popupVisible: popupVisible.value,
        onCellClick: onCellClick,
        onCellMouseEnter: onCellMouseEnter,
        onCellMouseLeave: onCellMouseLeave,
        onJumperClick: onJumperClick,
        onConfirmClick: onConfirmClick,
        onPresetClick: onPresetClick,
        onYearChange: onYearChange,
        onMonthChange: onMonthChange,
        onTimePickerChange: onTimePickerChange,
        onPanelClick: function onPanelClick() {
          var _inputRef$value, _inputRef$value$focus;
          return (_inputRef$value = inputRef.value) === null || _inputRef$value === void 0 || (_inputRef$value$focus = _inputRef$value.focus) === null || _inputRef$value$focus === void 0 ? void 0 : _inputRef$value$focus.call(_inputRef$value);
        }
      };
    });
    return function () {
      return Vue.createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [Vue.createVNode(selectInput_index.SelectInput, Vue.mergeProps({
        "disabled": disabled.value,
        "value": inputValue.value,
        "status": props2.status,
        "tips": props2.tips,
        "clearable": props2.clearable,
        "popupProps": popupProps.value,
        "inputProps": inputProps.value,
        "placeholder": props2.placeholder || globalConfig.value.placeholder[props2.mode],
        "popupVisible": popupVisible.value,
        "valueDisplay": function valueDisplay() {
          return renderTNodeJSX("valueDisplay", {
            params: valueDisplayParams.value
          });
        }
      }, props2.selectInputProps, {
        "panel": function panel() {
          return Vue.createVNode(datePicker_panel_SinglePanel["default"], panelProps.value, null);
        }
      }), null)]);
    };
  }
});

exports["default"] = _DatePicker;
//# sourceMappingURL=DatePicker.js.map
