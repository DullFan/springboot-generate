{"version":3,"file":"useRangeValue.js","sources":["../../../src/date-picker/hooks/useRangeValue.ts"],"sourcesContent":["import { ref, toRefs, watchEffect, computed } from 'vue';\nimport useVModel from '../../hooks/useVModel';\nimport isArray from 'lodash/isArray';\n\nimport { TdDateRangePickerProps } from '../type';\nimport {\n  isValidDate,\n  formatDate,\n  formatTime,\n  getDefaultFormat,\n  initYearMonthTime,\n} from '../../_common/js/date-picker/format';\nimport { extractTimeFormat } from '../../_common/js/date-picker/utils';\n\nexport const PARTIAL_MAP = { first: 'start', second: 'end' };\n\nexport default function useRangeValue(props: TdDateRangePickerProps) {\n  const { value: valueFromProps, modelValue } = toRefs(props);\n\n  const [value, onChange] = useVModel(valueFromProps, modelValue, props.defaultValue, props.onChange);\n\n  const formatRef = computed(() =>\n    getDefaultFormat({\n      mode: props.mode,\n      format: props.format,\n      enableTimePicker: props.enableTimePicker,\n    }),\n  );\n\n  if (props.enableTimePicker) {\n    if (!extractTimeFormat(formatRef.value.format))\n      console.error(`format: ${formatRef.value.format} 不规范，包含时间选择必须要有时间格式化 HH:mm:ss`);\n  }\n\n  // warning invalid value\n  if (!isArray(value.value)) {\n    console.error(`typeof value: ${value.value} must be Array!`);\n  } else if (!isValidDate(value.value, formatRef.value.format)) {\n    console.error(\n      `value: ${value.value} is invalid dateTime! Check whether the value is consistent with format: ${formatRef.value.format}`,\n    );\n  }\n\n  const isFirstValueSelected = ref(false); // 记录面板点击次数，两次后才自动关闭\n  const time = ref(\n    initYearMonthTime({\n      value: value.value,\n      mode: props.mode,\n      format: formatRef.value.format,\n      timeFormat: formatRef.value.timeFormat,\n    }).time,\n  );\n  const month = ref(\n    initYearMonthTime({\n      value: value.value,\n      mode: props.mode,\n      format: formatRef.value.format,\n      enableTimePicker: props.enableTimePicker,\n    }).month,\n  );\n  const year = ref(initYearMonthTime({ value: value.value, mode: props.mode, format: formatRef.value.format }).year);\n  const cacheValue = ref(formatDate(value.value, { format: formatRef.value.format })); // 选择阶段预选状态\n\n  // 输入框响应 value 变化\n  watchEffect(() => {\n    if (!value.value) {\n      cacheValue.value = [];\n      return;\n    }\n    if (!isValidDate(value.value, formatRef.value.format)) return;\n\n    cacheValue.value = formatDate(value.value, {\n      format: formatRef.value.format,\n    });\n    time.value = formatTime(\n      value.value,\n      formatRef.value.format,\n      formatRef.value.timeFormat,\n      props.defaultTime,\n    ) as string[];\n  });\n\n  return {\n    year,\n    month,\n    value,\n    time,\n    isFirstValueSelected,\n    cacheValue,\n    onChange,\n  };\n}\n"],"names":["PARTIAL_MAP","first","second","useRangeValue","props","_toRefs","toRefs","valueFromProps","value","modelValue","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","formatRef","computed","getDefaultFormat","mode","format","enableTimePicker","extractTimeFormat","console","error","concat","isArray","isValidDate","isFirstValueSelected","ref","time","initYearMonthTime","timeFormat","month","year","cacheValue","formatDate","watchEffect","formatTime","defaultTime"],"mappings":"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"}