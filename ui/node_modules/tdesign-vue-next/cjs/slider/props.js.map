{"version":3,"file":"props.js","sources":["../../src/slider/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdSliderProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否禁用组件 */\n  disabled: Boolean,\n  /** 用于控制数字输入框组件，值为 false 表示不显示数字输入框；值为 true 表示呈现默认数字输入框；值类型为 Object 表示透传属性到数字输入框组件 */\n  inputNumberProps: {\n    type: [Boolean, Object] as PropType<TdSliderProps['inputNumberProps']>,\n    default: false as TdSliderProps['inputNumberProps'],\n  },\n  /** 滑块当前值文本。<br />值为 true 显示默认文案；值为 false 不显示滑块当前值文本；<br />值为 `${value}%` 则表示组件会根据占位符渲染文案；<br />值类型为函数时，参数 `value` 标识滑块值，参数 `position=start` 表示范围滑块的起始值，参数 `position=end` 表示范围滑块的终点值 */\n  label: {\n    type: [String, Boolean, Function] as PropType<TdSliderProps['label']>,\n    default: true as TdSliderProps['label'],\n  },\n  /** 滑块布局方向 */\n  layout: {\n    type: String as PropType<TdSliderProps['layout']>,\n    default: 'horizontal' as TdSliderProps['layout'],\n    validator(val: TdSliderProps['layout']): boolean {\n      if (!val) return true;\n      return ['vertical', 'horizontal'].includes(val);\n    },\n  },\n  /** 刻度标记，示例：[0, 10, 40, 200] 或者 `{ 10: (val) => val + '%', 50: (h) => <button>50</button> }` */\n  marks: {\n    type: [Object, Array] as PropType<TdSliderProps['marks']>,\n  },\n  /** 滑块范围最大值 */\n  max: {\n    type: Number,\n    default: 100,\n  },\n  /** 滑块范围最小值 */\n  min: {\n    type: Number,\n    default: 0,\n  },\n  /** 双游标滑块 */\n  range: Boolean,\n  /** 控制步长刻度值显示 */\n  showStep: Boolean,\n  /** 步长 */\n  step: {\n    type: Number,\n    default: 1,\n  },\n  /** 透传提示组件属性 */\n  tooltipProps: {\n    type: Object as PropType<TdSliderProps['tooltipProps']>,\n  },\n  /** 滑块值 */\n  value: {\n    type: [Number, Array] as PropType<TdSliderProps['value']>,\n    default: undefined as TdSliderProps['value'],\n  },\n  modelValue: {\n    type: [Number, Array] as PropType<TdSliderProps['value']>,\n    default: undefined as TdSliderProps['value'],\n  },\n  /** 滑块值，非受控属性 */\n  defaultValue: {\n    type: [Number, Array] as PropType<TdSliderProps['defaultValue']>,\n    default: 0 as TdSliderProps['defaultValue'],\n  },\n  /** 滑块值变化时触发 */\n  onChange: Function as PropType<TdSliderProps['onChange']>,\n  /** 松开拖动`mouseup` 或点击滑块条时触发，适合不希望在拖动滑块过程频繁触发回调的场景实用 */\n  onChangeEnd: Function as PropType<TdSliderProps['onChangeEnd']>,\n};\n"],"names":["disabled","Boolean","inputNumberProps","type","Object","label","String","Function","layout","validator","val","includes","marks","Array","max","Number","min","range","showStep","step","tooltipProps","value","modelValue","defaultValue","onChange","onChangeEnd"],"mappings":";;;;;;;;;;AASA,YAAe;AAEbA,EAAAA,QAAU,EAAAC,OAAA;AAEVC,EAAAA,gBAAkB,EAAA;AAChBC,IAAAA,IAAA,EAAM,CAACF,OAAA,EAASG,MAAM,CAAA;IACtB,SAAS,EAAA,KAAA;GACX;AAEAC,EAAAA,KAAO,EAAA;AACLF,IAAAA,IAAM,EAAA,CAACG,MAAQ,EAAAL,OAAA,EAASM,QAAQ,CAAA;IAChC,SAAS,EAAA,IAAA;GACX;AAEAC,EAAAA,MAAQ,EAAA;AACNL,IAAAA,IAAM,EAAAG,MAAA;AACN,IAAA,SAAA,EAAS,YAAA;IACTG,6BAAUC,CAAAA,GAAuC,EAAA;AAC/C,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,UAAA,EAAY,YAAY,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AAChD,KAAA;GACF;AAEAE,EAAAA,KAAO,EAAA;AACLT,IAAAA,IAAA,EAAM,CAACC,MAAA,EAAQS,KAAK,CAAA;GACtB;AAEAC,EAAAA,GAAK,EAAA;AACHX,IAAAA,IAAM,EAAAY,MAAA;IACN,SAAS,EAAA,GAAA;GACX;AAEAC,EAAAA,GAAK,EAAA;AACHb,IAAAA,IAAM,EAAAY,MAAA;IACN,SAAS,EAAA,CAAA;GACX;AAEAE,EAAAA,KAAO,EAAAhB,OAAA;AAEPiB,EAAAA,QAAU,EAAAjB,OAAA;AAEVkB,EAAAA,IAAM,EAAA;AACJhB,IAAAA,IAAM,EAAAY,MAAA;IACN,SAAS,EAAA,CAAA;GACX;AAEAK,EAAAA,YAAc,EAAA;AACZjB,IAAAA,IAAM,EAAAC,MAAAA;GACR;AAEAiB,EAAAA,KAAO,EAAA;AACLlB,IAAAA,IAAA,EAAM,CAACY,MAAA,EAAQF,KAAK,CAAA;AACpB,IAAA,SAAA,EAAS,KAAA,CAAA;GACX;AACAS,EAAAA,UAAY,EAAA;AACVnB,IAAAA,IAAA,EAAM,CAACY,MAAA,EAAQF,KAAK,CAAA;AACpB,IAAA,SAAA,EAAS,KAAA,CAAA;GACX;AAEAU,EAAAA,YAAc,EAAA;AACZpB,IAAAA,IAAA,EAAM,CAACY,MAAA,EAAQF,KAAK,CAAA;IACpB,SAAS,EAAA,CAAA;GACX;AAEAW,EAAAA,QAAU,EAAAjB,QAAA;AAEVkB,EAAAA,WAAa,EAAAlB,QAAAA;AACf,CAAA;;;;"}