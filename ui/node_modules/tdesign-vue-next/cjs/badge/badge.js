/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var badge_props = require('./props.js');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useConfig = require('../hooks/useConfig.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-4980a22e.js');
require('dayjs');
require('lodash/isArray');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _Badge = Vue.defineComponent({
  name: "TBadge",
  inheritAttrs: false,
  props: _objectSpread({}, badge_props["default"]),
  setup: function setup(props2, _ref) {
    var attrs = _ref.attrs;
    var renderContent = hooks_tnode.useContent();
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var displayCount = Vue.computed(function () {
      var count = renderTNodeJSX("count");
      if (Number.isNaN(Number(count))) {
        return count;
      }
      count = Number(props2.count);
      return count > props2.maxCount ? "".concat(props2.maxCount, "+") : count;
    });
    var getOffset = function getOffset() {
      if (!props2.offset) return {};
      var _props2$offset = _slicedToArray__default["default"](props2.offset, 2),
        xOffset = _props2$offset[0],
        yOffset = _props2$offset[1];
      xOffset = Number.isNaN(Number(xOffset)) ? xOffset : "".concat(xOffset, "px");
      yOffset = Number.isNaN(Number(yOffset)) ? yOffset : "".concat(yOffset, "px");
      return {
        xOffset: xOffset,
        yOffset: yOffset
      };
    };
    var classPrefix = hooks_useConfig.usePrefixClass();
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("badge");
    var isHidden = Vue.computed(function () {
      return !props2.showZero && (displayCount.value === 0 || displayCount.value === "0");
    });
    var badgeClassNames = Vue.computed(function () {
      return [_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "--dot"), !!props2.dot), "".concat(COMPONENT_NAME.value, "--circle"), !props2.dot && props2.shape === "circle"), "".concat(COMPONENT_NAME.value, "--round"), !props2.dot && props2.shape === "round"), "".concat(classPrefix.value, "-size-s"), props2.size === "small")];
    });
    var inlineStyle = Vue.computed(function () {
      var _getOffset = getOffset(),
        xOffset = _getOffset.xOffset,
        yOffset = _getOffset.yOffset;
      return {
        background: "".concat(props2.color),
        right: xOffset,
        top: yOffset
      };
    });
    return function () {
      return Vue.createVNode("div", Vue.mergeProps({
        "class": COMPONENT_NAME.value
      }, attrs), [renderContent("default", "content"), isHidden.value ? null : Vue.createVNode("sup", {
        "class": badgeClassNames.value,
        "style": inlineStyle.value
      }, [props2.dot ? null : displayCount.value])]);
    };
  }
});

exports["default"] = _Badge;
//# sourceMappingURL=badge.js.map
