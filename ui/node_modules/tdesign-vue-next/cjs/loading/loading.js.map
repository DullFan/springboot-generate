{"version":3,"file":"loading.js","sources":["../../src/loading/loading.tsx"],"sourcesContent":["import { defineComponent, ref, computed, watch, onMounted, toRefs, CSSProperties, Teleport } from 'vue';\nimport GradientIcon from './icon/gradient';\nimport { addClass, removeClass } from '../utils/dom';\nimport { renderTNodeJSX, renderContent } from '../utils/render-tnode';\nimport props from './props';\n\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport useTeleport from '../hooks/useTeleport';\n\nconst useComponentClassName = () => {\n  return {\n    name: usePrefixClass('loading'),\n    centerClass: usePrefixClass('loading--center'),\n    fullscreenClass: usePrefixClass('loading__fullscreen'),\n    lockClass: usePrefixClass('loading--lock'),\n    overlayClass: usePrefixClass('loading__overlay'),\n    relativeClass: usePrefixClass('loading__parent'),\n    fullClass: usePrefixClass('loading--full'),\n    inheritColorClass: usePrefixClass('loading--inherit-color'),\n  };\n};\n\nexport default defineComponent({\n  name: 'TLoading',\n  inheritAttrs: false,\n  props,\n  setup(props, { slots }) {\n    const delayShowLoading = ref(false);\n\n    const { name, centerClass, fullscreenClass, lockClass, overlayClass, relativeClass, fullClass, inheritColorClass } =\n      useComponentClassName();\n\n    const classPrefix = usePrefixClass();\n    const { SIZE } = useCommonClassName();\n\n    const countDelay = () => {\n      delayShowLoading.value = false;\n      const timer = setTimeout(() => {\n        delayShowLoading.value = true;\n        clearTimeout(timer);\n      }, props.delay);\n    };\n    // teleport容器\n    const teleportElement = useTeleport(() => props.attach);\n    // 延时计时是否完成。用于控制延时计时结束前不能显示加载态\n    const delayCounted = computed(() => Boolean(!props.delay || (props.delay && delayShowLoading.value)));\n\n    // loading style\n    const styles = computed(() => {\n      const styles: CSSProperties = {};\n      if (props.zIndex !== undefined) {\n        styles.zIndex = props.zIndex;\n      }\n      if (!['small', 'medium', 'large'].includes(props.size)) {\n        styles['font-size'] = props.size;\n      }\n      return styles;\n    });\n\n    const hasContent = computed(() => Boolean(props.default || slots.default || props.content || slots.content));\n    const lockFullscreen = computed(() => props.preventScrollThrough && props.fullscreen);\n    const showText = computed(() => Boolean(props.text || slots.text));\n    const showWrapLoading = computed(() => hasContent.value && props.loading && delayCounted.value);\n    const showFullScreenLoading = computed(() => props.fullscreen && props.loading && delayCounted.value);\n    const showNormalLoading = computed(() => props.attach && props.loading && delayCounted.value);\n    const showAttachedLoading = computed(() => props.attach && props.loading && delayCounted.value);\n    const classes = computed(() => {\n      const baseClasses = [\n        centerClass.value,\n        SIZE.value[props.size],\n        { [inheritColorClass.value]: props.inheritColor },\n      ];\n      const fullScreenClasses = [name.value, fullscreenClass.value, centerClass.value, overlayClass.value];\n\n      return {\n        baseClasses,\n        attachClasses: baseClasses.concat([name.value, fullClass.value, { [overlayClass.value]: props.showOverlay }]),\n        withContentClasses: baseClasses.concat([\n          name.value,\n          fullClass.value,\n          {\n            [overlayClass.value]: props.showOverlay,\n          },\n        ]),\n        fullScreenClasses,\n        normalClasses: baseClasses.concat([name.value]),\n      };\n    });\n\n    const { loading } = toRefs(props);\n\n    watch([loading], ([isLoading]) => {\n      if (isLoading) {\n        countDelay();\n        lockFullscreen.value && addClass(document.body, lockClass.value);\n      } else {\n        lockFullscreen.value && removeClass(document.body, lockClass.value);\n      }\n    });\n\n    onMounted(() => {\n      props.delay && countDelay();\n    });\n\n    return {\n      classPrefix,\n      relativeClass,\n      delayShowLoading,\n      styles,\n      showText,\n      hasContent,\n      classes,\n      lockFullscreen,\n      showWrapLoading,\n      showNormalLoading,\n      showFullScreenLoading,\n      showAttachedLoading,\n      teleportElement,\n    };\n  },\n  render() {\n    const { fullScreenClasses, baseClasses, withContentClasses, attachClasses, normalClasses } = this.classes;\n\n    const defaultIndicator = <GradientIcon size={this.size} />;\n    const indicator = this.loading && renderTNodeJSX(this, 'indicator', defaultIndicator);\n    const text = this.showText && <div class={`${this.classPrefix}-loading__text`}>{renderTNodeJSX(this, 'text')}</div>;\n\n    // full screen loading\n    if (this.fullscreen) {\n      if (!this.showFullScreenLoading || !this.loading) return null;\n      return (\n        <Teleport disabled={!this.attach || !this.teleportElement} to={this.teleportElement}>\n          <div class={fullScreenClasses} style={this.styles} {...this.$attrs}>\n            <div class={baseClasses}>\n              {indicator}\n              {text}\n            </div>\n          </div>\n        </Teleport>\n      );\n    }\n\n    // Loading is wrapping a HTMLElement.\n    if (this.hasContent) {\n      return (\n        <div class={this.relativeClass} {...this.$attrs}>\n          {renderContent(this, 'default', 'content')}\n          {this.showWrapLoading && (\n            <div class={withContentClasses} style={this.styles}>\n              {indicator}\n              {text}\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    // transfer parent node\n    if (this.attach) {\n      if (!this.showAttachedLoading || !this.loading) return null;\n      return (\n        <Teleport disabled={!this.attach || !this.teleportElement} to={this.teleportElement}>\n          <div class={attachClasses} style={this.styles} {...this.$attrs}>\n            {indicator}\n            {text}\n          </div>\n        </Teleport>\n      );\n    }\n\n    // Normal Loading without overlay or content\n    return this.loading ? (\n      <div class={normalClasses} style={this.styles} {...this.$attrs}>\n        {indicator}\n        {text}\n      </div>\n    ) : null;\n  },\n});\n"],"names":["useComponentClassName","name","usePrefixClass","centerClass","fullscreenClass","lockClass","overlayClass","relativeClass","fullClass","inheritColorClass","defineComponent","inheritAttrs","props","setup","slots","_ref","delayShowLoading","ref","_useComponentClassNam","classPrefix","_useCommonClassName","useCommonClassName","SIZE","countDelay","value","timer","setTimeout","clearTimeout","delay","teleportElement","useTeleport","attach","delayCounted","computed","Boolean","styles","zIndex","includes","size","hasContent","content","lockFullscreen","preventScrollThrough","fullscreen","showText","text","showWrapLoading","loading","showFullScreenLoading","showNormalLoading","showAttachedLoading","classes","baseClasses","_defineProperty","inheritColor","fullScreenClasses","attachClasses","concat","showOverlay","withContentClasses","normalClasses","_toRefs","toRefs","watch","_ref5","_ref6","_slicedToArray","isLoading","addClass","document","body","removeClass","onMounted","render","_this","_this$classes","defaultIndicator","_createVNode","GradientIcon","indicator","renderTNodeJSX","Teleport","$attrs","_mergeProps","renderContent","_default"],"mappings":"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"}