/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var imageViewer_base_ImageModalIcon = require('./ImageModalIcon.js');
var tooltip_index = require('../../tooltip/index.js');
var hooks_useConfig = require('../../hooks/useConfig.js');
var imageViewer_utils = require('../utils.js');
var _common_js_inputNumber_largeNumber = require('../../_common/js/input-number/large-number.js');
var hooks_useImagePreviewUrl = require('../../hooks/useImagePreviewUrl.js');
var configProvider_useConfig = require('../../config-provider/useConfig.js');
require('@babel/runtime/helpers/defineProperty');
require('../../hooks/tnode.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('lodash/cloneDeep');
require('../../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../../_common/js/global-config/default-config.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-4980a22e.js');
require('dayjs');
require('lodash/isArray');
require('../../tooltip/tooltip.js');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/omit');
require('../../tooltip/props.js');
require('../../popup/props.js');
require('../../popup/index.js');
require('../../popup/popup.js');
require('@popperjs/core');
require('lodash/debounce');
require('../../hooks/useVModel.js');
require('../../utils/dom.js');
require('../../utils/easing.js');
require('../../_common/js/utils/set-style.js');
require('../../popup/container.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../../hooks/useResizeObserver.js');
require('../../utils/withInstall.js');
require('../../tooltip/util.js');
require('lodash/isNumber');
require('../../_common/js/log/log.js');
require('../../_common/js/upload/utils.js');

var TImageViewerUtils = Vue.defineComponent({
  name: "TImageViewerUtils",
  props: {
    scale: Number,
    onRotate: Function,
    onZoomIn: Function,
    onZoomOut: Function,
    onMirror: Function,
    onReset: Function,
    currentImage: {
      type: Object,
      "default": function _default() {
        return {};
      }
    }
  },
  setup: function setup(props) {
    var classPrefix = hooks_useConfig.usePrefixClass();
    var imageUrl = Vue.computed(function () {
      return props.currentImage.mainImage;
    });
    var _useImagePreviewUrl = hooks_useImagePreviewUrl.useImagePreviewUrl(imageUrl),
      previewUrl = _useImagePreviewUrl.previewUrl;
    var _useConfig = configProvider_useConfig.useConfig("imageViewer"),
      globalConfig = _useConfig.globalConfig;
    return function () {
      return Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image-viewer__utils")
      }, [Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image-viewer__utils-content")
      }, [Vue.createVNode(tooltip_index.Tooltip, {
        "overlayClassName": "".concat(classPrefix.value, "-image-viewer__utils--tip"),
        "content": globalConfig.value.mirrorTipText,
        "destroyOnClose": true,
        "placement": "top",
        "showArrow": true,
        "theme": "default"
      }, {
        "default": function _default() {
          return [Vue.createVNode(imageViewer_base_ImageModalIcon["default"], {
            "onClick": props.onMirror,
            "icon": function icon() {
              return Vue.createVNode(tdesignIconsVueNext.MirrorIcon, {
                "size": "medium"
              }, null);
            }
          }, null)];
        }
      }), Vue.createVNode(tooltip_index.Tooltip, {
        "overlayClassName": "".concat(classPrefix.value, "-image-viewer__utils--tip"),
        "content": globalConfig.value.rotateTipText,
        "destroyOnClose": true,
        "placement": "top",
        "showArrow": true,
        "theme": "default"
      }, {
        "default": function _default() {
          return [Vue.createVNode(imageViewer_base_ImageModalIcon["default"], {
            "onClick": props.onRotate,
            "icon": function icon() {
              return Vue.createVNode(tdesignIconsVueNext.RotationIcon, {
                "size": "medium"
              }, null);
            }
          }, null)];
        }
      }), Vue.createVNode(imageViewer_base_ImageModalIcon["default"], {
        "icon": function icon() {
          return Vue.createVNode(tdesignIconsVueNext.ZoomOutIcon, {
            "size": "medium"
          }, null);
        },
        "onClick": props.onZoomOut
      }, null), Vue.createVNode(imageViewer_base_ImageModalIcon["default"], {
        "class": "".concat(classPrefix.value, "-image-viewer__utils-scale"),
        "size": "medium",
        "label": "".concat(_common_js_inputNumber_largeNumber.largeNumberToFixed(String(props.scale * 100)), "%")
      }, null), Vue.createVNode(imageViewer_base_ImageModalIcon["default"], {
        "icon": function icon() {
          return Vue.createVNode(tdesignIconsVueNext.ZoomInIcon, {
            "size": "medium"
          }, null);
        },
        "onClick": props.onZoomIn
      }, null), Vue.createVNode(tooltip_index.Tooltip, {
        "overlayClassName": "".concat(classPrefix.value, "-image-viewer__utils--tip"),
        "content": globalConfig.value.originalSizeTipText,
        "destroyOnClose": true,
        "placement": "top",
        "showArrow": true,
        "theme": "default"
      }, {
        "default": function _default() {
          return [Vue.createVNode("div", {
            "class": "".concat(classPrefix.value, "-image-viewer__modal-icon")
          }, [Vue.createVNode(imageViewer_base_ImageModalIcon["default"], {
            "icon": function icon() {
              return Vue.createVNode(tdesignIconsVueNext.ImageIcon, {
                "size": "medium"
              }, null);
            },
            "onClick": props.onReset
          }, null)])];
        }
      }), props.currentImage.download && Vue.createVNode(imageViewer_base_ImageModalIcon["default"], {
        "icon": function icon() {
          return Vue.createVNode(tdesignIconsVueNext.DownloadIcon, {
            "size": "medium"
          }, null);
        },
        "onClick": function onClick() {
          imageViewer_utils.downloadFile(previewUrl.value);
        }
      }, null)])]);
    };
  }
});

exports["default"] = TImageViewerUtils;
//# sourceMappingURL=ImageViewerUtils.js.map
