/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var utils_clipboard = require('../utils/clipboard.js');
var message_plugin = require('../message/plugin.js');
var anchor_anchorTargetProps = require('./anchor-target-props.js');
var popup_index = require('../popup/index.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
require('../_chunks/dep-4980a22e.js');
require('@babel/runtime/helpers/defineProperty');
require('../message/messageList.js');
require('../message/const.js');
require('../message/message.js');
require('../loading/index.js');
require('../loading/directive.js');
require('lodash/isObject');
require('lodash/mapKeys');
require('lodash/isEqual');
require('../loading/plugin.js');
require('lodash/merge');
require('../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isString');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('lodash/isArray');
require('../utils/dom.js');
require('lodash/isFunction');
require('../utils/easing.js');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../loading/props.js');
require('../hooks/useTeleport.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-c6b6a048.js');
require('@babel/runtime/helpers/typeof');
require('dayjs');
require('../utils/withInstall.js');
require('../message/props.js');
require('../message/animation.js');
require('../hooks/tnode.js');
require('../popup/popup.js');
require('@popperjs/core');
require('lodash/debounce');
require('../hooks/useVModel.js');
require('../popup/container.js');
require('../popup/props.js');
require('../hooks/useResizeObserver.js');

var _AnchorTarget = Vue.defineComponent({
  name: "TAnchorTarget",
  props: anchor_anchorTargetProps["default"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _useConfig = configProvider_useConfig.useConfig("anchor"),
      globalConfig = _useConfig.globalConfig,
      classPrefix = _useConfig.classPrefix;
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        FileCopyIcon: tdesignIconsVueNext.FileCopyIcon
      }),
      FileCopyIcon = _useGlobalIcon.FileCopyIcon;
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("anchor");
    var toCopyText = function toCopyText() {
      var a = document.createElement("a");
      a.href = "#".concat(props2.id);
      utils_clipboard.copyText(a.href);
      message_plugin.MessagePlugin.success(globalConfig.value.copySuccessText, 1e3);
    };
    return function () {
      var children = slots["default"];
      var TAG = props2.tag,
        id = props2.id;
      var className = ["".concat(COMPONENT_NAME.value, "__target")];
      var iconClassName = "".concat(classPrefix.value, "-copy");
      return Vue.createVNode(TAG, {
        "id": id,
        "class": className
      }, {
        "default": function _default() {
          return [children && children(null), Vue.createVNode(popup_index.Popup, {
            "content": globalConfig.value.copyText,
            "placement": "top",
            "showArrow": true,
            "class": iconClassName
          }, {
            "default": function _default() {
              return [Vue.createVNode(FileCopyIcon, {
                "onClick": toCopyText
              }, null)];
            }
          })];
        }
      });
    };
  }
});

exports["default"] = _AnchorTarget;
//# sourceMappingURL=anchor-target.js.map
