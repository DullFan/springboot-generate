{"version":3,"file":"dropdown-menu.mjs","sources":["../../src/dropdown/dropdown-menu.tsx"],"sourcesContent":["import { defineComponent, ref, onMounted, h, reactive } from 'vue';\nimport { ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-vue-next';\nimport DropdownItem from './dropdown-item';\n\nimport { DropdownOption } from './type';\nimport DropdownProps from './props';\nimport TDivider from '../divider';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { TNode } from '../common';\nimport isFunction from 'lodash/isFunction';\n\nexport default defineComponent({\n  name: 'TDropdownMenu',\n  props: { ...DropdownProps },\n  setup(props) {\n    const dropdownClass = usePrefixClass('dropdown');\n    const dropdownMenuClass = usePrefixClass('dropdown__menu');\n    const scrollTopMap = reactive({});\n    const menuRef = ref<HTMLElement>();\n    const isOverMaxHeight = ref(false);\n    const { ChevronRightIcon } = useGlobalIcon({\n      ChevronRightIcon: TdChevronRightIcon,\n    });\n\n    const handleItemClick = (options: { data: DropdownOption; context: { e: MouseEvent } }) => {\n      const { data, context } = options;\n      data?.onClick?.(data, context);\n      props.onClick?.(data, context);\n    };\n\n    const handleScroll = (e: MouseEvent, deep: number) => {\n      const { scrollTop } = e.target as HTMLElement;\n      scrollTopMap[deep] = scrollTop;\n    };\n\n    onMounted(() => {\n      if (menuRef.value) {\n        const menuHeight = parseInt(window?.getComputedStyle(menuRef.value).height, 10);\n        if (menuHeight >= props.maxHeight) isOverMaxHeight.value = true;\n      }\n    });\n\n    const getContent = (content: string | TNode) => {\n      if (isFunction(content)) {\n        return content(h);\n      }\n      return content;\n    };\n\n    // 处理options渲染的场景\n    const renderOptions = (data: Array<DropdownOption>, deep: number) => {\n      const arr: Array<unknown> = [];\n      let renderContent;\n      data.forEach?.((menu, idx) => {\n        const optionItem = { ...(menu as DropdownOption) };\n        const onViewIdx = idx - Math.ceil(scrollTopMap[deep] / 30);\n        const renderIdx = onViewIdx >= 0 ? onViewIdx : idx;\n\n        if (optionItem.children) {\n          optionItem.children = renderOptions(optionItem.children, deep + 1);\n          renderContent = (\n            <div key={idx}>\n              <DropdownItem\n                style={optionItem.style}\n                class={[`${dropdownClass.value}__item`, `${dropdownClass.value}__item--suffix`, optionItem.class]}\n                value={optionItem.value}\n                theme={optionItem.theme}\n                active={optionItem.active}\n                prefixIcon={optionItem.prefixIcon}\n                disabled={optionItem.disabled}\n                minColumnWidth={props.minColumnWidth}\n                maxColumnWidth={props.maxColumnWidth}\n                isSubmenu={true}\n              >\n                <div class={`${dropdownClass.value}__item-content`}>\n                  <span class={`${dropdownClass.value}__item-text`}>{getContent(optionItem.content)}</span>\n                  <ChevronRightIcon class={`${dropdownClass.value}__item-direction`} size=\"16\" />\n                </div>\n                <div\n                  class={[\n                    `${dropdownClass.value}__submenu-wrapper`,\n                    {\n                      [`${dropdownClass.value}__submenu-wrapper--${props.direction}`]: props.direction,\n                    },\n                  ]}\n                  style={{\n                    position: 'absolute',\n                    top: `${renderIdx * 30}px`,\n                  }}\n                >\n                  <div\n                    class={[\n                      `${dropdownClass.value}__submenu`,\n                      {\n                        [`${dropdownClass.value}__submenu--disabled`]: optionItem.disabled,\n                      },\n                    ]}\n                    style={{\n                      position: 'static',\n                      maxHeight: `${props.maxHeight}px`,\n                    }}\n                    onScroll={(e: MouseEvent) => handleScroll(e, deep + 1)}\n                  >\n                    <ul>{optionItem.children}</ul>\n                  </div>\n                </div>\n              </DropdownItem>\n              {optionItem.divider ? <TDivider /> : null}\n            </div>\n          );\n        } else {\n          renderContent = (\n            <div key={idx}>\n              <DropdownItem\n                style={optionItem.style}\n                class={[`${dropdownClass.value}__item`, optionItem.class]}\n                value={optionItem.value}\n                theme={optionItem.theme}\n                active={optionItem.active}\n                prefixIcon={optionItem.prefixIcon}\n                disabled={optionItem.disabled}\n                minColumnWidth={props.minColumnWidth}\n                maxColumnWidth={props.maxColumnWidth}\n                onClick={\n                  optionItem.disabled || optionItem.children\n                    ? () => null\n                    : (value: string | number | { [key: string]: any }, context: { e: MouseEvent }) =>\n                        handleItemClick({ data: optionItem, context })\n                }\n              >\n                <span class={`${dropdownClass.value}__item-text`}>{getContent(optionItem.content)}</span>\n              </DropdownItem>\n              {optionItem.divider ? <TDivider /> : null}\n            </div>\n          );\n        }\n        arr.push(renderContent);\n      });\n      return arr;\n    };\n\n    return () => {\n      return (\n        <div\n          class={[\n            dropdownMenuClass.value,\n            `${dropdownMenuClass.value}--${props.direction}`,\n            {\n              [`${dropdownMenuClass.value}--overflow`]: isOverMaxHeight.value,\n            },\n          ]}\n          style={{\n            maxHeight: `${props.maxHeight}px`,\n          }}\n          ref={menuRef}\n          onScroll={(e: MouseEvent) => handleScroll(e, 0)}\n        >\n          {renderOptions(props.options, 0)}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","DropdownProps","setup","dropdownClass","usePrefixClass","dropdownMenuClass","scrollTopMap","reactive","menuRef","ref","isOverMaxHeight","_useGlobalIcon","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","handleItemClick","options","_data$onClick","_props$onClick","data","context","onClick","call","handleScroll","e","deep","scrollTop","target","onMounted","value","_window","menuHeight","parseInt","window","getComputedStyle","height","maxHeight","getContent","content","isFunction","h","renderOptions","_data$forEach","arr","renderContent","forEach","menu","idx","optionItem","onViewIdx","Math","ceil","renderIdx","children","_createVNode","DropdownItem","style","concat","theme","active","prefixIcon","disabled","minColumnWidth","maxColumnWidth","_default","_defineProperty","direction","position","top","onScroll","divider","TDivider","push"],"mappings":"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"}