import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    maxColumnWidth: {
        type: PropType<string | number>;
        default: number;
    };
    minColumnWidth: {
        type: PropType<string | number>;
        default: number;
    };
    isSubmenu: BooleanConstructor;
    active: BooleanConstructor;
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: string;
    };
    disabled: BooleanConstructor;
    divider: BooleanConstructor;
    prefixIcon: {
        type: PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    theme: {
        type: PropType<import("../dropdown/type").DropdownItemTheme>;
        default: import("../dropdown/type").DropdownItemTheme;
        validator(val: import("../dropdown/type").DropdownItemTheme): boolean;
    };
    value: {
        type: PropType<string | number | {
            [key: string]: any;
        }>;
    };
    onClick: PropType<(dropdownItem: import("../dropdown/type").DropdownOption, context: {
        e: MouseEvent;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    maxColumnWidth: {
        type: PropType<string | number>;
        default: number;
    };
    minColumnWidth: {
        type: PropType<string | number>;
        default: number;
    };
    isSubmenu: BooleanConstructor;
    active: BooleanConstructor;
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: string;
    };
    disabled: BooleanConstructor;
    divider: BooleanConstructor;
    prefixIcon: {
        type: PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    theme: {
        type: PropType<import("../dropdown/type").DropdownItemTheme>;
        default: import("../dropdown/type").DropdownItemTheme;
        validator(val: import("../dropdown/type").DropdownItemTheme): boolean;
    };
    value: {
        type: PropType<string | number | {
            [key: string]: any;
        }>;
    };
    onClick: PropType<(dropdownItem: import("../dropdown/type").DropdownOption, context: {
        e: MouseEvent;
    }) => void>;
}>>, {
    active: boolean;
    content: string | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    disabled: boolean;
    theme: import("../dropdown/type").DropdownItemTheme;
    divider: boolean;
    maxColumnWidth: string | number;
    minColumnWidth: string | number;
    isSubmenu: boolean;
}, {}>;
export default _default;
