/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

var props = {
  colon: Boolean,
  data: {
    type: Object,
    "default": function _default() {
      return {};
    }
  },
  disabled: {
    type: Boolean,
    "default": void 0
  },
  errorMessage: {
    type: Object
  },
  formControlledComponents: {
    type: Array
  },
  labelAlign: {
    type: String,
    "default": "right",
    validator: function validator(val) {
      if (!val) return true;
      return ["left", "right", "top"].includes(val);
    }
  },
  labelWidth: {
    type: [String, Number],
    "default": "100px"
  },
  layout: {
    type: String,
    "default": "vertical",
    validator: function validator(val) {
      if (!val) return true;
      return ["vertical", "inline"].includes(val);
    }
  },
  preventSubmitDefault: {
    type: Boolean,
    "default": true
  },
  requiredMark: {
    type: Boolean,
    "default": void 0
  },
  resetType: {
    type: String,
    "default": "empty",
    validator: function validator(val) {
      if (!val) return true;
      return ["empty", "initial"].includes(val);
    }
  },
  rules: {
    type: Object
  },
  scrollToFirstError: {
    type: String,
    validator: function validator(val) {
      if (!val) return true;
      return ["", "smooth", "auto"].includes(val);
    }
  },
  showErrorMessage: {
    type: Boolean,
    "default": true
  },
  statusIcon: {
    type: [Boolean, Function],
    "default": void 0
  },
  submitWithWarningMessage: Boolean,
  onReset: Function,
  onSubmit: Function,
  onValidate: Function
};

export { props as default };
//# sourceMappingURL=props.mjs.map
