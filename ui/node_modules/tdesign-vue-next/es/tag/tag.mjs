/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-2dead3b8.mjs';
import { defineComponent, computed, h, createVNode } from 'vue';
import { CloseIcon } from 'tdesign-icons-vue-next';
import { t as tinycolor } from '../_chunks/dep-a116202e.mjs';
import props from './props.mjs';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import { useTNodeJSX, useContent } from '../hooks/tnode.mjs';
import { i as isString_1 } from '../_chunks/dep-d5cc8b5d.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import '../_chunks/dep-8a6a0750.mjs';
import '../_chunks/dep-706c37a3.mjs';
import '../_chunks/dep-ad0f5c12.mjs';
import '../_chunks/dep-de0d9668.mjs';
import '../_chunks/dep-a053ff3d.mjs';
import '../_chunks/dep-65c48aa3.mjs';
import '../_chunks/dep-084c0ba6.mjs';
import '../_chunks/dep-056e3d49.mjs';
import '../_chunks/dep-4ef63f67.mjs';
import '../_chunks/dep-f5bde8c1.mjs';
import '../_chunks/dep-8e0cf610.mjs';
import '../_chunks/dep-c23362d5.mjs';
import '../_chunks/dep-07b6df34.mjs';
import '../_chunks/dep-441fa01f.mjs';
import '../_chunks/dep-7d8aa418.mjs';
import '../_chunks/dep-dab87894.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-a56119c3.mjs';
import '../_chunks/dep-f8f5e5fe.mjs';
import '../_chunks/dep-1a2263f9.mjs';
import '../_chunks/dep-0126dffd.mjs';
import '../_chunks/dep-82bdd07b.mjs';
import '../_chunks/dep-64862a5a.mjs';
import '../_chunks/dep-48235a7f.mjs';
import '../_chunks/dep-5c0cf5f9.mjs';
import '../_chunks/dep-c6ed1157.mjs';
import '../_chunks/dep-70894ccf.mjs';
import '../_chunks/dep-12db5b5b.mjs';
import '../_chunks/dep-b1040349.mjs';
import '../_chunks/dep-203afd59.mjs';
import '../_chunks/dep-bfe0dcb6.mjs';
import '../_chunks/dep-e8c6972d.mjs';
import '../_chunks/dep-b15f1e4a.mjs';
import '../_chunks/dep-9b1e7043.mjs';
import '../_chunks/dep-45a70a53.mjs';
import '../_chunks/dep-88e27495.mjs';
import '../_chunks/dep-5b74d046.mjs';
import '../_chunks/dep-551a93fd.mjs';
import '../_chunks/dep-672a56f9.mjs';
import '../_chunks/dep-8c0df173.mjs';
import '../_chunks/dep-c3f9042a.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-841260ab.mjs';
import '../_chunks/dep-22c04ae0.mjs';
import '../_chunks/dep-886b81c5.mjs';
import '../config-provider/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _Tag = defineComponent({
  name: "TTag",
  props: props,
  setup: function setup(props2) {
    var _useConfig = useConfig("tag"),
      tagGlobalConfig = _useConfig.globalConfig;
    var COMPONENT_NAME = usePrefixClass("tag");
    var _useGlobalIcon = useGlobalIcon({
        CloseIcon: CloseIcon
      }),
      CloseIcon$1 = _useGlobalIcon.CloseIcon;
    var renderTNodeJSX = useTNodeJSX();
    var renderContent = useContent();
    var _useCommonClassName = useCommonClassName(),
      SIZE = _useCommonClassName.SIZE;
    var tagClass = computed(function () {
      return ["".concat(COMPONENT_NAME.value), "".concat(COMPONENT_NAME.value, "--").concat(props2.theme), "".concat(COMPONENT_NAME.value, "--").concat(props2.variant), _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(COMPONENT_NAME.value, "--ellipsis"), props2.maxWidth), "".concat(COMPONENT_NAME.value, "--close"), props2.closable), "".concat(COMPONENT_NAME.value, "--disabled"), props2.disabled), SIZE.value[props2.size], props2.size !== "medium"), props2.shape !== "square" && "".concat(COMPONENT_NAME.value, "--").concat(props2.shape)];
    });
    var tagStyle = computed(function () {
      var maxWidth = props2.maxWidth;
      var styles = getTagColorStyle();
      return props2.maxWidth ? _objectSpread({
        maxWidth: isNaN(Number(maxWidth)) ? String(maxWidth) : "".concat(maxWidth, "px")
      }, styles) : styles;
    });
    var getTagColorStyle = function getTagColorStyle() {
      var color = props2.color,
        variant = props2.variant;
      if (!color) return {};
      var luminance = tinycolor(color).getLuminance();
      var style = {
        color: luminance > 0.5 ? "black" : "white"
      };
      if (variant === "outline" || variant === "light-outline") {
        style.borderColor = color;
      }
      if (variant !== "outline") {
        var getLightestShade = function getLightestShade() {
          var _tinycolor$toRgb = tinycolor(color).toRgb(),
            r = _tinycolor$toRgb.r,
            g = _tinycolor$toRgb.g,
            b = _tinycolor$toRgb.b;
          return "rgba(".concat(r, ", ").concat(g, ", ").concat(b, ", 0.1)");
        };
        style.backgroundColor = variant === "dark" ? color : getLightestShade();
      }
      if (variant !== "dark") {
        style.color = color;
      }
      return style;
    };
    var handleClick = function handleClick(e) {
      var _props2$onClick;
      if (props2.disabled) return;
      (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, {
        e: e
      });
    };
    var getCloseIcon = function getCloseIcon() {
      if (!props2.closable) return null;
      var iconClassName = "".concat(COMPONENT_NAME.value, "__icon-close");
      if (tagGlobalConfig.value.closeIcon) {
        return h(tagGlobalConfig.value.closeIcon(h), {
          "class": iconClassName
        });
      }
      return createVNode(CloseIcon$1, {
        "onClick": function onClick(_ref2) {
          var _props2$onClose;
          var e = _ref2.e;
          e.stopPropagation();
          (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 || _props2$onClose.call(props2, {
            e: e
          });
        },
        "class": iconClassName
      }, null);
    };
    return function () {
      var closeIcon = getCloseIcon();
      var tagContent = renderContent("default", "content");
      var icon = renderTNodeJSX("icon");
      var title = isString_1(tagContent) ? tagContent : "";
      var titleAttribute = title && props2.maxWidth ? title : void 0;
      return createVNode("div", {
        "class": tagClass.value,
        "style": tagStyle.value,
        "onClick": handleClick
      }, [icon, props2.maxWidth ? createVNode("span", {
        "class": _defineProperty({}, "".concat(COMPONENT_NAME.value, "--text"), props2.maxWidth),
        "title": titleAttribute
      }, [tagContent]) : tagContent, !props2.disabled && closeIcon]);
    };
  }
});

export { _Tag as default };
//# sourceMappingURL=tag.mjs.map
