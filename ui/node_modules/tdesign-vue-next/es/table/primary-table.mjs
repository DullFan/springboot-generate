/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-2dead3b8.mjs';
import { defineComponent, toRefs, ref, computed, onMounted, createVNode, mergeProps, h, getCurrentInstance } from 'vue';
import { g as get_1 } from '../_chunks/dep-87670918.mjs';
import { o as omit_1 } from '../_chunks/dep-281dbb92.mjs';
import baseTableProps from './base-table-props.mjs';
import primaryTableProps from './primary-table-props.mjs';
import _BaseTable from './base-table.mjs';
export { BASE_TABLE_ALL_EVENTS } from './base-table.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import useColumnController from './hooks/useColumnController.mjs';
import useRowExpand from './hooks/useRowExpand.mjs';
import useTableHeader, { renderTitle } from './hooks/useTableHeader.mjs';
import useRowSelect from './hooks/useRowSelect.mjs';
import useSorter from './hooks/useSorter.mjs';
import useFilter from './hooks/useFilter.mjs';
import useDragSort from './hooks/useDragSort.mjs';
import useAsyncLoading from './hooks/useAsyncLoading.mjs';
import EditableCell from './editable-cell.mjs';
import useClassName from './hooks/useClassName.mjs';
import '../hooks/useConfig.mjs';
import useRowEdit from './hooks/useEditableRow.mjs';
import useStyle from './hooks/useStyle.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import '../_chunks/dep-8a6a0750.mjs';
import '../_chunks/dep-ad0f5c12.mjs';
import '../_chunks/dep-ee7aa1c5.mjs';
import '../_chunks/dep-4ef63f67.mjs';
import '../_chunks/dep-f5bde8c1.mjs';
import '../_chunks/dep-8e0cf610.mjs';
import '../_chunks/dep-de0d9668.mjs';
import '../_chunks/dep-c23362d5.mjs';
import '../_chunks/dep-203afd59.mjs';
import '../_chunks/dep-48235a7f.mjs';
import '../_chunks/dep-706c37a3.mjs';
import '../_chunks/dep-a053ff3d.mjs';
import '../_chunks/dep-65c48aa3.mjs';
import '../_chunks/dep-82bdd07b.mjs';
import '../_chunks/dep-bfe0dcb6.mjs';
import '../_chunks/dep-056e3d49.mjs';
import '../_chunks/dep-12db5b5b.mjs';
import '../_chunks/dep-b1040349.mjs';
import '../_chunks/dep-1a2263f9.mjs';
import '../_chunks/dep-0126dffd.mjs';
import '../_chunks/dep-64862a5a.mjs';
import '../_chunks/dep-e8c6972d.mjs';
import '../_chunks/dep-b15f1e4a.mjs';
import '../_chunks/dep-c6ed1157.mjs';
import '../_chunks/dep-9b1e7043.mjs';
import '../_chunks/dep-f8f5e5fe.mjs';
import '../_chunks/dep-5c0cf5f9.mjs';
import '../_chunks/dep-45a70a53.mjs';
import '../_chunks/dep-c0c2d9c7.mjs';
import '../_chunks/dep-441fa01f.mjs';
import '../_chunks/dep-8c0df173.mjs';
import '../_chunks/dep-a1a5cc96.mjs';
import '../_chunks/dep-672a56f9.mjs';
import '../_chunks/dep-551a93fd.mjs';
import '../_chunks/dep-f29ee43a.mjs';
import '../_chunks/dep-04fa0fa7.mjs';
import '../_chunks/dep-85cd63c4.mjs';
import '../_chunks/dep-f6f516d9.mjs';
import '../_chunks/dep-6f363254.mjs';
import './hooks/useColumnResize.mjs';
import '../_chunks/dep-844e471b.mjs';
import '../utils/dom.mjs';
import '../_chunks/dep-d5cc8b5d.mjs';
import '../utils/easing.mjs';
import './hooks/useFixed.mjs';
import '../_chunks/dep-6cd78bb0.mjs';
import '../_chunks/dep-786a7628.mjs';
import '../_chunks/dep-5b74d046.mjs';
import '../_chunks/dep-9cc70af8.mjs';
import '../_chunks/dep-1cfe79e3.mjs';
import '../_chunks/dep-f5c953e5.mjs';
import '../_chunks/dep-2a455a8f.mjs';
import '../_common/js/log/index.mjs';
import '../_common/js/log/log.mjs';
import '../_common/js/utils/getScrollbarWidth.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-83cdf63a.mjs';
import '../_chunks/dep-28f56d24.mjs';
import '../_chunks/dep-660119a6.mjs';
import '../_chunks/dep-fb07e55c.mjs';
import './hooks/usePagination.mjs';
import '../pagination/index.mjs';
import '../pagination/pagination.mjs';
import 'tdesign-icons-vue-next';
import '../hooks/useGlobalIcon.mjs';
import '../input-number/index.mjs';
import '../input-number/input-number.mjs';
import '../button/index.mjs';
import '../button/button.mjs';
import '../loading/index.mjs';
import '../_chunks/dep-600393b8.mjs';
import '../_chunks/dep-88e27495.mjs';
import '../_chunks/dep-c3f9042a.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-841260ab.mjs';
import '../_chunks/dep-22c04ae0.mjs';
import '../_chunks/dep-886b81c5.mjs';
import '../_chunks/dep-7c4d232a.mjs';
import '../_chunks/dep-09c30dd8.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-a56119c3.mjs';
import '../_chunks/dep-084c0ba6.mjs';
import '../_chunks/dep-07b6df34.mjs';
import '../_chunks/dep-7d8aa418.mjs';
import '../_chunks/dep-dab87894.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../_chunks/dep-70894ccf.mjs';
import '../config-provider/type.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../utils/set-style.mjs';
import '../hooks/useDisabled.mjs';
import '../_chunks/dep-fb48187a.mjs';
import '../button/type.mjs';
import '../input/index.mjs';
import '../input/input.mjs';
import '../input/props.mjs';
import '../form/hooks.mjs';
import '../input/useInput.mjs';
import '../form/const.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../input/useLengthLimit.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../hooks/useResizeObserver.mjs';
import '../input/input-group.mjs';
import '../input/input-group-props.mjs';
import '../input/type.mjs';
import '../input-number/props.mjs';
import '../input-number/useInputNumber.mjs';
import '../_common/js/input-number/number.mjs';
import '../_common/js/input-number/large-number.mjs';
import '../input-number/type.mjs';
import '../select/index.mjs';
import '../select/select.mjs';
import '../_chunks/dep-a5f8156f.mjs';
import '../common-components/fake-arrow.mjs';
import '../select-input/index.mjs';
import '../select-input/select-input.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../popup/container.mjs';
import '../popup/props.mjs';
import '../popup/type.mjs';
import '../select-input/props.mjs';
import '../select-input/useSingle.mjs';
import '../select-input/useMultiple.mjs';
import '../tag-input/index.mjs';
import '../tag-input/tag-input.mjs';
import '../tag-input/props.mjs';
import '../tag-input/hooks/useTagScroll.mjs';
import '../tag-input/useTagList.mjs';
import '../tag/index.mjs';
import '../tag/tag.mjs';
import '../_chunks/dep-a116202e.mjs';
import '../tag/props.mjs';
import '../tag/check-tag.mjs';
import '../tag/check-tag-props.mjs';
import '../_common/js/common.mjs';
import '../tag/check-tag-group.mjs';
import '../tag/check-tag-group-props.mjs';
import '../tag/type.mjs';
import '../tag-input/hooks/useHover.mjs';
import '../tag-input/hooks/useDragSorter.mjs';
import '../tag-input/type.mjs';
import '../select-input/useOverlayInnerStyle.mjs';
import '../select-input/type.mjs';
import '../select/select-panel.mjs';
import '../select/option.mjs';
import '../select/option-props.mjs';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../checkbox/props.mjs';
import '../checkbox/constants.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../_common/js/utils/observe.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../checkbox/group.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../checkbox/type.mjs';
import '../select/helper.mjs';
import '../select/optionGroup.mjs';
import '../select/option-group-props.mjs';
import '../select/props.mjs';
import '../select/hooks/usePanelVirtualScroll.mjs';
import '../select/hooks/useSelectOptions.mjs';
import '../select/hooks/useKeyboardControl.mjs';
import '../select/type.mjs';
import '../input-adornment/index.mjs';
import '../input-adornment/input-adornment.mjs';
import '../input-adornment/props.mjs';
import '../input-adornment/type.mjs';
import '../pagination/props.mjs';
import '../pagination/usePaginationClasses.mjs';
import '../pagination/useMoreAction.mjs';
import '../pagination/pagination-mini.mjs';
import '../pagination/pagination-mini-props.mjs';
import '../pagination/type.mjs';
import '../hooks/useVirtualScrollNew.mjs';
import '../_chunks/dep-eb82bf9c.mjs';
import './hooks/useAffix.mjs';
import './tbody.mjs';
import './tr.mjs';
import './utils.mjs';
import './ellipsis.mjs';
import '../tooltip/index.mjs';
import '../tooltip/tooltip.mjs';
import '../tooltip/props.mjs';
import '../tooltip/util.mjs';
import '../tooltip/type.mjs';
import './hooks/useLazyLoad.mjs';
import './hooks/useRowspanAndColspan.mjs';
import '../affix/index.mjs';
import '../affix/affix.mjs';
import '../_chunks/dep-8a25f93c.mjs';
import '../affix/props.mjs';
import '../affix/type.mjs';
import './thead.mjs';
import './tfoot.mjs';
import './hooks/useRowHighlight.mjs';
import './hooks/useHoverKeyboardEvent.mjs';
import '../hooks/useElementLazyRender.mjs';
import './hooks/useMultiHeader.mjs';
import '../dialog/plugin.mjs';
import '../dialog/dialog.mjs';
import '../dialog/props.mjs';
import '../dialog/hooks.mjs';
import '../hooks/usePopupManager.mjs';
import '../_chunks/dep-d470848d.mjs';
import './column-checkbox-group.mjs';
import '../_common/js/table/utils.mjs';
import '../radio/index.mjs';
import '../radio/radio.mjs';
import '../utils/helper.mjs';
import '../radio/props.mjs';
import '../radio/constants.mjs';
import '../radio/group.mjs';
import '../_chunks/dep-252b88a1.mjs';
import '../radio/radio-group-props.mjs';
import '../radio/useKeyboard.mjs';
import '../watermark/hooks.mjs';
import '../radio/radio-button.mjs';
import '../radio/type.mjs';
import './sorter-button.mjs';
import './filter-controller.mjs';
import 'sortablejs';
import '../_common/js/utils/swapDragArrayElement.mjs';
import '../_chunks/dep-6deb4e3a.mjs';
import '../_chunks/dep-11968b60.mjs';
import '../form/form-model.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var OMIT_PROPS = ["hideSortTips", "dragSort", "defaultExpandedRowKeys", "defaultSelectedRowKeys", "columnController", "filterRow", "sortOnRowDraggable", "expandOnRowClick", "expand-on-row-click", "expanded-row", "editable-row-keys", "editable-cell-state", "filter-value", "multipleSort", "expandIcon", "expand-icon", "reserveSelectedRowOnPaginate", "expandedRowKeys", "expandedRow", "reserve-selected-row-on-paginate", "reserveSelectedRowOnPaginate", "selected-row-keys", "selectedRowKeys", "selectOnRowClick", "column-controller", "columnController", "dragSort", "drag-sort", "hideSortTips", "showSortColumnBgColor", "filter-row", "filterRow", "multiple-sort", "multipleSort", "async-loading", "onChange", "onAsyncLoadingClick", "onColumnChange", "onColumnControllerVisibleChange", "onDataChange", "onDisplayColumnsChange", "onDragSort", "onExpandChange", "onFilterChange", "onSelectChange", "onSortChange"];
var _PrimaryTable = defineComponent({
  name: "TPrimaryTable",
  props: _objectSpread(_objectSpread({}, baseTableProps), primaryTableProps),
  setup: function setup(props, context) {
    var renderTNode = useTNodeJSX();
    var _toRefs = toRefs(props),
      columns = _toRefs.columns,
      columnController = _toRefs.columnController;
    var primaryTableRef = ref(null);
    var showElement = ref(false);
    var _useClassName = useClassName(),
      classPrefix = _useClassName.classPrefix,
      tableDraggableClasses = _useClassName.tableDraggableClasses,
      tableBaseClass = _useClassName.tableBaseClass,
      tableSelectedClasses = _useClassName.tableSelectedClasses,
      tableSortClasses = _useClassName.tableSortClasses;
    var _useConfig = useConfig("table", props.locale),
      globalConfig = _useConfig.globalConfig;
    var _useStyle = useStyle(props),
      sizeClassNames = _useStyle.sizeClassNames;
    var tableSize = computed(function () {
      var _props$size;
      return (_props$size = props.size) !== null && _props$size !== void 0 ? _props$size : globalConfig.value.size;
    });
    var _useColumnController = useColumnController(props, context),
      tDisplayColumns = _useColumnController.tDisplayColumns,
      renderColumnController = _useColumnController.renderColumnController;
    var _useRowExpand = useRowExpand(props, context),
      showExpandedRow = _useRowExpand.showExpandedRow,
      showExpandIconColumn = _useRowExpand.showExpandIconColumn,
      getExpandColumn = _useRowExpand.getExpandColumn,
      renderExpandedRow = _useRowExpand.renderExpandedRow,
      onInnerExpandRowClick = _useRowExpand.onInnerExpandRowClick;
    var _useSorter = useSorter(props, context),
      renderSortIcon = _useSorter.renderSortIcon;
    var _useRowSelect = useRowSelect(props, tableSelectedClasses),
      selectColumn = _useRowSelect.selectColumn,
      showRowSelect = _useRowSelect.showRowSelect,
      selectedRowClassNames = _useRowSelect.selectedRowClassNames,
      currentPaginateData = _useRowSelect.currentPaginateData,
      formatToRowSelectColumn = _useRowSelect.formatToRowSelectColumn,
      setTSelectedRowKeys = _useRowSelect.setTSelectedRowKeys,
      onInnerSelectRowClick = _useRowSelect.onInnerSelectRowClick,
      handleRowSelectWithAreaSelection = _useRowSelect.handleRowSelectWithAreaSelection;
    var _useFilter = useFilter(props, context),
      hasEmptyCondition = _useFilter.hasEmptyCondition,
      isTableOverflowHidden = _useFilter.isTableOverflowHidden,
      renderFilterIcon = _useFilter.renderFilterIcon,
      renderFirstFilterRow = _useFilter.renderFirstFilterRow,
      setFilterPrimaryTableRef = _useFilter.setFilterPrimaryTableRef;
    var dragSortParams = computed(function () {
      return {
        showElement: showElement.value
      };
    });
    var _useDragSort = useDragSort(props, context, dragSortParams),
      isRowHandlerDraggable = _useDragSort.isRowHandlerDraggable,
      isRowDraggable = _useDragSort.isRowDraggable,
      isColDraggable = _useDragSort.isColDraggable,
      innerPagination = _useDragSort.innerPagination,
      setDragSortPrimaryTableRef = _useDragSort.setDragSortPrimaryTableRef,
      setDragSortColumns = _useDragSort.setDragSortColumns;
    var _useTableHeader = useTableHeader(props),
      renderTitleWidthIcon = _useTableHeader.renderTitleWidthIcon;
    var _useAsyncLoading = useAsyncLoading(props),
      renderAsyncLoading = _useAsyncLoading.renderAsyncLoading;
    var _useEditableRow = useRowEdit(props),
      errorListMap = _useEditableRow.errorListMap,
      editableKeysMap = _useEditableRow.editableKeysMap,
      validateRowData = _useEditableRow.validateRowData,
      validateTableData = _useEditableRow.validateTableData,
      onRuleChange = _useEditableRow.onRuleChange,
      clearValidateData = _useEditableRow.clearValidateData,
      onUpdateEditedCell = _useEditableRow.onUpdateEditedCell,
      getEditRowData = _useEditableRow.getEditRowData,
      onPrimaryTableCellEditChange = _useEditableRow.onPrimaryTableCellEditChange;
    var innerKeyboardRowHover = computed(function () {
      return Boolean(showExpandedRow.value || showRowSelect.value);
    });
    var innerDisableSpaceInactiveRow = computed(function () {
      return Boolean(showExpandedRow.value || showRowSelect.value);
    });
    var primaryTableClasses = computed(function () {
      var _selectColumn$value;
      return _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, tableDraggableClasses.colDraggable, isColDraggable.value), tableDraggableClasses.rowHandlerDraggable, isRowHandlerDraggable.value), tableDraggableClasses.rowDraggable, isRowDraggable.value), tableBaseClass.overflowVisible, isTableOverflowHidden.value === false), tableBaseClass.tableRowEdit, props.editableRowKeys), "".concat(classPrefix, "-table--select-").concat((_selectColumn$value = selectColumn.value) === null || _selectColumn$value === void 0 ? void 0 : _selectColumn$value.type), selectColumn.value), "".concat(classPrefix, "-table--row-select"), showRowSelect.value), "".concat(classPrefix, "-table--row-expandable"), showExpandedRow.value);
    });
    var tRowClassNames = computed(function () {
      var tClassNames = [props.rowClassName, selectedRowClassNames.value];
      return tClassNames.filter(function (v) {
        return v;
      });
    });
    var tRowAttributes = computed(function () {
      var tAttributes = [props.rowAttributes];
      if (isRowHandlerDraggable.value || isRowDraggable.value) {
        tAttributes.push(function (_ref2) {
          var row = _ref2.row;
          return {
            "data-id": get_1(row, props.rowKey || "id")
          };
        });
      }
      return tAttributes.filter(function (v) {
        return v;
      });
    });
    onMounted(function () {
      setFilterPrimaryTableRef(primaryTableRef.value);
      setDragSortPrimaryTableRef(primaryTableRef.value);
    });
    context.expose({
      validateRowData: validateRowData,
      validateTableData: validateTableData,
      clearValidateData: clearValidateData,
      refreshTable: function refreshTable() {
        primaryTableRef.value.refreshTable();
      },
      scrollToElement: function scrollToElement(data) {
        primaryTableRef.value.scrollToElement(data);
      },
      scrollColumnIntoView: function scrollColumnIntoView(colKey) {
        primaryTableRef.value.scrollColumnIntoView(colKey);
      },
      baseTableRef: primaryTableRef
    });
    var onEditableCellChange = function onEditableCellChange(params) {
      var _props$onRowEdit;
      (_props$onRowEdit = props.onRowEdit) === null || _props$onRowEdit === void 0 || _props$onRowEdit.call(props, params);
      var rowValue = get_1(params.editedRow, props.rowKey || "id");
      onUpdateEditedCell(rowValue, params.row, _defineProperty({}, params.col.colKey, params.value));
    };
    var getColumns = function getColumns(columns2) {
      var parentDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var arr = [];
      var _loop = function _loop() {
        var _item$children, _tDisplayColumns$valu, _item$edit, _item$children2, _item$children3;
        var item = _objectSpread({}, columns2[i]);
        var isDisplayColumn = ((_item$children = item.children) === null || _item$children === void 0 ? void 0 : _item$children.length) || ((_tDisplayColumns$valu = tDisplayColumns.value) === null || _tDisplayColumns$valu === void 0 ? void 0 : _tDisplayColumns$valu.includes(item.colKey));
        if (!isDisplayColumn && (props.columnController || props.displayColumns || props.defaultDisplayColumns) && !parentDisplay) return 1; // continue
        item = formatToRowSelectColumn(item);
        var sort = props.sort;
        if (item.sorter && props.showSortColumnBgColor) {
          var sorts = sort instanceof Array ? sort : [sort];
          var sortedColumn = sorts.find(function (sort2) {
            return sort2 && sort2.sortBy === item.colKey && sort2.descending !== void 0;
          });
          if (sortedColumn) {
            item.className = item.className instanceof Array ? item.className.concat(tableSortClasses.sortColumn) : [item.className, tableSortClasses.sortColumn];
          }
        }
        if (item.sorter || item.filter) {
          var titleContent = renderTitle(context.slots, item, i);
          var _item = item,
            ellipsisTitle = _item.ellipsisTitle;
          item.title = function (h2, p) {
            var _primaryTableRef$valu;
            var sortIcon = item.sorter ? renderSortIcon(p) : null;
            var filterIcon = item.filter ? renderFilterIcon(p) : null;
            var attach = (_primaryTableRef$valu = primaryTableRef.value) === null || _primaryTableRef$valu === void 0 ? void 0 : _primaryTableRef$valu.tableContentRef;
            return renderTitleWidthIcon([titleContent, sortIcon, filterIcon], p.col, p.colIndex, ellipsisTitle, attach, {
              classPrefix: classPrefix,
              ellipsisOverlayClassName: tableSize.value !== "medium" ? sizeClassNames[tableSize.value] : ""
            });
          };
          item.ellipsisTitle = false;
        }
        if ((_item$edit = item.edit) !== null && _item$edit !== void 0 && _item$edit.component) {
          var oldCell = item.cell;
          item.cell = function (h2, p) {
            var cellProps = _objectSpread(_objectSpread({}, p), {}, {
              row: getEditRowData(p),
              oldCell: oldCell,
              rowKey: props.rowKey || "id",
              tableBaseClass: tableBaseClass,
              cellEmptyContent: props.cellEmptyContent,
              onChange: onEditableCellChange,
              onValidate: props.onRowValidate,
              onRuleChange: onRuleChange,
              onEditableChange: onPrimaryTableCellEditChange
            });
            if (props.editableRowKeys) {
              var _errorListMap$value;
              var rowValue = get_1(p.row, props.rowKey || "id");
              cellProps.editable = editableKeysMap.value[rowValue] || false;
              var key = [rowValue, p.col.colKey].join("__");
              var errorList = (_errorListMap$value = errorListMap.value) === null || _errorListMap$value === void 0 ? void 0 : _errorListMap$value[key];
              errorList && (cellProps.errors = errorList);
            }
            if (props.editableCellState) {
              cellProps.readonly = !props.editableCellState(p);
            }
            return createVNode(EditableCell, mergeProps(cellProps, {
              "onUpdateEditedCell": onUpdateEditedCell
            }), context.slots);
          };
        }
        if ((_item$children2 = item.children) !== null && _item$children2 !== void 0 && _item$children2.length) {
          var _tDisplayColumns$valu2;
          item.children = getColumns(item.children, parentDisplay || ((_tDisplayColumns$valu2 = tDisplayColumns.value) === null || _tDisplayColumns$valu2 === void 0 ? void 0 : _tDisplayColumns$valu2.includes(item.colKey)));
        }
        if (!item.children || (_item$children3 = item.children) !== null && _item$children3 !== void 0 && _item$children3.length) {
          arr.push(item);
        }
      };
      for (var i = 0, len = columns2.length; i < len; i++) {
        if (_loop()) continue;
      }
      return arr;
    };
    var tColumns = computed(function () {
      var cols = getColumns(columns.value);
      if (showExpandIconColumn.value) {
        cols.unshift(getExpandColumn());
      }
      return cols;
    });
    var onInnerPageChange = function onInnerPageChange(pageInfo, newData) {
      var _props$onPageChange, _props$onChange;
      innerPagination.value = _objectSpread(_objectSpread({}, innerPagination.value), pageInfo);
      currentPaginateData.value = newData;
      (_props$onPageChange = props.onPageChange) === null || _props$onPageChange === void 0 || _props$onPageChange.call(props, pageInfo, newData);
      var changeParams = [{
        pagination: pageInfo
      }, {
        trigger: "pagination",
        currentData: newData
      }];
      (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call.apply(_props$onChange, [props].concat(changeParams));
      if (!props.reserveSelectedRowOnPaginate) {
        setTSelectedRowKeys([], {
          selectedRowData: [],
          type: "uncheck",
          currentRowKey: "CLEAR_ON_PAGINATE"
        });
      }
    };
    var onInnerActiveRowAction = function onInnerActiveRowAction(params) {
      var _props$onActiveRowAct;
      (_props$onActiveRowAct = props.onActiveRowAction) === null || _props$onActiveRowAct === void 0 || _props$onActiveRowAct.call(props, params);
      handleRowSelectWithAreaSelection(params);
    };
    var onSingleRowClick = function onSingleRowClick(params) {
      if (props.expandOnRowClick) {
        onInnerExpandRowClick(params);
      }
      if (props.selectOnRowClick) {
        onInnerSelectRowClick(params);
      }
    };
    var timer;
    var DURATION = 250;
    var onInnerRowClick = function onInnerRowClick(params) {
      if (!props.onRowDblclick) {
        onSingleRowClick(params);
        return;
      }
      if (timer) {
        clearTimeout(timer);
        timer = void 0;
      } else {
        timer = setTimeout(function () {
          onSingleRowClick(params);
          timer = void 0;
        }, DURATION);
      }
    };
    var onShowElementChange = function onShowElementChange(val) {
      showElement.value = val;
    };
    return function () {
      var _props$keyboardRowHov, _props$disableSpaceIn;
      var formatNode = function formatNode(api, renderInnerNode, condition, extra) {
        if (!condition) return props[api];
        var innerNode = renderInnerNode(h);
        var propsNode = renderTNode(api);
        if (innerNode && !propsNode) return function () {
          return innerNode;
        };
        if (propsNode && !innerNode) return function () {
          return propsNode;
        };
        if (innerNode && propsNode) {
          return function () {
            return extra !== null && extra !== void 0 && extra.reverse ? createVNode("div", null, [innerNode, propsNode]) : createVNode("div", null, [propsNode, innerNode]);
          };
        }
        return null;
      };
      var isColumnController = !!(columnController.value && Object.keys(columnController.value).length);
      var placement = isColumnController ? columnController.value.placement || "top-right" : "";
      var isBottomController = isColumnController && (placement === null || placement === void 0 ? void 0 : placement.indexOf("bottom")) !== -1;
      var topContent = formatNode("topContent", renderColumnController, isColumnController && !isBottomController);
      var bottomContent = formatNode("bottomContent", renderColumnController, isBottomController, {
        reverse: true
      });
      var firstFullRow = formatNode("firstFullRow", renderFirstFilterRow, !hasEmptyCondition.value);
      var lastFullRow = formatNode("lastFullRow", renderAsyncLoading, !!props.asyncLoading);
      var _getCurrentInstance = getCurrentInstance(),
        vnode = _getCurrentInstance.vnode;
      var baseTableProps2 = _objectSpread(_objectSpread({}, omit_1(vnode.props, OMIT_PROPS)), {}, {
        rowKey: props.rowKey,
        rowClassName: tRowClassNames.value,
        rowAttributes: tRowAttributes.value,
        columns: tColumns.value,
        keyboardRowHover: (_props$keyboardRowHov = props.keyboardRowHover) !== null && _props$keyboardRowHov !== void 0 ? _props$keyboardRowHov : innerKeyboardRowHover.value,
        disableSpaceInactiveRow: (_props$disableSpaceIn = props.disableSpaceInactiveRow) !== null && _props$disableSpaceIn !== void 0 ? _props$disableSpaceIn : innerDisableSpaceInactiveRow.value,
        topContent: topContent,
        bottomContent: bottomContent,
        firstFullRow: firstFullRow,
        lastFullRow: lastFullRow,
        thDraggable: ["col", "row-handler-col"].includes(props.dragSort),
        onShowElementChange: onShowElementChange,
        onPageChange: onInnerPageChange,
        renderExpandedRow: showExpandedRow.value ? renderExpandedRow : void 0,
        onActiveRowAction: onInnerActiveRowAction
      });
      if (props.expandOnRowClick || props.selectOnRowClick) {
        baseTableProps2.onRowClick = onInnerRowClick;
      }
      return createVNode(_BaseTable, mergeProps(baseTableProps2, {
        "ref": primaryTableRef,
        "class": primaryTableClasses.value,
        "onLeafColumnsChange": setDragSortColumns
      }), context.slots);
    };
  }
});

export { _PrimaryTable as default };
//# sourceMappingURL=primary-table.mjs.map
