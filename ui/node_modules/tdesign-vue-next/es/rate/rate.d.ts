declare const _default: import("vue").DefineComponent<{
    allowHalf: BooleanConstructor;
    color: {
        type: import("vue").PropType<string | string[]>;
        default: string | string[];
    };
    count: {
        type: NumberConstructor;
        default: number;
    };
    disabled: BooleanConstructor;
    gap: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    showText: BooleanConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    texts: {
        type: import("vue").PropType<string[]>;
        default: () => string[];
    };
    value: {
        type: NumberConstructor;
        default: any;
    };
    modelValue: {
        type: NumberConstructor;
        default: any;
    };
    defaultValue: {
        type: NumberConstructor;
        default: number;
    };
    onChange: import("vue").PropType<(value: number) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    allowHalf: BooleanConstructor;
    color: {
        type: import("vue").PropType<string | string[]>;
        default: string | string[];
    };
    count: {
        type: NumberConstructor;
        default: number;
    };
    disabled: BooleanConstructor;
    gap: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    showText: BooleanConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    texts: {
        type: import("vue").PropType<string[]>;
        default: () => string[];
    };
    value: {
        type: NumberConstructor;
        default: any;
    };
    modelValue: {
        type: NumberConstructor;
        default: any;
    };
    defaultValue: {
        type: NumberConstructor;
        default: number;
    };
    onChange: import("vue").PropType<(value: number) => void>;
}>>, {
    color: string | string[];
    gap: number;
    value: number;
    disabled: boolean;
    size: string;
    modelValue: number;
    defaultValue: number;
    count: number;
    showText: boolean;
    texts: string[];
    allowHalf: boolean;
}, {}>;
export default _default;
