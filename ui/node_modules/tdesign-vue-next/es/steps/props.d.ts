import { TdStepsProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    current: {
        type: PropType<string | number>;
        default: any;
    };
    modelValue: {
        type: PropType<string | number>;
        default: any;
    };
    defaultCurrent: {
        type: PropType<string | number>;
    };
    layout: {
        type: PropType<"horizontal" | "vertical">;
        default: "horizontal" | "vertical";
        validator(val: TdStepsProps['layout']): boolean;
    };
    options: {
        type: PropType<import("./type").TdStepItemProps[]>;
    };
    readonly: BooleanConstructor;
    separator: {
        type: PropType<"line" | "dashed" | "arrow">;
        default: "line" | "dashed" | "arrow";
        validator(val: TdStepsProps['separator']): boolean;
    };
    sequence: {
        type: PropType<"reverse" | "positive">;
        default: "reverse" | "positive";
        validator(val: TdStepsProps['sequence']): boolean;
    };
    theme: {
        type: PropType<"default" | "dot">;
        default: "default" | "dot";
        validator(val: TdStepsProps['theme']): boolean;
    };
    onChange: PropType<(current: string | number, previous: string | number, context?: {
        e?: MouseEvent;
    }) => void>;
};
export default _default;
