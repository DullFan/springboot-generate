{"version":3,"file":"props.mjs","sources":["../../src/steps/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdStepsProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 当前步骤，即整个步骤条进度。默认根据步骤下标判断步骤的完成状态，当前步骤为进行中，当前步骤之前的步骤为已完成，当前步骤之后的步骤为未开始。如果每个步骤没有设置 value，current 值为步骤长度则表示所有步骤已完成。如果每个步骤设置了自定义 value，则 current = 'FINISH' 表示所有状态完成 */\n  current: {\n    type: [String, Number] as PropType<TdStepsProps['current']>,\n    default: undefined,\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdStepsProps['current']>,\n    default: undefined,\n  },\n  /** 当前步骤，即整个步骤条进度。默认根据步骤下标判断步骤的完成状态，当前步骤为进行中，当前步骤之前的步骤为已完成，当前步骤之后的步骤为未开始。如果每个步骤没有设置 value，current 值为步骤长度则表示所有步骤已完成。如果每个步骤设置了自定义 value，则 current = 'FINISH' 表示所有状态完成，非受控属性 */\n  defaultCurrent: {\n    type: [String, Number] as PropType<TdStepsProps['defaultCurrent']>,\n  },\n  /** 步骤条方向，有两种：横向和纵向 */\n  layout: {\n    type: String as PropType<TdStepsProps['layout']>,\n    default: 'horizontal' as TdStepsProps['layout'],\n    validator(val: TdStepsProps['layout']): boolean {\n      if (!val) return true;\n      return ['horizontal', 'vertical'].includes(val);\n    },\n  },\n  /** 步骤条数据列表（作用和 StepItem 效果一样） */\n  options: {\n    type: Array as PropType<TdStepsProps['options']>,\n  },\n  /** 只读状态 */\n  readonly: Boolean,\n  /** 步骤条分割符 */\n  separator: {\n    type: String as PropType<TdStepsProps['separator']>,\n    default: 'line' as TdStepsProps['separator'],\n    validator(val: TdStepsProps['separator']): boolean {\n      if (!val) return true;\n      return ['line', 'dashed', 'arrow'].includes(val);\n    },\n  },\n  /** 步骤条顺序 */\n  sequence: {\n    type: String as PropType<TdStepsProps['sequence']>,\n    default: 'positive' as TdStepsProps['sequence'],\n    validator(val: TdStepsProps['sequence']): boolean {\n      if (!val) return true;\n      return ['positive', 'reverse'].includes(val);\n    },\n  },\n  /** 步骤条风格 */\n  theme: {\n    type: String as PropType<TdStepsProps['theme']>,\n    default: 'default' as TdStepsProps['theme'],\n    validator(val: TdStepsProps['theme']): boolean {\n      if (!val) return true;\n      return ['default', 'dot'].includes(val);\n    },\n  },\n  /** 当前步骤发生变化时触发 */\n  onChange: Function as PropType<TdStepsProps['onChange']>,\n};\n"],"names":["current","type","String","Number","modelValue","defaultCurrent","layout","validator","val","includes","options","Array","readonly","Boolean","separator","sequence","theme","onChange","Function"],"mappings":";;;;;;AASA,YAAe;AAEbA,EAAAA,OAAS,EAAA;AACPC,IAAAA,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAM,CAAA;AACrB,IAAA,SAAA,EAAS,KAAA,CAAA;GACX;AACAC,EAAAA,UAAY,EAAA;AACVH,IAAAA,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAM,CAAA;AACrB,IAAA,SAAA,EAAS,KAAA,CAAA;GACX;AAEAE,EAAAA,cAAgB,EAAA;AACdJ,IAAAA,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAM,CAAA;GACvB;AAEAG,EAAAA,MAAQ,EAAA;AACNL,IAAAA,IAAM,EAAAC,MAAA;AACN,IAAA,SAAA,EAAS,YAAA;IACTK,6BAAUC,CAAAA,GAAsC,EAAA;AAC9C,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,YAAA,EAAc,UAAU,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AAChD,KAAA;GACF;AAEAE,EAAAA,OAAS,EAAA;AACPT,IAAAA,IAAM,EAAAU,KAAAA;GACR;AAEAC,EAAAA,QAAU,EAAAC,OAAA;AAEVC,EAAAA,SAAW,EAAA;AACTb,IAAAA,IAAM,EAAAC,MAAA;AACN,IAAA,SAAA,EAAS,MAAA;IACTK,6BAAUC,CAAAA,GAAyC,EAAA;AACjD,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,MAAQ,EAAA,QAAA,EAAU,OAAO,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AACjD,KAAA;GACF;AAEAO,EAAAA,QAAU,EAAA;AACRd,IAAAA,IAAM,EAAAC,MAAA;AACN,IAAA,SAAA,EAAS,UAAA;IACTK,6BAAUC,CAAAA,GAAwC,EAAA;AAChD,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,UAAA,EAAY,SAAS,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AAC7C,KAAA;GACF;AAEAQ,EAAAA,KAAO,EAAA;AACLf,IAAAA,IAAM,EAAAC,MAAA;AACN,IAAA,SAAA,EAAS,SAAA;IACTK,6BAAUC,CAAAA,GAAqC,EAAA;AAC7C,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,SAAA,EAAW,KAAK,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AACxC,KAAA;GACF;AAEAS,EAAAA,QAAU,EAAAC,QAAAA;AACZ,CAAA;;;;"}