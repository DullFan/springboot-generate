import { TdStatisticProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    animation: {
        type: PropType<import("./type").animation>;
    };
    animationStart: BooleanConstructor;
    color: {
        type: PropType<"black" | "blue" | "green" | "orange" | "red">;
        validator(val: TdStatisticProps['color']): boolean;
    };
    decimalPlaces: {
        type: NumberConstructor;
    };
    extra: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    format: {
        type: PropType<(value: number) => number>;
    };
    loading: BooleanConstructor;
    prefix: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    separator: {
        type: StringConstructor;
        default: string;
    };
    suffix: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    title: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    trend: {
        type: PropType<"increase" | "decrease">;
        validator(val: TdStatisticProps['trend']): boolean;
    };
    trendPlacement: {
        type: PropType<"left" | "right">;
        default: "left" | "right";
        validator(val: TdStatisticProps['trendPlacement']): boolean;
    };
    unit: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    value: {
        type: NumberConstructor;
    };
};
export default _default;
