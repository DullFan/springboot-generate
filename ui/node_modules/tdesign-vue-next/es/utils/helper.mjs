/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _objectWithoutProperties } from '../_chunks/dep-28f56d24.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-f29ee43a.mjs';
import { _ as _defineProperty } from '../_chunks/dep-2dead3b8.mjs';
import { c as camelCase_1 } from '../_chunks/dep-084c0ba6.mjs';
import { i as isUndefined_1 } from '../_chunks/dep-fb07e55c.mjs';
import { i as isNull_1 } from '../_chunks/dep-660119a6.mjs';
import { i as isArray_1 } from '../_chunks/dep-4ef63f67.mjs';
import { i as isNumber_1 } from '../_chunks/dep-844e471b.mjs';
import { i as isString_1 } from '../_chunks/dep-d5cc8b5d.mjs';
import '../_chunks/dep-04fa0fa7.mjs';
import '../_chunks/dep-8a6a0750.mjs';
import '../_chunks/dep-ad0f5c12.mjs';
import '../_chunks/dep-056e3d49.mjs';
import '../_chunks/dep-de0d9668.mjs';
import '../_chunks/dep-f5bde8c1.mjs';
import '../_chunks/dep-8e0cf610.mjs';
import '../_chunks/dep-c23362d5.mjs';
import '../_chunks/dep-07b6df34.mjs';
import '../_chunks/dep-441fa01f.mjs';
import '../_chunks/dep-7d8aa418.mjs';

var _excluded = ["from", "to", "direction"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function omit(obj, fields) {
  var shallowCopy = _objectSpread({}, obj);
  for (var i = 0; i < fields.length; i++) {
    var key = fields[i];
    delete shallowCopy[key];
  }
  return shallowCopy;
}
function removeEmptyAttrs(obj) {
  var newObj = {};
  Object.keys(obj).forEach(function (key) {
    if (!isUndefined_1(obj[key]) || isNull_1(obj[key])) {
      newObj[key] = obj[key];
    }
  });
  return newObj;
}
function getTabElementByValue() {
  var tabs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var value = arguments.length > 1 ? arguments[1] : undefined;
  var _tabs$filter = tabs.filter(function (item) {
      var id = item.id;
      return "".concat(id) === "".concat(value);
    }),
    _tabs$filter2 = _slicedToArray(_tabs$filter, 1),
    result = _tabs$filter2[0];
  return result || null;
}
function firstUpperCase(str) {
  return str.toLowerCase().replace(/( |^)[a-z]/g, function (_char) {
    return _char.toUpperCase();
  });
}
function getBackgroundColor(color) {
  if (isString_1(color)) {
    return color;
  }
  if (isArray_1(color)) {
    if (color[0] && color[0][0] === "#") {
      color.unshift("90deg");
    }
    return "linear-gradient( ".concat(color.join(","), " )");
  }
  var from = color.from,
    to = color.to,
    _color$direction = color.direction,
    direction = _color$direction === void 0 ? "to right" : _color$direction,
    rest = _objectWithoutProperties(color, _excluded);
  var keys = Object.keys(rest);
  if (keys.length) {
    keys = keys.sort(function (a, b) {
      return parseFloat(a.substr(0, a.length - 1)) - parseFloat(b.substr(0, b.length - 1));
    });
    var tempArr = keys.map(function (key) {
      return "".concat(rest[key], " ").concat(key);
    });
    return "linear-gradient(".concat(direction, ", ").concat(tempArr.join(","), ")");
  }
  return "linear-gradient(".concat(direction, ", ").concat(from, ", ").concat(to, ")");
}
function getPropsApiByEvent(eventName) {
  return camelCase_1("on-".concat(eventName));
}
function pxCompat(param) {
  return isNumber_1(param) ? "".concat(param, "px") : param;
}

export { firstUpperCase, getBackgroundColor, getPropsApiByEvent, getTabElementByValue, omit, pxCompat, removeEmptyAttrs };
//# sourceMappingURL=helper.mjs.map
