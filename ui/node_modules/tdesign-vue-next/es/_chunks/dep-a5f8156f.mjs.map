{"version":3,"file":"dep-a5f8156f.mjs","sources":["../../node_modules/lodash/_baseIntersection.js","../../node_modules/lodash/_castArrayLikeObject.js","../../node_modules/lodash/intersection.js"],"sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n"],"names":["SetCache","require$$0","arrayIncludes","require$$1","arrayIncludesWith","require$$2","arrayMap","require$$3","baseUnary","require$$4","cacheHas","require$$5","nativeMin","Math","min","baseIntersection","arrays","iteratee","comparator","includes","length","othLength","othIndex","caches","Array","maxLength","Infinity","result","array","undefined","index","seen","outer","value","computed","cache","push","_baseIntersection","isArrayLikeObject","castArrayLikeObject","_castArrayLikeObject","baseRest","intersection","mapped","intersection_1"],"mappings":"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"}