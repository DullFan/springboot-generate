{"version":3,"file":"dep-9cc70af8.mjs","sources":["../../node_modules/lodash/_baseDifference.js"],"sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n"],"names":["SetCache","require$$0","arrayIncludes","require$$1","arrayIncludesWith","require$$2","arrayMap","require$$3","baseUnary","require$$4","cacheHas","require$$5","LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","includes","isCommon","length","result","valuesLength","outer","value","computed","valuesIndex","push","_baseDifference"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,SAAsB;AACjCC,EAAAA,aAAa,GAAGC,cAA2B;AAC3CC,EAAAA,iBAAiB,GAAGC,kBAA+B;AACnDC,EAAAA,QAAQ,GAAGC,SAAsB;AACjCC,EAAAA,SAAS,GAAGC,UAAuB;AACnCC,EAAAA,QAAQ,GAAGC,SAAsB,CAAA;;AAErC;AACA,IAAIC,gBAAgB,GAAG,GAAG,CAAA;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EAC3D,IAAIC,KAAK,GAAG,CAAC,CAAC;AACVC,IAAAA,QAAQ,GAAGjB,aAAa;AACxBkB,IAAAA,QAAQ,GAAG,IAAI;IACfC,MAAM,GAAGP,KAAK,CAACO,MAAM;AACrBC,IAAAA,MAAM,GAAG,EAAE;IACXC,YAAY,GAAGR,MAAM,CAACM,MAAM,CAAA;EAEhC,IAAI,CAACA,MAAM,EAAE;AACX,IAAA,OAAOC,MAAM,CAAA;AACd,GAAA;AACD,EAAA,IAAIN,QAAQ,EAAE;IACZD,MAAM,GAAGT,QAAQ,CAACS,MAAM,EAAEP,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAA;AAC/C,GAAA;AACD,EAAA,IAAIC,UAAU,EAAE;AACdE,IAAAA,QAAQ,GAAGf,iBAAiB,CAAA;AAC5BgB,IAAAA,QAAQ,GAAG,KAAK,CAAA;AACjB,GAAA,MACI,IAAIL,MAAM,CAACM,MAAM,IAAIT,gBAAgB,EAAE;AAC1CO,IAAAA,QAAQ,GAAGT,QAAQ,CAAA;AACnBU,IAAAA,QAAQ,GAAG,KAAK,CAAA;AAChBL,IAAAA,MAAM,GAAG,IAAIf,QAAQ,CAACe,MAAM,CAAC,CAAA;AAC9B,GAAA;AACDS,EAAAA,KAAK,EACL,OAAO,EAAEN,KAAK,GAAGG,MAAM,EAAE;AACvB,IAAA,IAAII,KAAK,GAAGX,KAAK,CAACI,KAAK,CAAC;MACpBQ,QAAQ,GAAGV,QAAQ,IAAI,IAAI,GAAGS,KAAK,GAAGT,QAAQ,CAACS,KAAK,CAAC,CAAA;IAEzDA,KAAK,GAAIR,UAAU,IAAIQ,KAAK,KAAK,CAAC,GAAIA,KAAK,GAAG,CAAC,CAAA;AAC/C,IAAA,IAAIL,QAAQ,IAAIM,QAAQ,KAAKA,QAAQ,EAAE;MACrC,IAAIC,WAAW,GAAGJ,YAAY,CAAA;MAC9B,OAAOI,WAAW,EAAE,EAAE;AACpB,QAAA,IAAIZ,MAAM,CAACY,WAAW,CAAC,KAAKD,QAAQ,EAAE;AACpC,UAAA,SAASF,KAAK,CAAA;AACf,SAAA;AACF,OAAA;AACDF,MAAAA,MAAM,CAACM,IAAI,CAACH,KAAK,CAAC,CAAA;KACnB,MACI,IAAI,CAACN,QAAQ,CAACJ,MAAM,EAAEW,QAAQ,EAAET,UAAU,CAAC,EAAE;AAChDK,MAAAA,MAAM,CAACM,IAAI,CAACH,KAAK,CAAC,CAAA;AACnB,KAAA;AACF,GAAA;AACD,EAAA,OAAOH,MAAM,CAAA;AACf,CAAA;AAEAO,IAAAA,eAAc,GAAGhB;;;;"}