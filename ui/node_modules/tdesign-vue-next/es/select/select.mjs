/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _objectWithoutProperties } from '../_chunks/dep-28f56d24.mjs';
import { _ as _toConsumableArray } from '../_chunks/dep-83cdf63a.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-f29ee43a.mjs';
import { _ as _defineProperty } from '../_chunks/dep-2dead3b8.mjs';
import { defineComponent, toRefs, ref, computed, provide, nextTick, watch, createVNode, mergeProps } from 'vue';
import { p as pick_1 } from '../_chunks/dep-85cd63c4.mjs';
import { i as isArray_1 } from '../_chunks/dep-4ef63f67.mjs';
import { i as isFunction_1 } from '../_chunks/dep-706c37a3.mjs';
import { d as debounce_1 } from '../_chunks/dep-6cd78bb0.mjs';
import { c as cloneDeep_1 } from '../_chunks/dep-70894ccf.mjs';
import { g as get_1 } from '../_chunks/dep-87670918.mjs';
import { i as intersection_1 } from '../_chunks/dep-a5f8156f.mjs';
import FakeArrow from '../common-components/fake-arrow.mjs';
import { SelectInput } from '../select-input/index.mjs';
import SelectPanel from './select-panel.mjs';
import props from './props.mjs';
import { useFormDisabled } from '../form/hooks.mjs';
import useDefaultValue from '../hooks/useDefaultValue.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { getSingleContent, getMultipleContent, selectInjectKey } from './helper.mjs';
import { useSelectOptions } from './hooks/useSelectOptions.mjs';
import useKeyboardControl from './hooks/useKeyboardControl.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import '../_chunks/dep-04fa0fa7.mjs';
import '../_chunks/dep-8a6a0750.mjs';
import '../_chunks/dep-ad0f5c12.mjs';
import '../_chunks/dep-ee7aa1c5.mjs';
import '../_chunks/dep-f5bde8c1.mjs';
import '../_chunks/dep-8e0cf610.mjs';
import '../_chunks/dep-de0d9668.mjs';
import '../_chunks/dep-c23362d5.mjs';
import '../_chunks/dep-203afd59.mjs';
import '../_chunks/dep-48235a7f.mjs';
import '../_chunks/dep-82bdd07b.mjs';
import '../_chunks/dep-a053ff3d.mjs';
import '../_chunks/dep-65c48aa3.mjs';
import '../_chunks/dep-bfe0dcb6.mjs';
import '../_chunks/dep-056e3d49.mjs';
import '../_chunks/dep-f6f516d9.mjs';
import '../_chunks/dep-e8c6972d.mjs';
import '../_chunks/dep-b15f1e4a.mjs';
import '../_chunks/dep-9b1e7043.mjs';
import '../_chunks/dep-6f363254.mjs';
import '../_chunks/dep-c6ed1157.mjs';
import '../_chunks/dep-0126dffd.mjs';
import '../_chunks/dep-a1a5cc96.mjs';
import '../_chunks/dep-45a70a53.mjs';
import '../_chunks/dep-672a56f9.mjs';
import '../_chunks/dep-551a93fd.mjs';
import '../_chunks/dep-786a7628.mjs';
import '../_chunks/dep-12db5b5b.mjs';
import '../_chunks/dep-b1040349.mjs';
import '../_chunks/dep-1a2263f9.mjs';
import '../_chunks/dep-64862a5a.mjs';
import '../_chunks/dep-f8f5e5fe.mjs';
import '../_chunks/dep-5c0cf5f9.mjs';
import '../_chunks/dep-1cfe79e3.mjs';
import '../_chunks/dep-f5c953e5.mjs';
import '../_chunks/dep-5b74d046.mjs';
import '../select-input/select-input.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../_chunks/dep-d5cc8b5d.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-88e27495.mjs';
import '../_chunks/dep-8c0df173.mjs';
import '../_chunks/dep-c3f9042a.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-841260ab.mjs';
import '../_chunks/dep-22c04ae0.mjs';
import '../_chunks/dep-886b81c5.mjs';
import '../hooks/useRipple.mjs';
import '../utils/set-style.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../_common/js/log/log.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../_common/js/utils/set-style.mjs';
import '../popup/container.mjs';
import '../popup/props.mjs';
import '../hooks/useResizeObserver.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../popup/type.mjs';
import '../_chunks/dep-084c0ba6.mjs';
import '../_chunks/dep-07b6df34.mjs';
import '../_chunks/dep-441fa01f.mjs';
import '../_chunks/dep-7d8aa418.mjs';
import '../_chunks/dep-dab87894.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-a56119c3.mjs';
import '../config-provider/type.mjs';
import '../select-input/props.mjs';
import '../select-input/useSingle.mjs';
import '../input/index.mjs';
import '../input/input.mjs';
import 'tdesign-icons-vue-next';
import '../input/props.mjs';
import '../hooks/useGlobalIcon.mjs';
import '../input/useInput.mjs';
import '../form/const.mjs';
import '../input/useLengthLimit.mjs';
import '../_common/js/log/index.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-660119a6.mjs';
import '../_chunks/dep-fb07e55c.mjs';
import '../_chunks/dep-844e471b.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../input/input-group.mjs';
import '../input/input-group-props.mjs';
import '../input/type.mjs';
import '../loading/index.mjs';
import '../_chunks/dep-600393b8.mjs';
import '../_chunks/dep-7c4d232a.mjs';
import '../_chunks/dep-2a455a8f.mjs';
import '../_chunks/dep-09c30dd8.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../loading/type.mjs';
import '../select-input/useMultiple.mjs';
import '../tag-input/index.mjs';
import '../tag-input/tag-input.mjs';
import '../tag-input/props.mjs';
import '../tag-input/hooks/useTagScroll.mjs';
import '../tag-input/useTagList.mjs';
import '../tag/index.mjs';
import '../tag/tag.mjs';
import '../_chunks/dep-a116202e.mjs';
import '../tag/props.mjs';
import '../tag/check-tag.mjs';
import '../tag/check-tag-props.mjs';
import '../_common/js/common.mjs';
import '../tag/check-tag-group.mjs';
import '../tag/check-tag-group-props.mjs';
import '../tag/type.mjs';
import '../tag-input/hooks/useHover.mjs';
import '../tag-input/hooks/useDragSorter.mjs';
import '../tag-input/type.mjs';
import '../select-input/useOverlayInnerStyle.mjs';
import '../select-input/type.mjs';
import '../_chunks/dep-281dbb92.mjs';
import '../_chunks/dep-c0c2d9c7.mjs';
import './option.mjs';
import './option-props.mjs';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../checkbox/props.mjs';
import '../checkbox/constants.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../_common/js/utils/observe.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../hooks/useDisabled.mjs';
import '../_chunks/dep-fb48187a.mjs';
import '../checkbox/group.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../checkbox/type.mjs';
import './optionGroup.mjs';
import './option-group-props.mjs';
import './hooks/usePanelVirtualScroll.mjs';

var _excluded = ["overlayClassName"];
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _Select = defineComponent({
  name: "TSelect",
  props: _objectSpread(_objectSpread({}, props), {}, {
    valueDisplayOptions: {
      type: Object
    }
  }),
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var classPrefix = usePrefixClass();
    var disabled = useFormDisabled();
    var renderTNodeJSX = useTNodeJSX();
    var COMPONENT_NAME = usePrefixClass("select");
    var _useConfig = useConfig("select"),
      globalConfig = _useConfig.globalConfig,
      t = _useConfig.t;
    var _toRefs = toRefs(props2),
      popupVisible = _toRefs.popupVisible,
      inputValue = _toRefs.inputValue,
      modelValue = _toRefs.modelValue,
      value = _toRefs.value;
    var _useDefaultValue = useDefaultValue(inputValue, props2.defaultInputValue, props2.onInputChange, "inputValue"),
      _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2),
      innerInputValue = _useDefaultValue2[0],
      setInputValue = _useDefaultValue2[1];
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      orgValue = _useVModel2[0],
      setOrgValue = _useVModel2[1];
    var selectPanelRef = ref(null);
    var selectInputRef = ref(null);
    var keys = computed(function () {
      var _props2$keys, _props2$keys2, _props2$keys3;
      return {
        label: ((_props2$keys = props2.keys) === null || _props2$keys === void 0 ? void 0 : _props2$keys.label) || "label",
        value: ((_props2$keys2 = props2.keys) === null || _props2$keys2 === void 0 ? void 0 : _props2$keys2.value) || "value",
        disabled: ((_props2$keys3 = props2.keys) === null || _props2$keys3 === void 0 ? void 0 : _props2$keys3.disabled) || "disabled"
      };
    });
    var _useSelectOptions = useSelectOptions(props2, keys, innerInputValue),
      optionsMap = _useSelectOptions.optionsMap,
      optionsList = _useSelectOptions.optionsList,
      optionsCache = _useSelectOptions.optionsCache,
      displayOptions = _useSelectOptions.displayOptions;
    var innerValue = computed(function () {
      if (orgValue.value === void 0) {
        return props2.multiple ? [] : void 0;
      }
      if (props2.valueType === "object") {
        return !props2.multiple ? orgValue.value[keys.value.value] : orgValue.value.map(function (option) {
          return option[keys.value.value];
        });
      }
      return orgValue.value;
    });
    var setInnerValue = function setInnerValue(newVal, context) {
      if (props2.valueType === "object") {
        var _keys$value = keys.value,
          value2 = _keys$value.value,
          label = _keys$value.label;
        var getOption = function getOption(val) {
          if (val === void 0) {
            return void 0;
          }
          var option = optionsMap.value.get(val);
          return _defineProperty(_defineProperty({}, value2, get_1(option, value2)), label, get_1(option, label));
        };
        newVal = props2.multiple ? newVal.map(function (val) {
          return getOption(val);
        }) : getOption(newVal);
      }
      if (newVal === orgValue.value) return;
      setOrgValue(newVal, _objectSpread({
        selectedOptions: getSelectedOptions(newVal)
      }, context));
    };
    var _useDefaultValue3 = useDefaultValue(popupVisible, false, function (visible, context) {
        var _props2$onPopupVisibl;
        (_props2$onPopupVisibl = props2.onPopupVisibleChange) === null || _props2$onPopupVisibl === void 0 || _props2$onPopupVisibl.call(props2, visible, context);
      }, "popupVisible"),
      _useDefaultValue4 = _slicedToArray(_useDefaultValue3, 2),
      innerPopupVisible = _useDefaultValue4[0],
      setInnerPopupVisible = _useDefaultValue4[1];
    var placeholderText = computed(function () {
      var _ref3;
      return (_ref3 = !props2.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsMap) || props2.placeholder) !== null && _ref3 !== void 0 ? _ref3 : t(globalConfig.value.placeholder);
    });
    var displayText = computed(function () {
      return props2.multiple ? getMultipleContent(innerValue.value, optionsMap) : getSingleContent(innerValue.value, optionsMap);
    });
    var valueDisplayParams = computed(function () {
      var val = props2.multiple && isArray_1(innerValue.value) ? innerValue.value.map(function (value2) {
        var _optionsMap$value$get;
        return {
          value: value2,
          label: (_optionsMap$value$get = optionsMap.value.get(value2)) === null || _optionsMap$value$get === void 0 ? void 0 : _optionsMap$value$get.label
        };
      }) : innerValue.value;
      var params = {
        value: val,
        onClose: props2.multiple ? function (index) {
          return removeTag(index);
        } : function () {}
      };
      if (props2.minCollapsedNum && props2.multiple) {
        var _val$slice;
        return _objectSpread(_objectSpread({}, params), {}, {
          displayValue: val === null || val === void 0 || (_val$slice = val.slice) === null || _val$slice === void 0 ? void 0 : _val$slice.call(val, 0, props2.minCollapsedNum)
        });
      }
      return params;
    });
    var isFilterable = computed(function () {
      return Boolean(props2.filterable || globalConfig.value.filterable || isFunction_1(props2.filter));
    });
    var removeTag = function removeTag(index, e) {
      var _props2$onRemove;
      e && e.stopPropagation();
      var selectValue = cloneDeep_1(innerValue.value);
      var value2 = selectValue[index];
      selectValue.splice(index, 1);
      setInnerValue(selectValue, {
        selectedOptions: getSelectedOptions(selectValue),
        trigger: "tag-remove",
        e: e
      });
      (_props2$onRemove = props2.onRemove) === null || _props2$onRemove === void 0 || _props2$onRemove.call(props2, {
        value: value2,
        data: optionsMap.value.get(value2),
        e: e
      });
    };
    var handleCreate = function handleCreate() {
      var _props2$onCreate;
      if (!innerInputValue.value) return;
      (_props2$onCreate = props2.onCreate) === null || _props2$onCreate === void 0 || _props2$onCreate.call(props2, innerInputValue.value);
      setInputValue("");
    };
    var popupContentRef = computed(function () {
      var _selectInputRef$value;
      return (_selectInputRef$value = selectInputRef.value) === null || _selectInputRef$value === void 0 ? void 0 : _selectInputRef$value.popupRef.getOverlay();
    });
    var optionalList = computed(function () {
      return optionsList.value.filter(function (item) {
        return !item.disabled && !item["check-all"] && !item.checkAll;
      });
    });
    var getSelectedOptions = function getSelectedOptions() {
      var selectValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : innerValue.value;
      return optionsList.value.filter(function (option) {
        if (option.checkAll) return;
        if (isArray_1(selectValue)) return selectValue.includes(option.value);
        return selectValue === option.value;
      });
    };
    var _useKeyboardControl = useKeyboardControl({
        displayOptions: displayOptions,
        optionsList: optionsList,
        innerPopupVisible: innerPopupVisible,
        setInnerPopupVisible: setInnerPopupVisible,
        selectPanelRef: selectPanelRef,
        isFilterable: isFilterable,
        getSelectedOptions: getSelectedOptions,
        setInnerValue: setInnerValue,
        innerValue: innerValue,
        popupContentRef: popupContentRef,
        multiple: props2.multiple,
        max: props2.max
      }),
      hoverIndex = _useKeyboardControl.hoverIndex,
      virtualFilteredOptions = _useKeyboardControl.virtualFilteredOptions,
      handleKeyDown = _useKeyboardControl.handleKeyDown,
      filteredOptions = _useKeyboardControl.filteredOptions;
    var onCheckAllChange = function onCheckAllChange(checked) {
      if (!props2.multiple) return;
      var value2 = checked ? optionalList.value.map(function (option) {
        return option.value;
      }) : [];
      setInnerValue(value2, {
        selectedOptions: getSelectedOptions(value2),
        trigger: checked ? "check" : "clear"
      });
    };
    var intersectionLen = computed(function () {
      var values = optionalList.value.map(function (item) {
        return item.value;
      });
      var n = intersection_1(innerValue.value, values);
      return n.length;
    });
    var isCheckAll = computed(function () {
      return intersectionLen.value === optionalList.value.length;
    });
    var indeterminate = computed(function () {
      return !isCheckAll.value && intersectionLen.value !== 0;
    });
    var SelectProvider = computed(function () {
      return {
        max: props2.max,
        multiple: props2.multiple,
        hoverIndex: hoverIndex.value,
        selectValue: innerValue.value,
        reserveKeyword: props2.reserveKeyword,
        handleValueChange: setInnerValue,
        handlerInputChange: setInputValue,
        handlePopupVisibleChange: setInnerPopupVisible,
        handleCreate: handleCreate,
        size: props2.size,
        popupContentRef: popupContentRef,
        indeterminate: indeterminate.value,
        isCheckAll: isCheckAll.value,
        onCheckAllChange: onCheckAllChange,
        getSelectedOptions: getSelectedOptions,
        displayOptions: displayOptions.value
      };
    });
    provide(selectInjectKey, SelectProvider);
    var checkValueInvalid = function checkValueInvalid() {
      if (!props2.multiple && isArray_1(orgValue.value)) {
        setOrgValue(void 0, {
          selectedOptions: [],
          trigger: "default"
        });
      }
      if (props2.multiple && !isArray_1(orgValue.value)) {
        setOrgValue([], {
          selectedOptions: [],
          trigger: "default"
        });
      }
    };
    var handleSearch = debounce_1(function (value2, _ref4) {
      var _props2$onSearch;
      var e = _ref4.e;
      (_props2$onSearch = props2.onSearch) === null || _props2$onSearch === void 0 || _props2$onSearch.call(props2, "".concat(value2), {
        e: e
      });
    }, 300);
    var handlerInputChange = function handlerInputChange(value2, context) {
      if (value2) {
        setInnerPopupVisible(true, {
          e: context.e
        });
      }
      setInputValue(value2);
      handleSearch("".concat(value2), {
        e: context.e
      });
      nextTick(function () {
        var _selectPanelRef$value, _selectPanelRef$value2;
        virtualFilteredOptions.value = (_selectPanelRef$value = selectPanelRef.value) === null || _selectPanelRef$value === void 0 ? void 0 : _selectPanelRef$value.visibleData;
        filteredOptions.value = (_selectPanelRef$value2 = selectPanelRef.value) === null || _selectPanelRef$value2 === void 0 ? void 0 : _selectPanelRef$value2.displayOptions;
      });
    };
    var handlerPopupVisibleChange = function handlerPopupVisibleChange(visible, context) {
      setInnerPopupVisible(visible, context);
      if (visible && context.trigger === "trigger-element-click") setInputValue("");
    };
    var addCache = function addCache(val) {
      if (props2.multiple) {
        var newCache = [];
        var _iterator = _createForOfIteratorHelper(val || []),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;
            var option = optionsMap.value.get(item);
            if (option) {
              newCache.push(option);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        optionsCache.value = Array.from( /* @__PURE__ */new Set([].concat(newCache, _toConsumableArray(optionsCache.value))));
      } else {
        var _option = optionsMap.value.get(val);
        if (_option) {
          optionsCache.value = Array.from( /* @__PURE__ */new Set([_option].concat(_toConsumableArray(optionsCache.value))));
        }
      }
    };
    watch(orgValue, function (val) {
      checkValueInvalid();
      nextTick(function () {
        addCache(val);
      });
    }, {
      immediate: true
    });
    watch(function () {
      return props2.multiple;
    }, function () {
      checkValueInvalid();
    });
    var updateScrollTop = function updateScrollTop(content) {
      var _selectPanelRef$value3;
      if (!selectPanelRef.value) {
        return;
      }
      var firstSelectedNode = (_selectPanelRef$value3 = selectPanelRef.value) === null || _selectPanelRef$value3 === void 0 || (_selectPanelRef$value3 = _selectPanelRef$value3.innerRef) === null || _selectPanelRef$value3 === void 0 ? void 0 : _selectPanelRef$value3.querySelector(".".concat(classPrefix.value, "-is-selected"));
      nextTick(function () {
        if (firstSelectedNode && content) {
          var _getComputedStyle = getComputedStyle(firstSelectedNode),
            paddingBottom = _getComputedStyle.paddingBottom;
          var _getComputedStyle2 = getComputedStyle(content),
            marginBottom = _getComputedStyle2.marginBottom;
          var elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);
          var updateValue = firstSelectedNode.offsetTop - content.offsetTop - (content.clientHeight - firstSelectedNode.clientHeight) + elementBottomHeight;
          content.scrollTop = updateValue;
        }
      });
    };
    provide("updateScrollTop", updateScrollTop);
    return function () {
      var _ref5 = props2.popupProps || {},
        overlayClassName = _ref5.overlayClassName,
        restPopupProps = _objectWithoutProperties(_ref5, _excluded);
      return createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__wrap")
      }, [createVNode(SelectInput, mergeProps({
        autoWidth: props2.autoWidth,
        readonly: props2.readonly,
        borderless: props2.borderless,
        multiple: props2.multiple,
        clearable: props2.clearable,
        loading: props2.loading,
        status: props2.status,
        tips: props2.tips,
        minCollapsedNum: props2.minCollapsedNum,
        autofocus: props2.autofocus,
        suffix: props2.suffix,
        valueDisplayOptions: props2.valueDisplayOptions
      }, {
        "ref": selectInputRef,
        "class": COMPONENT_NAME.value,
        "value": displayText.value,
        "disabled": disabled.value,
        "popupVisible": innerPopupVisible.value,
        "inputValue": innerPopupVisible.value ? innerInputValue.value : "",
        "placeholder": "".concat(placeholderText.value),
        "allowInput": isFilterable.value,
        "collapsed-items": props2.collapsedItems,
        "inputProps": _objectSpread(_objectSpread({
          size: props2.size,
          autofocus: props2.autofocus
        }, props2.inputProps), {}, {
          onkeydown: handleKeyDown
        }),
        "tagInputProps": _objectSpread({
          size: props2.size
        }, props2.tagInputProps),
        "onTagChange": function onTagChange(val, ctx) {
          removeTag(ctx.index);
        },
        "tagProps": _objectSpread({}, props2.tagProps),
        "popupProps": _objectSpread({
          overlayClassName: ["".concat(COMPONENT_NAME.value, "__dropdown"), overlayClassName]
        }, restPopupProps),
        "label": props2.label,
        "prefixIcon": props2.prefixIcon,
        "suffix": props2.suffix,
        "suffixIcon": function suffixIcon() {
          if (props2.suffixIcon || slots.suffixIcon) {
            return renderTNodeJSX("suffixIcon");
          }
          return props2.showArrow && createVNode(FakeArrow, {
            "overlayClassName": "".concat(COMPONENT_NAME.value, "__right-icon"),
            "isActive": innerPopupVisible.value
          }, null);
        },
        "valueDisplay": function valueDisplay() {
          return renderTNodeJSX("valueDisplay", {
            params: valueDisplayParams.value
          });
        },
        "onPopupVisibleChange": handlerPopupVisibleChange,
        "onInputChange": handlerInputChange,
        "onClear": function onClear(_ref6) {
          var _props2$onClear;
          var e = _ref6.e;
          setInnerValue(props2.multiple ? [] : void 0, {
            option: null,
            selectedOptions: getSelectedOptions(props2.multiple ? [] : void 0),
            trigger: "clear",
            e: e
          });
          (_props2$onClear = props2.onClear) === null || _props2$onClear === void 0 || _props2$onClear.call(props2, {
            e: e
          });
        },
        "onEnter": function onEnter(inputValue2, _ref7) {
          var _props2$onEnter;
          var e = _ref7.e;
          (_props2$onEnter = props2.onEnter) === null || _props2$onEnter === void 0 || _props2$onEnter.call(props2, {
            inputValue: "".concat(innerInputValue.value),
            e: e,
            value: innerValue.value
          });
          handleCreate();
        },
        "onBlur": function onBlur(inputValue2, _ref8) {
          var _props2$onBlur;
          var e = _ref8.e;
          (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 || _props2$onBlur.call(props2, {
            e: e,
            value: innerValue.value
          });
        },
        "onFocus": function onFocus(inputValue2, _ref9) {
          var _props2$onFocus;
          var e = _ref9.e;
          (_props2$onFocus = props2.onFocus) === null || _props2$onFocus === void 0 || _props2$onFocus.call(props2, {
            e: e,
            value: innerValue.value
          });
        }
      }, props2.selectInputProps), {
        label: slots.label,
        prefixIcon: slots.prefixIcon,
        suffix: slots.suffix,
        panel: function panel() {
          return createVNode(SelectPanel, mergeProps({
            "ref": selectPanelRef
          }, pick_1(props2, ["size", "multiple", "empty", "loading", "loadingText", "filterable", "creatable", "panelTopContent", "panelBottomContent", "filter", "scroll"]), {
            "inputValue": innerInputValue.value
          }), slots);
        },
        collapsedItems: slots.collapsedItems
      })]);
    };
  }
});

export { _Select as default };
//# sourceMappingURL=select.mjs.map
