declare const _default: import("vue").DefineComponent<{
    createAble: BooleanConstructor;
    multiple: BooleanConstructor;
    index: NumberConstructor;
    rowIndex: NumberConstructor;
    trs: MapConstructor;
    scrollType: StringConstructor;
    isVirtual: BooleanConstructor;
    bufferSize: NumberConstructor;
    checkAll: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: import("vue").PropType<string | number>;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "row-mounted"[], "row-mounted", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    createAble: BooleanConstructor;
    multiple: BooleanConstructor;
    index: NumberConstructor;
    rowIndex: NumberConstructor;
    trs: MapConstructor;
    scrollType: StringConstructor;
    isVirtual: BooleanConstructor;
    bufferSize: NumberConstructor;
    checkAll: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: import("vue").PropType<string | number>;
    };
}>> & {
    "onRow-mounted"?: (...args: any[]) => any;
}, {
    label: string;
    title: string;
    disabled: boolean;
    multiple: boolean;
    checkAll: boolean;
    createAble: boolean;
    isVirtual: boolean;
}, {}>;
export default _default;
