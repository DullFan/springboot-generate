{"version":3,"file":"select.mjs","sources":["../../src/select/select.tsx"],"sourcesContent":["import { defineComponent, provide, computed, toRefs, watch, ref, nextTick, PropType } from 'vue';\nimport picker from 'lodash/pick';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport intersection from 'lodash/intersection';\nimport FakeArrow from '../common-components/fake-arrow';\nimport SelectInput from '../select-input';\nimport SelectPanel from './select-panel';\nimport props from './props';\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { selectInjectKey, getSingleContent, getMultipleContent } from './helper';\nimport { useSelectOptions } from './hooks/useSelectOptions';\nimport useKeyboardControl from './hooks/useKeyboardControl';\nimport type { PopupVisibleChangeContext } from '../popup';\nimport type { SelectInputValueChangeContext } from '../select-input';\nimport type { TdSelectProps, SelectValue } from './type';\nimport { SelectInputValueDisplayOptions } from '../select-input/useSingle';\n\nexport default defineComponent({\n  name: 'TSelect',\n  props: {\n    ...props,\n    /**\n     * 非公开 API，请勿使用（后续即将删除）\n     */\n    valueDisplayOptions: {\n      type: Object as PropType<SelectInputValueDisplayOptions>,\n    },\n  },\n  setup(props: TdSelectProps & { valueDisplayOptions: SelectInputValueDisplayOptions }, { slots }) {\n    const classPrefix = usePrefixClass();\n    const disabled = useFormDisabled();\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('select');\n    const { globalConfig, t } = useConfig('select');\n    const { popupVisible, inputValue, modelValue, value } = toRefs(props);\n    const [innerInputValue, setInputValue] = useDefaultValue(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const [orgValue, setOrgValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const selectPanelRef = ref(null);\n    const selectInputRef = ref(null);\n    const keys = computed(() => ({\n      label: props.keys?.label || 'label',\n      value: props.keys?.value || 'value',\n      disabled: props.keys?.disabled || 'disabled',\n    }));\n    const { optionsMap, optionsList, optionsCache, displayOptions } = useSelectOptions(props, keys, innerInputValue);\n\n    // 内部数据,格式化过的\n    const innerValue = computed(() => {\n      if (orgValue.value === undefined) {\n        return props.multiple ? [] : undefined;\n      }\n      if (props.valueType === 'object') {\n        return !props.multiple\n          ? orgValue.value[keys.value.value]\n          : (orgValue.value as SelectValue[]).map((option) => option[keys.value.value]);\n      }\n      return orgValue.value;\n    });\n\n    const setInnerValue: TdSelectProps['onChange'] = (newVal: SelectValue | SelectValue[], context) => {\n      if (props.valueType === 'object') {\n        const { value, label } = keys.value;\n        const getOption = (val: SelectValue) => {\n          if (val === undefined) {\n            return undefined;\n          }\n          const option = optionsMap.value.get(val);\n          return {\n            [value]: get(option, value),\n            [label]: get(option, label),\n          };\n        };\n        newVal = props.multiple ? (newVal as SelectValue[]).map((val) => getOption(val)) : getOption(newVal);\n      }\n      if (newVal === orgValue.value) return;\n      setOrgValue(newVal, {\n        selectedOptions: getSelectedOptions(newVal),\n        ...context,\n      });\n    };\n\n    const [innerPopupVisible, setInnerPopupVisible] = useDefaultValue(\n      popupVisible,\n      false,\n      (visible: boolean, context: PopupVisibleChangeContext) => {\n        props.onPopupVisibleChange?.(visible, context);\n      },\n      'popupVisible',\n    );\n\n    const placeholderText = computed(\n      () =>\n        ((!props.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsMap)) ||\n          props.placeholder) ??\n        t(globalConfig.value.placeholder),\n    );\n\n    // selectInput 展示值\n    const displayText = computed(() =>\n      props.multiple\n        ? getMultipleContent(innerValue.value as SelectValue[], optionsMap)\n        : getSingleContent(innerValue.value, optionsMap),\n    );\n\n    // valueDisplayParams参数\n    const valueDisplayParams = computed(() => {\n      const val =\n        props.multiple && isArray(innerValue.value)\n          ? (innerValue.value as SelectValue[]).map((value) => ({\n              value,\n              label: optionsMap.value.get(value)?.label,\n            }))\n          : innerValue.value;\n\n      const params = {\n        value: val,\n        onClose: props.multiple ? (index: number) => removeTag(index) : () => {},\n      };\n\n      if (props.minCollapsedNum && props.multiple) {\n        return {\n          ...params,\n          displayValue: val?.slice?.(0, props.minCollapsedNum),\n        };\n      }\n      return params;\n    });\n\n    const isFilterable = computed(() => {\n      return Boolean(props.filterable || globalConfig.value.filterable || isFunction(props.filter));\n    });\n\n    // 移除tag\n    const removeTag = (index: number, e?: MouseEvent) => {\n      e && e.stopPropagation();\n      const selectValue = cloneDeep(innerValue.value) as SelectValue[];\n      const value = selectValue[index];\n      selectValue.splice(index, 1);\n      setInnerValue(selectValue, { selectedOptions: getSelectedOptions(selectValue), trigger: 'tag-remove', e });\n      props.onRemove?.({\n        value: value as string | number,\n        data: optionsMap.value.get(value),\n        e,\n      });\n    };\n\n    const handleCreate = () => {\n      if (!innerInputValue.value) return;\n      props.onCreate?.(innerInputValue.value);\n      setInputValue('');\n    };\n\n    const popupContentRef = computed(() => selectInputRef.value?.popupRef.getOverlay() as HTMLElement);\n\n    /**\n     * 可选选项的列表\n     * 排除已禁用和全选的选项\n     */\n    const optionalList = computed(() =>\n      optionsList.value.filter((item) => {\n        return !item.disabled && !item['check-all'] && !item.checkAll;\n      }),\n    );\n\n    const getSelectedOptions = (selectValue: SelectValue[] | SelectValue = innerValue.value) => {\n      return optionsList.value.filter((option) => {\n        if (option.checkAll) return;\n        if (isArray(selectValue)) return selectValue.includes(option.value);\n        return selectValue === option.value;\n      });\n    };\n\n    const { hoverIndex, virtualFilteredOptions, handleKeyDown, filteredOptions } = useKeyboardControl({\n      displayOptions,\n      optionsList,\n      innerPopupVisible,\n      setInnerPopupVisible,\n      selectPanelRef,\n      isFilterable,\n      getSelectedOptions,\n      setInnerValue,\n      innerValue,\n      popupContentRef,\n      multiple: props.multiple,\n      max: props.max,\n    });\n\n    const onCheckAllChange = (checked: boolean) => {\n      if (!props.multiple) return;\n      const value = checked ? optionalList.value.map((option) => option.value) : [];\n      setInnerValue(value, { selectedOptions: getSelectedOptions(value), trigger: checked ? 'check' : 'clear' });\n    };\n\n    // 已选的长度\n    const intersectionLen = computed<number>(() => {\n      const values = optionalList.value.map((item) => item.value);\n      const n = intersection(innerValue.value, values);\n      return n.length;\n    });\n\n    // 全选\n    const isCheckAll = computed<boolean>(() => {\n      return intersectionLen.value === optionalList.value.length;\n    });\n\n    // 半选\n    const indeterminate = computed<boolean>(() => !isCheckAll.value && intersectionLen.value !== 0);\n\n    const SelectProvider = computed(() => ({\n      max: props.max,\n      multiple: props.multiple,\n      hoverIndex: hoverIndex.value,\n      selectValue: innerValue.value,\n      reserveKeyword: props.reserveKeyword,\n      handleValueChange: setInnerValue,\n      handlerInputChange: setInputValue,\n      handlePopupVisibleChange: setInnerPopupVisible,\n      handleCreate,\n      size: props.size,\n      popupContentRef,\n      indeterminate: indeterminate.value,\n      isCheckAll: isCheckAll.value,\n      onCheckAllChange,\n      getSelectedOptions,\n      displayOptions: displayOptions.value,\n    }));\n\n    provide(selectInjectKey, SelectProvider);\n\n    const checkValueInvalid = () => {\n      // 参数类型检测与修复\n      if (!props.multiple && isArray(orgValue.value)) {\n        setOrgValue(undefined, { selectedOptions: [], trigger: 'default' });\n      }\n      if (props.multiple && !isArray(orgValue.value)) {\n        setOrgValue([], { selectedOptions: [], trigger: 'default' });\n      }\n    };\n\n    const handleSearch = debounce((value: string, { e }: { e: KeyboardEvent }) => {\n      props.onSearch?.(`${value}`, { e });\n    }, 300);\n\n    const handlerInputChange = (value: string, context: SelectInputValueChangeContext) => {\n      if (value) {\n        setInnerPopupVisible(true, { e: context.e as KeyboardEvent });\n      }\n      setInputValue(value);\n      handleSearch(`${value}`, { e: context.e as KeyboardEvent });\n      nextTick(() => {\n        virtualFilteredOptions.value = selectPanelRef.value?.visibleData;\n        filteredOptions.value = selectPanelRef.value?.displayOptions;\n      });\n    };\n\n    const handlerPopupVisibleChange = (visible: boolean, context: PopupVisibleChangeContext) => {\n      setInnerPopupVisible(visible, context);\n      // 在通过点击选择器打开弹窗时 清空此前的输入内容 避免在关闭时就清空引起的闪烁问题\n      if (visible && context.trigger === 'trigger-element-click') setInputValue('');\n    };\n\n    const addCache = (val: SelectValue) => {\n      if (props.multiple) {\n        const newCache = [];\n        for (const item of (val as SelectValue[]) || []) {\n          const option = optionsMap.value.get(item);\n          if (option) {\n            newCache.push(option);\n          }\n        }\n        optionsCache.value = Array.from(new Set([...newCache, ...optionsCache.value]));\n      } else {\n        const option = optionsMap.value.get(val);\n        if (option) {\n          optionsCache.value = Array.from(new Set([option, ...optionsCache.value]));\n        }\n      }\n    };\n\n    watch(\n      orgValue,\n      (val) => {\n        checkValueInvalid();\n        nextTick(() => {\n          addCache(val);\n        });\n      },\n      {\n        immediate: true,\n      },\n    );\n    watch(\n      () => props.multiple,\n      () => {\n        checkValueInvalid();\n      },\n    );\n\n    // 列表展开时定位置选中项\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!selectPanelRef.value) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = (selectPanelRef.value?.innerRef as HTMLDivElement)?.querySelector(\n        `.${classPrefix.value}-is-selected`,\n      );\n      // 此处需要等待渲染后进行计算\n      nextTick(() => {\n        if (firstSelectedNode && content) {\n          const { paddingBottom } = getComputedStyle(firstSelectedNode);\n          const { marginBottom } = getComputedStyle(content);\n          const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n          // 小于0时不需要特殊处理，会被设为0\n          const updateValue =\n            firstSelectedNode.offsetTop -\n            content.offsetTop -\n            (content.clientHeight - firstSelectedNode.clientHeight) +\n            elementBottomHeight;\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        }\n      });\n    };\n    provide('updateScrollTop', updateScrollTop);\n    return () => {\n      const { overlayClassName, ...restPopupProps } = (props.popupProps || {}) as TdSelectProps['popupProps'];\n      return (\n        <div class={`${COMPONENT_NAME.value}__wrap`}>\n          <SelectInput\n            {...{\n              autoWidth: props.autoWidth,\n              readonly: props.readonly,\n              borderless: props.borderless,\n              multiple: props.multiple,\n              clearable: props.clearable,\n              loading: props.loading,\n              status: props.status,\n              tips: props.tips,\n              minCollapsedNum: props.minCollapsedNum,\n              autofocus: props.autofocus,\n              suffix: props.suffix,\n              valueDisplayOptions: props.valueDisplayOptions,\n            }}\n            ref={selectInputRef}\n            class={COMPONENT_NAME.value}\n            value={displayText.value}\n            disabled={disabled.value}\n            popupVisible={innerPopupVisible.value}\n            inputValue={innerPopupVisible.value ? innerInputValue.value : ''}\n            placeholder={`${placeholderText.value}`}\n            allowInput={isFilterable.value}\n            collapsed-items={props.collapsedItems}\n            inputProps={{\n              size: props.size,\n              autofocus: props.autofocus,\n              ...(props.inputProps as TdSelectProps['inputProps']),\n              onkeydown: handleKeyDown,\n            }}\n            tagInputProps={{\n              size: props.size,\n              ...(props.tagInputProps as TdSelectProps['tagInputProps']),\n            }}\n            onTagChange={(val, ctx) => {\n              removeTag(ctx.index);\n            }}\n            tagProps={{ ...(props.tagProps as TdSelectProps['tagProps']) }}\n            popupProps={{\n              overlayClassName: [`${COMPONENT_NAME.value}__dropdown`, overlayClassName],\n              ...restPopupProps,\n            }}\n            label={props.label}\n            prefixIcon={props.prefixIcon}\n            suffix={props.suffix}\n            suffixIcon={() => {\n              if (props.suffixIcon || slots.suffixIcon) {\n                return renderTNodeJSX('suffixIcon');\n              }\n\n              return (\n                props.showArrow && (\n                  <FakeArrow\n                    overlayClassName={`${COMPONENT_NAME.value}__right-icon`}\n                    isActive={innerPopupVisible.value}\n                  />\n                )\n              );\n            }}\n            valueDisplay={() =>\n              renderTNodeJSX('valueDisplay', {\n                params: valueDisplayParams.value,\n              })\n            }\n            onPopupVisibleChange={handlerPopupVisibleChange}\n            onInputChange={handlerInputChange}\n            onClear={({ e }) => {\n              setInnerValue(props.multiple ? [] : undefined, {\n                option: null,\n                selectedOptions: getSelectedOptions(props.multiple ? [] : undefined),\n                trigger: 'clear',\n                e,\n              });\n              props.onClear?.({ e });\n            }}\n            onEnter={(inputValue, { e }) => {\n              props.onEnter?.({ inputValue: `${innerInputValue.value}`, e, value: innerValue.value });\n              handleCreate();\n            }}\n            onBlur={(inputValue, { e }) => {\n              props.onBlur?.({ e, value: innerValue.value });\n            }}\n            onFocus={(inputValue, { e }) => {\n              props.onFocus?.({ e, value: innerValue.value });\n            }}\n            {...(props.selectInputProps as TdSelectProps['selectInputProps'])}\n            v-slots={{\n              label: slots.label,\n              prefixIcon: slots.prefixIcon,\n              suffix: slots.suffix,\n              panel: () => (\n                <SelectPanel\n                  ref={selectPanelRef}\n                  {...picker(props, [\n                    'size',\n                    'multiple',\n                    'empty',\n                    'loading',\n                    'loadingText',\n                    'filterable',\n                    'creatable',\n                    'panelTopContent',\n                    'panelBottomContent',\n                    'filter',\n                    'scroll',\n                  ])}\n                  inputValue={innerInputValue.value}\n                  v-slots={slots}\n                />\n              ),\n              collapsedItems: slots.collapsedItems,\n            }}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","valueDisplayOptions","type","Object","setup","slots","_ref","classPrefix","usePrefixClass","disabled","useFormDisabled","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","_useConfig","useConfig","globalConfig","t","_toRefs","toRefs","popupVisible","inputValue","modelValue","value","_useDefaultValue","useDefaultValue","defaultInputValue","onInputChange","_useDefaultValue2","_slicedToArray","innerInputValue","setInputValue","_useVModel","useVModel","defaultValue","onChange","_useVModel2","orgValue","setOrgValue","selectPanelRef","ref","selectInputRef","keys","computed","_props2$keys","_props2$keys2","_props2$keys3","label","_useSelectOptions","useSelectOptions","optionsMap","optionsList","optionsCache","displayOptions","innerValue","multiple","valueType","map","option","setInnerValue","newVal","context","_keys$value","getOption","val","get","_defineProperty","selectedOptions","getSelectedOptions","_useDefaultValue3","visible","_props2$onPopupVisibl","onPopupVisibleChange","_useDefaultValue4","innerPopupVisible","setInnerPopupVisible","placeholderText","_ref3","getSingleContent","placeholder","displayText","getMultipleContent","valueDisplayParams","isArray","_optionsMap$value$get","params","onClose","index","removeTag","minCollapsedNum","_val$slice","displayValue","slice","call","isFilterable","Boolean","filterable","isFunction","filter","e","_props2$onRemove","stopPropagation","selectValue","cloneDeep","splice","trigger","onRemove","data","handleCreate","_props2$onCreate","onCreate","popupContentRef","_selectInputRef$value","popupRef","getOverlay","optionalList","item","checkAll","arguments","length","undefined","includes","_useKeyboardControl","useKeyboardControl","max","hoverIndex","virtualFilteredOptions","handleKeyDown","filteredOptions","onCheckAllChange","checked","intersectionLen","values","n","intersection","isCheckAll","indeterminate","SelectProvider","reserveKeyword","handleValueChange","handlerInputChange","handlePopupVisibleChange","size","provide","selectInjectKey","checkValueInvalid","handleSearch","debounce","_ref4","_props2$onSearch","onSearch","concat","nextTick","_selectPanelRef$value","_selectPanelRef$value2","visibleData","handlerPopupVisibleChange","addCache","newCache","_iterator","_createForOfIteratorHelper","_step","s","done","push","err","f","Array","from","Set","_toConsumableArray","watch","immediate","updateScrollTop","content","_selectPanelRef$value3","firstSelectedNode","innerRef","querySelector","_getComputedStyle","getComputedStyle","paddingBottom","_getComputedStyle2","marginBottom","elementBottomHeight","parseInt","updateValue","offsetTop","clientHeight","scrollTop","_ref5","popupProps","overlayClassName","restPopupProps","_objectWithoutProperties","_excluded","_createVNode","SelectInput","_mergeProps","autoWidth","readonly","borderless","clearable","loading","status","tips","autofocus","suffix","collapsedItems","inputProps","onkeydown","tagInputProps","onTagChange","ctx","tagProps","prefixIcon","suffixIcon","showArrow","FakeArrow","valueDisplay","onClear","_ref6","_props2$onClear","onEnter","_ref7","_props2$onEnter","onBlur","_ref8","_props2$onBlur","onFocus","_ref9","_props2$onFocus","selectInputProps","panel","SelectPanel","picker"],"mappings":"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"}