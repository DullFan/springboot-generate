{"version":3,"file":"useCommonClassName.mjs","sources":["../../src/hooks/useCommonClassName.ts"],"sourcesContent":["import { useConfig } from './useConfig';\n\nexport default function useCommonClassName() {\n  const { classPrefix } = useConfig();\n\n  const sizeClassNames = {\n    small: `${classPrefix.value}-size-s`,\n    medium: `${classPrefix.value}-size-m`,\n    large: `${classPrefix.value}-size-l`,\n    default: '',\n    xs: `${classPrefix.value}-size-xs`,\n    xl: `${classPrefix.value}-size-xl`,\n    block: `${classPrefix.value}-size-full-width`,\n  };\n\n  const statusClassNames = {\n    loading: `${classPrefix.value}-is-loading`,\n    loadMore: `${classPrefix.value}-is-load-more`,\n    disabled: `${classPrefix.value}-is-disabled`,\n    focused: `${classPrefix.value}-is-focused`,\n    success: `${classPrefix.value}-is-success`,\n    error: `${classPrefix.value}-is-error`,\n    warning: `${classPrefix.value}-is-warning`,\n    selected: `${classPrefix.value}-is-selected`,\n    active: `${classPrefix.value}-is-active`,\n    checked: `${classPrefix.value}-is-checked`,\n    current: `${classPrefix.value}-is-current`,\n    hidden: `${classPrefix.value}-is-hidden`,\n    visible: `${classPrefix.value}-is-visible`,\n    expanded: `${classPrefix.value}-is-expanded`,\n    indeterminate: `${classPrefix.value}-is-indeterminate`,\n  };\n  return {\n    classPrefix,\n    sizeClassNames,\n    statusClassNames,\n    classNames: {\n      size: sizeClassNames,\n      status: statusClassNames,\n    },\n  };\n}\n\nexport type CommonClassNameType = ReturnType<typeof useCommonClassName>;\n"],"names":["useCommonClassName","_useConfig","useConfig","classPrefix","sizeClassNames","small","concat","value","medium","large","xs","xl","block","statusClassNames","loading","loadMore","disabled","focused","success","error","warning","selected","active","checked","current","hidden","visible","expanded","indeterminate","classNames","size","status"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAwBA,kBAAqBA,GAAA;AACrC,EAAA,IAAAC,UAAA,GAAkBC,SAAU,EAAA;IAA1BC,WAAY,GAAAF,UAAA,CAAZE,WAAY,CAAA;AAEpB,EAAA,IAAMC,cAAiB,GAAA;AACrBC,IAAAA,KAAA,KAAAC,MAAA,CAAUH,WAAY,CAAAI,KAAA,EAAA,SAAA,CAAA;AACtBC,IAAAA,MAAA,KAAAF,MAAA,CAAWH,WAAY,CAAAI,KAAA,EAAA,SAAA,CAAA;AACvBE,IAAAA,KAAA,KAAAH,MAAA,CAAUH,WAAY,CAAAI,KAAA,EAAA,SAAA,CAAA;AACtB,IAAA,SAAA,EAAS,EAAA;AACTG,IAAAA,EAAA,KAAAJ,MAAA,CAAOH,WAAY,CAAAI,KAAA,EAAA,UAAA,CAAA;AACnBI,IAAAA,EAAA,KAAAL,MAAA,CAAOH,WAAY,CAAAI,KAAA,EAAA,UAAA,CAAA;AACnBK,IAAAA,KAAA,EAAAN,EAAAA,CAAAA,MAAA,CAAUH,WAAY,CAAAI,KAAA,EAAA,kBAAA,CAAA;GACxB,CAAA;AAEA,EAAA,IAAMM,gBAAmB,GAAA;AACvBC,IAAAA,OAAA,KAAAR,MAAA,CAAYH,WAAY,CAAAI,KAAA,EAAA,aAAA,CAAA;AACxBQ,IAAAA,QAAA,KAAAT,MAAA,CAAaH,WAAY,CAAAI,KAAA,EAAA,eAAA,CAAA;AACzBS,IAAAA,QAAA,KAAAV,MAAA,CAAaH,WAAY,CAAAI,KAAA,EAAA,cAAA,CAAA;AACzBU,IAAAA,OAAA,KAAAX,MAAA,CAAYH,WAAY,CAAAI,KAAA,EAAA,aAAA,CAAA;AACxBW,IAAAA,OAAA,KAAAZ,MAAA,CAAYH,WAAY,CAAAI,KAAA,EAAA,aAAA,CAAA;AACxBY,IAAAA,KAAA,KAAAb,MAAA,CAAUH,WAAY,CAAAI,KAAA,EAAA,WAAA,CAAA;AACtBa,IAAAA,OAAA,KAAAd,MAAA,CAAYH,WAAY,CAAAI,KAAA,EAAA,aAAA,CAAA;AACxBc,IAAAA,QAAA,KAAAf,MAAA,CAAaH,WAAY,CAAAI,KAAA,EAAA,cAAA,CAAA;AACzBe,IAAAA,MAAA,KAAAhB,MAAA,CAAWH,WAAY,CAAAI,KAAA,EAAA,YAAA,CAAA;AACvBgB,IAAAA,OAAA,KAAAjB,MAAA,CAAYH,WAAY,CAAAI,KAAA,EAAA,aAAA,CAAA;AACxBiB,IAAAA,OAAA,KAAAlB,MAAA,CAAYH,WAAY,CAAAI,KAAA,EAAA,aAAA,CAAA;AACxBkB,IAAAA,MAAA,KAAAnB,MAAA,CAAWH,WAAY,CAAAI,KAAA,EAAA,YAAA,CAAA;AACvBmB,IAAAA,OAAA,KAAApB,MAAA,CAAYH,WAAY,CAAAI,KAAA,EAAA,aAAA,CAAA;AACxBoB,IAAAA,QAAA,KAAArB,MAAA,CAAaH,WAAY,CAAAI,KAAA,EAAA,cAAA,CAAA;AACzBqB,IAAAA,aAAA,EAAAtB,EAAAA,CAAAA,MAAA,CAAkBH,WAAY,CAAAI,KAAA,EAAA,mBAAA,CAAA;GAChC,CAAA;EACO,OAAA;AACLJ,IAAAA,WAAA,EAAAA,WAAA;AACAC,IAAAA,cAAA,EAAAA,cAAA;AACAS,IAAAA,gBAAA,EAAAA,gBAAA;AACAgB,IAAAA,UAAY,EAAA;AACVC,MAAAA,IAAM,EAAA1B,cAAA;AACN2B,MAAAA,MAAQ,EAAAlB,gBAAAA;AACV,KAAA;GACF,CAAA;AACF;;;;"}