{"version":3,"file":"useVirtualScrollNew.mjs","sources":["../../node_modules/lodash/_baseExtremum.js","../../node_modules/lodash/_baseGt.js","../../node_modules/lodash/max.js","../../node_modules/lodash/_baseLt.js","../../node_modules/lodash/min.js","../../node_modules/lodash/_baseSum.js","../../node_modules/lodash/sum.js","../../src/hooks/useVirtualScrollNew.ts"],"sourcesContent":["var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;\n","var baseExtremum = require('./_baseExtremum'),\n    baseLt = require('./_baseLt'),\n    identity = require('./identity');\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nmodule.exports = min;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","/**\n * 基于原作者（@louiszhai）的思路二次开发，为保证其他组件暂不受影响，单独开一个文件\n * 新增支持以下 3 个特性\n * 1. 支持不同表格高度\n * 2. 支持滚动到特定元素，方便 Select 等组件展开时直接定位到选中元素\n * 3. 支持数据变化不重置，方便支持树形结构虚拟滚动\n */\nimport { ref, computed, watch, Ref } from 'vue';\nimport { TScroll } from '../common';\nimport useResizeObserver from './useResizeObserver';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport sum from 'lodash/sum';\nimport throttle from 'lodash/throttle';\n\nexport type UseVirtualScrollParams = Ref<{\n  /** 列数据 */\n  data: { [key: string]: any }[];\n  scroll: TScroll;\n}>;\n\nexport interface ScrollToElementParams {\n  /** 跳转元素下标 */\n  index: number;\n  /** 跳转元素距离顶部的距离 */\n  top?: number;\n  /** 单个元素高度非固定场景下，即 isFixedRowHeight = false。延迟设置元素位置，一般用于依赖不同高度异步渲染等场景，单位：毫秒 */\n  time?: number;\n  behavior?: 'auto' | 'smooth';\n}\n\nconst useVirtualScroll = (container: Ref<HTMLElement | null>, params: UseVirtualScrollParams) => {\n  /** 注意测试：数据长度为空；数据长度小于表格高度等情况。即期望只有数据量达到一定程度才允许开启虚拟滚动 */\n  const visibleData = ref<any[]>([]);\n  // 用于显示表格列\n  const translateY = ref((params.value.data?.length || 0) * (params.value.scroll?.rowHeight || 50));\n  // 滚动高度，用于显示滚动条\n  const scrollHeight = ref(0);\n  // 已经通过节点渲染计算出来的各自行高\n  // 不要使用响应式，数据量大时会产生卡顿\n  let trHeightList: number[] = [];\n  const containerHeight = ref(0);\n  const containerWidth = ref(0);\n  const startAndEndIndex = ref<[number, number]>([0, 15]);\n\n  // 设置初始值\n  const tScroll = computed(() => {\n    const { scroll } = params.value;\n    if (!scroll) return {};\n    return {\n      bufferSize: scroll.bufferSize || 10,\n      isFixedRowHeight: scroll.isFixedRowHeight ?? false,\n      rowHeight: scroll.rowHeight || 47,\n      threshold: scroll.threshold || 100,\n      type: scroll.type,\n    };\n  });\n\n  // 当前场景是否满足开启虚拟滚动的条件\n  const isVirtualScroll = computed(() => {\n    const { data } = params.value;\n    return tScroll.value.type === 'virtual' && tScroll.value.threshold < data.length;\n  });\n\n  // 一次循环遍历中计算可视范围的相关信息，减少大数据量时的遍历开销\n  function getVisibleRangeConfig() {\n    const scrollTop = container.value?.scrollTop ?? 0;\n\n    // 记录前置 buffer 的高度\n    const prevBufferHeightList: number[] = [];\n    // 没有被渲染的行的高度，用于设定容器的 translateY\n    let hiddenHeight = 0;\n\n    let visibleStart = -1;\n    let visibleEnd = -1;\n\n    let totalHeight = 0;\n\n    for (let i = 0, len = params.value.data.length; i < len; i++) {\n      const rowHeight = trHeightList[i] ?? tScroll.value.rowHeight;\n      totalHeight = totalHeight + rowHeight;\n      // 获取第一个可视范围内的元素\n      if (totalHeight > scrollTop && visibleStart === -1) {\n        visibleStart = i;\n        if (visibleStart - tScroll.value.bufferSize > 0) {\n          hiddenHeight = totalHeight - rowHeight - sum(prevBufferHeightList);\n        }\n      }\n      if (visibleStart === -1) {\n        prevBufferHeightList.push(rowHeight);\n        if (prevBufferHeightList.length > tScroll.value.bufferSize) {\n          prevBufferHeightList.shift();\n        }\n      }\n      // 获取最后一个可视范围内的元素\n      if (\n        visibleEnd === -1 &&\n        (totalHeight > containerHeight.value + scrollTop || i === params.value.data.length - 1)\n      ) {\n        visibleEnd = i;\n      }\n\n      if (visibleStart !== -1 && visibleEnd !== -1) {\n        // 不再统计高度\n        break;\n      }\n    }\n\n    // 前后偏移 buffer\n    const startIndex = max([visibleStart - tScroll.value.bufferSize, 0]);\n    const endIndex = min([visibleEnd + tScroll.value.bufferSize, params.value.data.length]);\n\n    return {\n      startIndex,\n      endIndex,\n      translateY: hiddenHeight,\n    };\n  }\n\n  const updateVisibleData = throttle(() => {\n    // 计算前后的buffer偏移后的渲染数据\n    const { startIndex, endIndex, translateY: translateYValue } = getVisibleRangeConfig();\n\n    if (startAndEndIndex.value.join() !== [startIndex, endIndex].join() && startIndex >= 0) {\n      translateY.value = translateYValue;\n      visibleData.value = params.value.data.slice(startIndex, endIndex);\n      startAndEndIndex.value = [startIndex, endIndex];\n    }\n  }, 100);\n\n  // 固定高度场景，不需要通过行渲染获取高度（仅非固定高度场景需要）\n  const handleRowMounted = (rowData: any) => {\n    if (!isVirtualScroll.value || !rowData || tScroll.value.isFixedRowHeight || !container.value) return;\n    const trHeight = rowData.ref.value?.getBoundingClientRect().height;\n    const rowIndex = rowData.data.VIRTUAL_SCROLL_INDEX;\n\n    if (trHeightList[rowIndex] !== trHeight) {\n      const diff = trHeight - trHeightList[rowIndex];\n      trHeightList[rowIndex] = trHeight;\n      // 采用 diff 的方式更新，不再遍历数组\n      scrollHeight.value = scrollHeight.value + diff;\n    }\n  };\n\n  const handleScroll = () => {\n    if (!isVirtualScroll.value) return;\n    updateVisibleData();\n  };\n\n  const refreshVirtualScroll = ([{ contentRect }]: [ResizeObserverEntry]) => {\n    // 如果宽度发生变化，重置滚动位置\n    const maxScrollbarWidth = 16;\n    if (Math.abs(contentRect.width - containerWidth.value) > maxScrollbarWidth) {\n      container.value.scrollTop = 0;\n      translateY.value = 0;\n    }\n    containerWidth.value = contentRect.width;\n    // 高度更新后，由 height 独立的 watch 触发可视区域的更新\n    containerHeight.value = contentRect.height;\n  };\n\n  const addIndexToData = (data: any[]) => {\n    data.forEach((item, index) => {\n      // eslint-disable-next-line\n      item['VIRTUAL_SCROLL_INDEX'] = index;\n    });\n  };\n\n  const updateScrollTop = ({ index, top = 0, behavior }: ScrollToElementParams) => {\n    const scrollTop = sum(trHeightList.slice(0, index)) - top;\n    container.value.scrollTo({\n      top: scrollTop,\n      behavior: behavior || 'auto',\n    });\n  };\n\n  /**\n   * 滚动到指定元素（对外暴露的方法，谨慎修改）\n   */\n  const scrollToElement = (p: ScrollToElementParams) => {\n    updateScrollTop(p);\n    // 不同行高的表格需要异步计算\n    if (!tScroll.value.isFixedRowHeight) {\n      const duration = p.time ?? 60;\n      const timer = setTimeout(() => {\n        updateScrollTop(p);\n        clearTimeout(timer);\n      }, duration);\n    }\n  };\n\n  // 如果初始化时 isVirtualScroll 为 false，undefined 的 ref 会导致无法监听元素高度变化\n  useResizeObserver(\n    computed(() => (isVirtualScroll.value ? container.value : undefined)),\n    refreshVirtualScroll,\n  );\n\n  // 固定高度场景，可直接通过数据长度计算出最大滚动高度\n  watch(\n    () => [[...params.value.data], tScroll.value, isVirtualScroll.value, container.value],\n    () => {\n      if (!isVirtualScroll.value || !container.value) return;\n      const { data } = params.value;\n      addIndexToData(data);\n\n      // 有可能初始化时，resize 监听没触发，尝试设置初始化容器高度\n      containerHeight.value = container.value.getBoundingClientRect().height;\n\n      if (trHeightList.length !== params.value.data.length) {\n        // 暂时对于 table 和 tree 场景，信任之前缓存的行高\n        // 后续优化可能提供一个参数，进行监听从而清除记录的行高会更好\n        const initHeightList: number[] = Array.from(trHeightList);\n        // 数据长度如果发生变化，裁剪高度记录的数组，避免算出异常的总高度\n        initHeightList.length = params.value.data.length;\n        initHeightList.fill(tScroll.value.rowHeight || 47);\n        trHeightList = initHeightList;\n      }\n\n      scrollHeight.value = sum(trHeightList);\n\n      // 清除记录的滚动顺序\n      startAndEndIndex.value = [0, 0];\n      updateVisibleData();\n    },\n    { immediate: true },\n  );\n\n  // 当容器高度变化后，重新计算可视区域数据\n  watch(\n    () => containerHeight.value,\n    () => {\n      updateVisibleData();\n    },\n  );\n\n  return {\n    visibleData,\n    translateY,\n    scrollHeight,\n    isVirtualScroll,\n    handleScroll,\n    handleRowMounted,\n    scrollToElement,\n  };\n};\n\nexport type VirtualScrollConfig = ReturnType<typeof useVirtualScroll>;\n\nexport default useVirtualScroll;\n"],"names":["isSymbol","require$$0","baseExtremum","array","iteratee","comparator","index","length","value","current","computed","undefined","result","_baseExtremum","baseGt","other","_baseGt","require$$1","identity","require$$2","max","max_1","baseLt","_baseLt","min","min_1","baseSum","_baseSum","sum","sum_1","useVirtualScroll","container","params","_params$value$data","_params$value$scroll","visibleData","ref","translateY","data","scroll","rowHeight","scrollHeight","trHeightList","containerHeight","containerWidth","startAndEndIndex","tScroll","_scroll$isFixedRowHei","bufferSize","isFixedRowHeight","threshold","type","isVirtualScroll","getVisibleRangeConfig","_container$value$scro","_container$value","scrollTop","prevBufferHeightList","hiddenHeight","visibleStart","visibleEnd","totalHeight","i","len","_trHeightList$i","push","shift","startIndex","endIndex","updateVisibleData","throttle","_getVisibleRangeConfi","translateYValue","join","slice","handleRowMounted","rowData","_rowData$ref$value","trHeight","getBoundingClientRect","height","rowIndex","VIRTUAL_SCROLL_INDEX","diff","handleScroll","refreshVirtualScroll","_ref2","_slicedToArray","_ref","contentRect","maxScrollbarWidth","Math","abs","width","addIndexToData","forEach","item","updateScrollTop","top","_ref3$top","behavior","scrollTo","scrollToElement","p","_p$time","duration","time","timer","setTimeout","clearTimeout","useResizeObserver","watch","_toConsumableArray","initHeightList","Array","from","fill","immediate"],"mappings":"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"}