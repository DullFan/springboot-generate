export declare const Icon: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<{
        size: string;
        name: string;
        url: string | string[];
        loadDefaultIcons: boolean;
    } & {
        onClick?: (context: {
            e: MouseEvent;
        }) => void;
    }>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<{
        size: string;
        name: string;
        url: string | string[];
        loadDefaultIcons: boolean;
    } & {
        onClick?: (context: {
            e: MouseEvent;
        }) => void;
    }>, {
        size: string;
        name: string;
        url: string | string[];
        loadDefaultIcons: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<{
        size: string;
        name: string;
        url: string | string[];
        loadDefaultIcons: boolean;
    } & {
        onClick?: (context: {
            e: MouseEvent;
        }) => void;
    }>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>, {}, {}, {}, {
        size: string;
        name: string;
        url: string | string[];
        loadDefaultIcons: boolean;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<{
    size: string;
    name: string;
    url: string | string[];
    loadDefaultIcons: boolean;
} & {
    onClick?: (context: {
        e: MouseEvent;
    }) => void;
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, {
    size: string;
    name: string;
    url: string | string[];
    loadDefaultIcons: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin<any[]>;
export default Icon;
