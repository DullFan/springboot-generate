import { ScrollContainerElement } from '../common';
declare const _default: import("vue").DefineComponent<{
    container: {
        type: import("vue").PropType<import("../common").ScrollContainer>;
        default: () => import("../common").ScrollContainer;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    offsetBottom: {
        type: NumberConstructor;
        default: number;
    };
    offsetTop: {
        type: NumberConstructor;
        default: number;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onFixedChange: import("vue").PropType<(affixed: boolean, context: {
        top: number;
    }) => void>;
}, {
    affixWrapRef: import("vue").Ref<HTMLElement>;
    affixRef: import("vue").Ref<HTMLElement>;
    bindScroll: () => Promise<void>;
    unbindScroll: () => void;
    handleScroll: () => void;
    scrollContainer: import("vue").Ref<ScrollContainerElement>;
    renderTNodeJSX: (name: string, options?: import("../utils/render-tnode").OptionsType) => any;
    affixStyle: import("vue").Ref<Record<string, any>>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "fixedChange"[], "fixedChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    container: {
        type: import("vue").PropType<import("../common").ScrollContainer>;
        default: () => import("../common").ScrollContainer;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    offsetBottom: {
        type: NumberConstructor;
        default: number;
    };
    offsetTop: {
        type: NumberConstructor;
        default: number;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onFixedChange: import("vue").PropType<(affixed: boolean, context: {
        top: number;
    }) => void>;
}>> & {
    onFixedChange?: (...args: any[]) => any;
}, {
    offsetTop: number;
    container: import("../common").ScrollContainer;
    offsetBottom: number;
}, {}>;
export default _default;
