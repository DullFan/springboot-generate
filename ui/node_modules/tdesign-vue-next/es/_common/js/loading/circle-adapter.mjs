/**
 * tdesign v1.9.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../../_chunks/dep-2dead3b8.mjs';
import setStyle from '../utils/set-style.mjs';
import { getIEVersion } from '../utils/helper.mjs';
import '../../../_chunks/dep-8a6a0750.mjs';
import '../../../_chunks/dep-83cdf63a.mjs';
import '../../../_chunks/dep-04fa0fa7.mjs';
import '../../../_chunks/dep-28f56d24.mjs';
import '../../../_chunks/dep-f29ee43a.mjs';
import '../../../_chunks/dep-d5cc8b5d.mjs';
import '../../../_chunks/dep-ad0f5c12.mjs';
import '../../../_chunks/dep-de0d9668.mjs';
import '../../../_chunks/dep-4ef63f67.mjs';
import '../../../_chunks/dep-f5bde8c1.mjs';
import '../../../_chunks/dep-c23362d5.mjs';
import '../../../_chunks/dep-660119a6.mjs';
import '../../../_chunks/dep-fb07e55c.mjs';
import '../../../_chunks/dep-844e471b.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function circleAdapter(circleElem) {
  var _window, _window$getComputedSt2, _window2;
  var basicStyle = {};
  if (!circleElem || typeof window === "undefined") {
    return;
  }
  var _window$getComputedSt = (_window = window) === null || _window === void 0 || (_window$getComputedSt2 = _window.getComputedStyle) === null || _window$getComputedSt2 === void 0 ? void 0 : _window$getComputedSt2.call(_window, circleElem),
    color = _window$getComputedSt.color,
    fontSize = _window$getComputedSt.fontSize;
  var ua = (_window2 = window) === null || _window2 === void 0 || (_window2 = _window2.navigator) === null || _window2 === void 0 ? void 0 : _window2.userAgent;
  var isSafari = /Safari/.test(ua) && !/Chrome/.test(ua);
  var isIosWechat = /(?=.*iPhone)[?=.*MicroMessenger]/.test(ua) && !/Chrome/.test(ua);
  if (isSafari || isIosWechat) {
    basicStyle = {
      transformOrigin: "0px 0px",
      transform: "scale(".concat(parseInt(fontSize, 10) / 12, ")")
    };
  }
  if (color && getIEVersion() > 11) {
    var matched = color.match(/[\d.]+/g);
    var endColor = matched ? "rgba(".concat(matched[0], ", ").concat(matched[1], ", ").concat(matched[2], ", 0)") : "";
    setStyle(circleElem, _objectSpread(_objectSpread({}, basicStyle), {}, {
      background: "conic-gradient(from 90deg at 50% 50%,".concat(endColor, " 0deg, ").concat(color, " 360deg)")
    }));
  } else {
    setStyle(circleElem, _objectSpread(_objectSpread({}, basicStyle), {}, {
      background: ""
    }));
  }
}

export { circleAdapter as default };
//# sourceMappingURL=circle-adapter.mjs.map
