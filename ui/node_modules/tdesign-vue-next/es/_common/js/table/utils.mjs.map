{"version":3,"file":"utils.mjs","sources":["../../../../src/_common/js/table/utils.ts"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport isNumber from 'lodash/isNumber';\nimport get from 'lodash/get';\nimport { BaseTableCol } from './types';\n\nexport function filterDataByIds(\n  data: Array<object> = [],\n  ids: Array<string | number> = [],\n  byId = 'id',\n): Array<object> {\n  return data.filter((d: Record<string, any> = {}) => ids.includes(d[byId]));\n}\n\nexport enum SCROLL_DIRECTION {\n  X = 'x',\n  Y = 'y',\n  UNKNOWN = 'unknown',\n}\n\nlet preScrollLeft: any;\nlet preScrollTop: any;\n\nexport const getScrollDirection = (scrollLeft: number, scrollTop: number): SCROLL_DIRECTION => {\n  let direction = SCROLL_DIRECTION.UNKNOWN;\n  if (preScrollTop !== scrollTop) {\n    direction = SCROLL_DIRECTION.Y;\n  } else if (preScrollLeft !== scrollLeft) {\n    direction = SCROLL_DIRECTION.X;\n  }\n  preScrollTop = scrollTop;\n  preScrollLeft = scrollLeft;\n  return direction;\n};\n\nexport function isRowSelectedDisabled(\n  selectColumn: { [key: string]: any },\n  row: Record<string, any>,\n  rowIndex: number,\n): boolean {\n  if (!selectColumn) return false;\n  let disabled = isFunction(selectColumn.disabled) ? selectColumn.disabled({ row, rowIndex }) : selectColumn.disabled;\n  if (selectColumn.checkProps) {\n    if (isFunction(selectColumn.checkProps)) {\n      disabled = disabled || selectColumn.checkProps({ row, rowIndex }).disabled;\n    } else if (selectColumn.checkProps === 'object') {\n      disabled = disabled || selectColumn.checkProps.disabled;\n    }\n  }\n  return !!disabled;\n}\n\n// 获取列属性\nexport function getColWidthAttr<T extends BaseTableCol<T>>(col: T, attrKey: 'width' | 'minWidth') {\n  const attr = col[attrKey];\n  return isNumber(attr) ? attr : parseFloat(attr);\n}\n\nexport function getEditableKeysMap(keys: Array<string | number>, list: any[], rowKey: string) {\n  const map: { [key: string | number]: boolean } = {};\n  for (let i = 0, len = list.length; i < len; i++) {\n    const rowValue = get(list[i], rowKey);\n    if (keys.includes(rowValue)) {\n      map[rowValue] = true;\n    }\n  }\n  return map;\n}\n\nexport function getColumnDataByKey(columns: any[], colKey: string): any {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    if (columns[i].colKey === colKey) return columns[i];\n    if (columns[i].children?.length) {\n      const t = getColumnDataByKey(columns[i].children, colKey);\n      if (t) return t;\n    }\n  }\n  return null;\n}\n\nexport function getColumnIndexByKey(columns: any[], colKey: string): number {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    if (columns[i].colKey === colKey) {\n      return i;\n    }\n    if (columns[i].children?.length) {\n      const t = getColumnDataByKey(columns[i].children, colKey);\n      if (t) return i;\n    }\n  }\n  return -1;\n}\n\nexport function getColumnsResetValue(columns: any[], resetValue: { [key: string]: any } = {}) {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    const col = columns[i];\n    if (col.filter && 'resetValue' in col.filter) {\n      // eslint-disable-next-line no-param-reassign\n      resetValue[col.colKey] = col.filter.resetValue;\n    }\n    if (col.children?.length) {\n      getColumnsResetValue(col.children, resetValue);\n    }\n  }\n  return resetValue;\n}\n"],"names":["filterDataByIds","data","ids","byId","filter","d","arguments","length","undefined","includes","SCROLL_DIRECTION","preScrollLeft","preScrollTop","getScrollDirection","scrollLeft","scrollTop","direction","isRowSelectedDisabled","selectColumn","row","rowIndex","disabled","isFunction","checkProps","getColWidthAttr","col","attrKey","attr","isNumber","parseFloat","getEditableKeysMap","keys","list","rowKey","map","i","len","rowValue","get","getColumnDataByKey","columns","colKey","_columns$i$children","children","t","getColumnIndexByKey","_columns$i$children2","getColumnsResetValue","resetValue","_col$children"],"mappings":"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"}