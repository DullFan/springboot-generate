export declare function fillZero(length: number): string;
export declare function isInputNumber(num: number | string): boolean;
export declare function removeInvalidZero(num: string, decimal?: boolean): string;
export declare function largeIntNumberAdd(num1: string, num2: string, decimal?: boolean): string;
export declare function largePositiveNumberAdd(num1: string, num2: string): string;
export declare function formatENumber(num: string): string;
export declare function compareLargeNumber(num1: string, num2: string): 1 | -1 | 0;
export declare function isInfinity(num: number | string): boolean;
export declare function isSafeNumber(num: string | number): boolean;
export declare function compareNumber(num1: string | number, num2: string | number, largeNumber?: boolean): 0 | 1 | -1;
export declare function largeIntegerNumberSubtract(num1: string, num2: string, p?: {
    decimal?: boolean;
    stayZero?: boolean;
}): string;
export declare function largePositiveNumberSubtract(num1: string, num2: string): string;
export declare function largeNumberSubtract(num1: string, num2: string): string;
export declare function largeNumberAdd(num1: string, num2: string): string;
export declare function largeNumberToFixed(number: string | number, decimalPlaces?: number, largeNumber?: boolean): string;
