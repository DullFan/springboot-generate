{"version":3,"file":"base.mjs","sources":["../../../../src/_common/js/tabs/base.ts"],"sourcesContent":["const getDomWidth = (dom: HTMLElement): number => dom?.offsetWidth || 0;\n\ntype navPlacement = 'left' | 'right' | 'top' | 'bottom';\n\nexport interface allElementDeps {\n  activeTab?: HTMLElement;\n  navsContainer?: HTMLElement;\n  navsWrap?: HTMLElement;\n  leftOperations?: HTMLElement;\n  toLeftBtn?: HTMLElement;\n  rightOperations?: HTMLElement;\n  toRightBtn?: HTMLElement;\n}\n\nexport default {\n  /**\n   * 计算滚动条的当前偏移值，用于 resize 时调整\n   * @returns number\n   */\n  calcScrollLeft(elements: allElementDeps, scrollLeft: number): number {\n    const container = elements.navsContainer;\n    const wrap = elements.navsWrap;\n    const { rightOperations } = elements;\n    const rightOperationsZoneWidth = getDomWidth(rightOperations);\n\n    if (!wrap || !container) return scrollLeft;\n\n    const containerWidth = getDomWidth(container);\n    const wrapWidth = getDomWidth(wrap);\n\n    if (wrapWidth <= containerWidth) {\n      // 容器大于选项，则设置第一个 nav-item 和容器左边相连\n      return 0;\n    }\n\n    // 一般发生在 window.resize，容器变大，此时设置最后一个 nav-item 和容器右边相连\n    if (scrollLeft + containerWidth - rightOperationsZoneWidth > wrapWidth) {\n      return wrapWidth + rightOperationsZoneWidth - containerWidth;\n    }\n\n    return scrollLeft;\n  },\n\n  /**\n   * 计算往左滚动按钮是否应该出现\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的 scrollLeft\n   * @param placement navs 的位置\n   * @returns boolean\n   */\n  calculateCanToLeft(depElement: allElementDeps, scrollLeft: number, placement: navPlacement) {\n    if (['left', 'right'].includes(placement.toLowerCase())) {\n      return false;\n    }\n    const { navsContainer: container, navsWrap: wrap, leftOperations, toLeftBtn } = depElement;\n    if (!wrap || !container) {\n      return false;\n    }\n    const leftOperationsZoneWidth = getDomWidth(leftOperations);\n    const leftIconWidth = getDomWidth(toLeftBtn);\n\n    return scrollLeft + Math.round(leftOperationsZoneWidth - leftIconWidth) > 0;\n  },\n\n  /**\n   * 计算往右滚动按钮是否应该出现\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @param placement navs 的位置\n   * @returns boolean\n   */\n  calculateCanToRight(depElement: allElementDeps, scrollLeft: number, placement: navPlacement) {\n    if (['left', 'right'].includes(placement.toLowerCase())) {\n      return false;\n    }\n    const { navsContainer: container, navsWrap: wrap, rightOperations, toRightBtn } = depElement;\n    if (!wrap || !container) {\n      return false;\n    }\n    const rightOperationsZoneWidth = getDomWidth(rightOperations);\n    const rightIconWidth = getDomWidth(toRightBtn);\n    return (\n      scrollLeft + getDomWidth(container) - (rightOperationsZoneWidth - rightIconWidth)\n      - getDomWidth(wrap) < -1\n    ); // 小数像素不精确，所以这里判断小于-1\n  },\n\n  /**\n   * 计算将当前 tab 滚动到可视区域的偏移值\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @returns number\n   */\n  moveActiveTabIntoView(depElement: allElementDeps, scrollLeft: number): number {\n    const {\n      activeTab,\n      navsContainer: container,\n      navsWrap,\n      leftOperations,\n      toLeftBtn,\n      rightOperations,\n      toRightBtn,\n    } = depElement;\n    if (!activeTab) return scrollLeft;\n    const totalWidthBeforeActiveTab = activeTab.offsetLeft;\n    if (!container) return scrollLeft;\n    // 如果要当前tab左边对齐左操作栏的右边以展示完整的tab，需要获取左边操作栏的宽度\n    const _getLeftCoverWidth = () => {\n      const leftOperationsZoneWidth = getDomWidth(leftOperations);\n      const leftIconWidth = getDomWidth(toLeftBtn);\n      // 判断当前tab是不是第一个tab\n      if (totalWidthBeforeActiveTab === 0) {\n        // 如果是第一个tab要移动到最左边，则要减去左箭头的宽度，因为此时左箭头会被隐藏起来\n        return leftOperationsZoneWidth - leftIconWidth;\n      }\n      return leftOperationsZoneWidth;\n    };\n    const leftCoverWidth = _getLeftCoverWidth();\n    // 判断当前tab是不是在左边被隐藏\n    const isCurrentTabHiddenInLeftZone = scrollLeft + leftCoverWidth > totalWidthBeforeActiveTab;\n    if (isCurrentTabHiddenInLeftZone) {\n      return totalWidthBeforeActiveTab - leftCoverWidth;\n    }\n\n    // move to right\n    const activeTabWidth = activeTab.offsetWidth;\n    if (!container || !navsWrap) return scrollLeft;\n    const containerWidth = getDomWidth(container);\n    // 如果要当前tab右边对齐右操作栏的左边以展示完整的tab，需要获取右边操作栏的宽度\n    const _getRightCoverWidth = () => {\n      const rightOperationsZoneWidth = getDomWidth(rightOperations);\n      const rightIconWidth = getDomWidth(toRightBtn);\n      const wrapWidth = getDomWidth(navsWrap);\n      // 判断当前tab是不是最后一个tab，小于1是防止小数像素导致值不相等的情况\n      if (Math.abs(totalWidthBeforeActiveTab + activeTabWidth - wrapWidth) < 1) {\n        // 如果是最后一个tab，则要减去右箭头的宽度，因为此时右箭头会被隐藏\n        return rightOperationsZoneWidth - rightIconWidth;\n      }\n      return rightOperationsZoneWidth;\n    };\n    const rightCoverWidth = _getRightCoverWidth();\n    // 判断当前tab是不是在右边被隐藏\n    const isHiddenInRightZone = scrollLeft + containerWidth - rightCoverWidth\n      < totalWidthBeforeActiveTab + activeTabWidth;\n    if (isHiddenInRightZone) {\n      return totalWidthBeforeActiveTab + activeTabWidth - containerWidth + rightCoverWidth;\n    }\n    return scrollLeft;\n  },\n\n  /**\n   * 计算点击“往左按钮”时，需要的偏移值\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @returns number\n   */\n  scrollToLeft(depElement: allElementDeps, scrollLeft: number): number {\n    const { navsContainer: container, leftOperations, toLeftBtn } = depElement;\n    if (!container) return 0;\n    const leftOperationsZoneWidth = getDomWidth(leftOperations);\n    const leftIconWidth = getDomWidth(toLeftBtn);\n    const containerWidth = getDomWidth(container);\n\n    return Math.max(-(leftOperationsZoneWidth - leftIconWidth), scrollLeft - containerWidth);\n  },\n\n  /**\n   * 计算点击“往右按钮”时，需要的偏移值\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @returns number\n   */\n  scrollToRight(depElement: allElementDeps, scrollLeft: number): number {\n    const { navsContainer: container, navsWrap: wrap, rightOperations, toRightBtn } = depElement;\n    const rightOperationsZoneWidth = getDomWidth(rightOperations);\n    const rightIconWidth = getDomWidth(toRightBtn);\n    const containerWidth = getDomWidth(container);\n    const wrapWidth = getDomWidth(wrap);\n\n    return Math.min(\n      scrollLeft + containerWidth - rightOperationsZoneWidth - rightIconWidth,\n      wrapWidth - containerWidth + rightOperationsZoneWidth - rightIconWidth,\n    );\n  },\n};\n"],"names":["getDomWidth","dom","offsetWidth","calcScrollLeft","elements","scrollLeft","container","navsContainer","wrap","navsWrap","rightOperations","rightOperationsZoneWidth","containerWidth","wrapWidth","calculateCanToLeft","depElement","placement","includes","toLowerCase","leftOperations","toLeftBtn","leftOperationsZoneWidth","leftIconWidth","Math","round","calculateCanToRight","toRightBtn","rightIconWidth","moveActiveTabIntoView","activeTab","totalWidthBeforeActiveTab","offsetLeft","_getLeftCoverWidth","leftCoverWidth","isCurrentTabHiddenInLeftZone","activeTabWidth","_getRightCoverWidth","abs","rightCoverWidth","isHiddenInRightZone","scrollToLeft","max","scrollToRight","min"],"mappings":"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"}