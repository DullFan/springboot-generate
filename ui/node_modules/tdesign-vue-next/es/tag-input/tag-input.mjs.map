{"version":3,"file":"tag-input.mjs","sources":["../../src/tag-input/tag-input.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs, ref, nextTick, reactive, watch } from 'vue';\nimport { CloseCircleFilledIcon as TdCloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport TInput, { InputProps, StrInputProps, TdInputProps } from '../input';\nimport { TdTagInputProps } from './type';\nimport props from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport { useConfig } from '../config-provider/useConfig';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport useTagScroll from './hooks/useTagScroll';\nimport useTagList from './useTagList';\nimport useHover from './hooks/useHover';\nimport useDefault from '../hooks/useDefaultValue';\nimport useDragSorter from './hooks/useDragSorter';\nimport isArray from 'lodash/isArray';\n\nconst useComponentClassName = () => {\n  return {\n    NAME_CLASS: usePrefixClass('tag-input'),\n    CLEAR_CLASS: usePrefixClass('tag-input__suffix-clear'),\n    BREAK_LINE_CLASS: usePrefixClass('tag-input--break-line'),\n  };\n};\n\nexport default defineComponent({\n  name: 'TTagInput',\n\n  props: { ...props },\n\n  setup(props: TdTagInputProps) {\n    const { NAME_CLASS, CLEAR_CLASS, BREAK_LINE_CLASS } = useComponentClassName();\n    const { CloseCircleFilledIcon } = useGlobalIcon({ CloseCircleFilledIcon: TdCloseCircleFilledIcon });\n\n    const { inputValue, inputProps } = toRefs(props);\n    const [tInputValue, setTInputValue] = useDefault(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const { excessTagsDisplayType, readonly, disabled, clearable, placeholder } = toRefs(props);\n    const { isHover, addHover, cancelHover } = useHover({\n      readonly: props.readonly,\n      disabled: props.disabled,\n      onMouseenter: props.onMouseenter,\n      onMouseleave: props.onMouseleave,\n    });\n    const isComposition = ref(false);\n    const { classPrefix } = useConfig();\n    const isFocused = ref(false);\n\n    // 这里不需要响应式，因此直接传递参数\n    const { getDragProps } = useDragSorter({\n      ...props,\n      sortOnDraggable: props.dragSort,\n      onDragOverCheck: {\n        x: true,\n        targetClassNameRegExp: new RegExp(`^${classPrefix.value}-tag`),\n      },\n    });\n    const { scrollToRight, onWheel, scrollToRightOnEnter, scrollToLeftOnLeave, tagInputRef, isScrollable } =\n      useTagScroll(props);\n    // handle tag add and remove\n    // 需要响应式，为了尽量的和 react 版本做法相同，这里进行响应式处理\n    const { tagValue, onInnerEnter, onInputBackspaceKeyUp, onInputBackspaceKeyDown, clearAll, renderLabel, onClose } =\n      useTagList(\n        reactive({\n          ...toRefs(props),\n          getDragProps,\n        }),\n      );\n\n    const classes = computed(() => {\n      const isEmpty = !(isArray(tagValue.value) && tagValue.value.length);\n      return [\n        NAME_CLASS.value,\n        {\n          [BREAK_LINE_CLASS.value]: excessTagsDisplayType.value === 'break-line',\n          [`${classPrefix.value}-is-empty`]: isEmpty,\n          [`${classPrefix.value}-tag-input--with-tag`]: !isEmpty,\n        },\n      ];\n    });\n\n    const tagInputPlaceholder = computed(() => (!tagValue.value?.length ? placeholder.value : ''));\n\n    const showClearIcon = computed(() =>\n      Boolean(\n        !readonly.value &&\n          !disabled.value &&\n          clearable.value &&\n          isHover.value &&\n          (tagValue.value?.length || tInputValue.value),\n      ),\n    );\n\n    const onInputEnter = (value: string, context: { e: KeyboardEvent }) => {\n      // 阻止 Enter 默认行为，避免在 Form 中触发 submit 事件\n      context.e?.preventDefault?.();\n      setTInputValue('', { e: context.e, trigger: 'enter' });\n      !isComposition.value && onInnerEnter(value, context);\n      nextTick(() => {\n        scrollToRight();\n        isComposition.value = false;\n      });\n    };\n\n    const onInputCompositionstart = (value: string, context: { e: CompositionEvent }) => {\n      isComposition.value = true;\n      inputProps.value?.onCompositionstart?.(value, context);\n    };\n\n    const onInputCompositionend = (value: string, context: { e: CompositionEvent }) => {\n      isComposition.value = false;\n      inputProps.value?.onCompositionend?.(value, context);\n    };\n\n    const onClick: TdInputProps['onClick'] = (ctx) => {\n      if (disabled.value) return;\n      isFocused.value = true;\n      tagInputRef.value.focus();\n      props.onClick?.(ctx);\n    };\n\n    const onClearClick = (context: { e: MouseEvent }) => {\n      clearAll(context);\n      setTInputValue('', { e: context.e, trigger: 'clear' });\n      props.onClear?.(context);\n    };\n\n    const focus = () => {\n      tagInputRef.value.focus();\n    };\n\n    const blur = () => {\n      tagInputRef.value.blur();\n    };\n\n    const onMouseEnter: InputProps['onMouseenter'] = (context) => {\n      addHover(context);\n      scrollToRightOnEnter();\n    };\n\n    const onMouseLeave: InputProps['onMouseleave'] = (context) => {\n      cancelHover(context);\n      scrollToLeftOnLeave();\n    };\n\n    const onInnerFocus: InputProps['onFocus'] = (inputValue: string, context: { e: MouseEvent }) => {\n      if (isFocused.value) return;\n      isFocused.value = true;\n      props.onFocus?.(tagValue.value, { e: context.e, inputValue });\n    };\n\n    const onInnerBlur: InputProps['onFocus'] = (inputValue: string, context: { e: MouseEvent }) => {\n      isFocused.value = false;\n      setTInputValue('', { e: context.e, trigger: 'blur' });\n      props.onBlur?.(tagValue.value, { e: context.e, inputValue });\n    };\n\n    const onInnerChange: StrInputProps['onChange'] = (val, context) => {\n      setTInputValue(val, { ...context, trigger: 'input' });\n    };\n\n    watch(\n      () => isScrollable.value,\n      (v) => {\n        if (props.excessTagsDisplayType !== 'scroll') return;\n        const scrollElementClass = `${classPrefix.value}-input__prefix`;\n        const scrollElement = tagInputRef.value.$el.querySelector(`.${scrollElementClass}`);\n        if (v) scrollElement.classList.add(`${scrollElementClass}--scrollable`);\n        else scrollElement.classList.remove(`${scrollElementClass}--scrollable`);\n      },\n    );\n    return {\n      CLEAR_CLASS,\n      CloseCircleFilledIcon,\n      tagValue,\n      tInputValue,\n      isHover,\n      tagInputPlaceholder,\n      showClearIcon,\n      tagInputRef,\n      classPrefix,\n      isFocused,\n      focus,\n      blur,\n      setTInputValue,\n      onMouseEnter,\n      onMouseLeave,\n      onInnerFocus,\n      onInnerBlur,\n      onInnerChange,\n      addHover,\n      cancelHover,\n      onInputEnter,\n      onInnerEnter,\n      onInputBackspaceKeyUp,\n      onInputBackspaceKeyDown,\n      renderLabel,\n      onWheel,\n      scrollToRightOnEnter,\n      scrollToLeftOnLeave,\n      onClick,\n      onClearClick,\n      onClose,\n      onInputCompositionstart,\n      onInputCompositionend,\n      classes,\n    };\n  },\n\n  render() {\n    const { CloseCircleFilledIcon } = this;\n    const suffixIconNode = this.showClearIcon ? (\n      <CloseCircleFilledIcon class={this.CLEAR_CLASS} onClick={this.onClearClick} />\n    ) : (\n      renderTNodeJSX(this, 'suffixIcon')\n    );\n    const prefixIconNode = renderTNodeJSX(this, 'prefixIcon');\n    const suffixClass = `${this.classPrefix}-tag-input__with-suffix-icon`;\n    if (suffixIconNode && !this.classes.includes(suffixClass)) {\n      this.classes.push(suffixClass);\n    }\n    // 自定义 Tag 节点\n    const displayNode = renderTNodeJSX(this, 'valueDisplay', {\n      params: {\n        value: this.tagValue,\n        onClose: (index: number) => this.onClose({ index }),\n      },\n    });\n    // 左侧文本\n    const label = renderTNodeJSX(this, 'label', { silent: true });\n    const inputProps = this.inputProps as TdTagInputProps['inputProps'];\n    const readonly = this.readonly || inputProps?.readonly;\n    return (\n      <TInput\n        ref=\"tagInputRef\"\n        v-slots={{\n          suffix: this.$slots.suffix,\n        }}\n        readonly={readonly}\n        showInput={!readonly || !this.tagValue || !this.tagValue?.length}\n        value={this.tInputValue}\n        autoWidth={true} // 控制input_inner的宽度 设置为true让内部input不会提前换行\n        size={this.size}\n        disabled={this.disabled}\n        label={() => this.renderLabel({ displayNode, label })}\n        class={this.classes}\n        tips={this.tips}\n        status={this.status}\n        placeholder={this.tagInputPlaceholder}\n        suffix={this.suffix}\n        suffixIcon={() => suffixIconNode}\n        prefixIcon={() => prefixIconNode}\n        keepWrapperWidth={!this.autoWidth}\n        onWheel={this.onWheel}\n        onChange={this.onInnerChange}\n        onPaste={this.onPaste}\n        onEnter={this.onInputEnter}\n        onKeyup={this.onInputBackspaceKeyUp}\n        onKeydown={this.onInputBackspaceKeyDown}\n        onMouseenter={this.onMouseEnter}\n        onMouseleave={this.onMouseLeave}\n        onFocus={this.onInnerFocus}\n        onBlur={this.onInnerBlur}\n        onClick={this.onClick}\n        onCompositionstart={this.onInputCompositionstart}\n        onCompositionend={this.onInputCompositionend}\n        {...(this.inputProps as TdTagInputProps['inputProps'])}\n      />\n    );\n  },\n});\n"],"names":["useComponentClassName","NAME_CLASS","usePrefixClass","CLEAR_CLASS","BREAK_LINE_CLASS","defineComponent","name","props","_objectSpread","setup","_useComponentClassNam","_useGlobalIcon","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","_toRefs","toRefs","inputValue","inputProps","_useDefault","useDefault","defaultInputValue","onInputChange","_useDefault2","_slicedToArray","tInputValue","setTInputValue","_toRefs2","excessTagsDisplayType","readonly","disabled","clearable","placeholder","_useHover","useHover","onMouseenter","onMouseleave","isHover","addHover","cancelHover","isComposition","ref","_useConfig","useConfig","classPrefix","isFocused","_useDragSorter","useDragSorter","sortOnDraggable","dragSort","onDragOverCheck","x","targetClassNameRegExp","RegExp","concat","value","getDragProps","_useTagScroll","useTagScroll","scrollToRight","onWheel","scrollToRightOnEnter","scrollToLeftOnLeave","tagInputRef","isScrollable","_useTagList","useTagList","reactive","tagValue","onInnerEnter","onInputBackspaceKeyUp","onInputBackspaceKeyDown","clearAll","renderLabel","onClose","classes","computed","isEmpty","isArray","length","_defineProperty","tagInputPlaceholder","_tagValue$value","showClearIcon","_tagValue$value2","Boolean","onInputEnter","context","_context$e","_context$e$preventDef","e","preventDefault","call","trigger","nextTick","onInputCompositionstart","_inputProps$value","_inputProps$value$onC","onCompositionstart","onInputCompositionend","_inputProps$value2","_inputProps$value2$on","onCompositionend","onClick","ctx","_props2$onClick","focus","onClearClick","_props2$onClear","onClear","blur","onMouseEnter","onMouseLeave","onInnerFocus","_props2$onFocus","onFocus","onInnerBlur","_props2$onBlur","onBlur","onInnerChange","val","watch","v","scrollElementClass","scrollElement","$el","querySelector","classList","add","remove","render","_this","_this$tagValue","suffixIconNode","_createVNode","renderTNodeJSX","prefixIconNode","suffixClass","includes","push","displayNode","params","index","label","silent","TInput","_mergeProps","size","tips","status","suffix","suffixIcon","prefixIcon","autoWidth","onPaste","$slots"],"mappings":"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"}