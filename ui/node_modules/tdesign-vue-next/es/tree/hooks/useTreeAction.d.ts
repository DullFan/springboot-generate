import { TreeNodeValue, TypeTreeState, TypeTargetNode } from '../tree-types';
export default function useTreeAction(state: TypeTreeState): {
    setExpanded: (item: TypeTargetNode, isExpanded: boolean) => TreeNodeValue[];
    toggleExpanded: (item: TypeTargetNode) => TreeNodeValue[];
    setActived: (item: TypeTargetNode, isActived: boolean) => import("../../cascader/interface").TreeNodeValue[];
    toggleActived: (item: TypeTargetNode) => TreeNodeValue[];
    setChecked: (item: TypeTargetNode, isChecked: boolean, ctx: {
        e: Event;
    }) => TreeNodeValue[];
    toggleChecked: (item: TypeTargetNode, ctx: {
        e: Event;
    }) => TreeNodeValue[];
};
