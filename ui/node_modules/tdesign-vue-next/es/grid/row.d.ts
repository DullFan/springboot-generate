declare const _default: import("vue").DefineComponent<{
    align: {
        type: import("vue").PropType<"center" | "end" | "start" | "top" | "bottom" | "middle" | "stretch" | "baseline">;
        default: "center" | "end" | "start" | "top" | "bottom" | "middle" | "stretch" | "baseline";
        validator(val: "center" | "end" | "start" | "top" | "bottom" | "middle" | "stretch" | "baseline"): boolean;
    };
    gutter: {
        type: import("vue").PropType<number | import("./type").GutterObject | (number | import("./type").GutterObject)[]>;
        default: number | import("./type").GutterObject | (number | import("./type").GutterObject)[];
    };
    justify: {
        type: import("vue").PropType<"center" | "end" | "start" | "space-around" | "space-between">;
        default: "center" | "end" | "start" | "space-around" | "space-between";
        validator(val: "center" | "end" | "start" | "space-around" | "space-between"): boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    align: {
        type: import("vue").PropType<"center" | "end" | "start" | "top" | "bottom" | "middle" | "stretch" | "baseline">;
        default: "center" | "end" | "start" | "top" | "bottom" | "middle" | "stretch" | "baseline";
        validator(val: "center" | "end" | "start" | "top" | "bottom" | "middle" | "stretch" | "baseline"): boolean;
    };
    gutter: {
        type: import("vue").PropType<number | import("./type").GutterObject | (number | import("./type").GutterObject)[]>;
        default: number | import("./type").GutterObject | (number | import("./type").GutterObject)[];
    };
    justify: {
        type: import("vue").PropType<"center" | "end" | "start" | "space-around" | "space-between">;
        default: "center" | "end" | "start" | "space-around" | "space-between";
        validator(val: "center" | "end" | "start" | "space-around" | "space-between"): boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    tag: string;
    justify: "center" | "end" | "start" | "space-around" | "space-between";
    align: "center" | "end" | "start" | "top" | "bottom" | "middle" | "stretch" | "baseline";
    gutter: number | import("./type").GutterObject | (number | import("./type").GutterObject)[];
}, {}>;
export default _default;
