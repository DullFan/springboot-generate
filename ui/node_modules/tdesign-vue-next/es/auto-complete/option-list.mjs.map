{"version":3,"file":"option-list.mjs","sources":["../../src/auto-complete/option-list.tsx"],"sourcesContent":["import { ref, computed, defineComponent, PropType, h, watch, onBeforeUnmount } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport HighlightOption from './highlight-option';\nimport { CommonClassNameType } from '../hooks/useCommonClassName';\nimport { AutoCompleteOptionObj, TdAutoCompleteProps } from './type';\nimport log from '../_common/js/log';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { on, off } from '../utils/dom';\nimport isString from 'lodash/isString';\nimport escapeRegExp from 'lodash/escapeRegExp';\nimport { ARROW_UP_REG, ARROW_DOWN_REG, ENTER_REG } from '../_common/js/common';\n\nexport default defineComponent({\n  name: 'AutoCompleteOptionList',\n\n  props: {\n    sizeClassNames: Object as PropType<CommonClassNameType['sizeClassNames']>,\n    value: String,\n    size: String as PropType<TdAutoCompleteProps['size']>,\n    options: Array as PropType<TdAutoCompleteProps['options']>,\n    popupVisible: Boolean,\n    highlightKeyword: Boolean,\n    filterable: Boolean,\n    filter: Function as PropType<TdAutoCompleteProps['filter']>,\n  },\n\n  emits: ['select'],\n\n  setup(props, { emit, slots, expose }) {\n    const active = ref('');\n    const classPrefix = usePrefixClass();\n\n    const classes = computed(() => `${classPrefix.value}-select__list`);\n    const optionClasses = computed(() => [\n      `${classPrefix.value}-select-option`,\n      {\n        [props.sizeClassNames[props.size]]: props.size,\n      },\n    ]);\n\n    // 整理数据格式\n    const tOptions = computed<AutoCompleteOptionObj[]>(() => {\n      let options = (props.options || []).map((item) => {\n        let option: AutoCompleteOptionObj = {};\n        if (isString(item)) {\n          option = { text: item, label: item };\n        } else {\n          if (item.text && !isString(item.text)) {\n            log.warn('AutoComplete', '`text` must be a string.');\n          }\n          if (!item.text) {\n            if (isString(item.label)) {\n              option = { ...item, text: item.label };\n            } else {\n              log.warn('AutoComplete', 'one of `label` and `text` must be a existed string.');\n            }\n          } else {\n            option = item;\n          }\n        }\n        return option;\n      });\n      // 自定义过滤规则\n      if (props.filter) {\n        options = options.filter((option) => props.filter(props.value, option));\n      } else if (props.filterable) {\n        // 默认过滤规则\n        const regExp = new RegExp(escapeRegExp(props.value), 'i');\n        options = options.filter((item) => regExp.test(item.text));\n      }\n      return options;\n    });\n\n    const onOptionClick = (e: MouseEvent) => {\n      let liNode = e.target as HTMLElement;\n      while (liNode && liNode.tagName !== 'LI') {\n        liNode = liNode.parentNode as HTMLElement;\n      }\n      const keyword = liNode.getAttribute('title');\n      active.value = keyword;\n      emit('select', keyword, { e });\n    };\n\n    // 键盘事件，上下选择\n    const onKeyInnerPress = (e: KeyboardEvent) => {\n      if (ARROW_UP_REG.test(e.code) || ARROW_UP_REG.test(e.key)) {\n        const index = tOptions.value.findIndex((item) => item.text === active.value);\n        const newIndex = index - 1 < 0 ? tOptions.value.length - 1 : index - 1;\n        active.value = tOptions.value[newIndex]?.text;\n      } else if (ARROW_DOWN_REG.test(e.code) || ARROW_DOWN_REG.test(e.key)) {\n        const index = tOptions.value.findIndex((item) => item.text === active.value);\n        const newIndex = index + 1 >= tOptions.value.length ? 0 : index + 1;\n        active.value = tOptions.value[newIndex]?.text;\n      } else if (ENTER_REG.test(e.code) || ENTER_REG.test(e.key)) {\n        if (active.value) {\n          emit('select', active.value, { e });\n        }\n      }\n    };\n\n    const addKeyboardListener = () => {\n      on(document, 'keydown', onKeyInnerPress);\n    };\n\n    const removeKeyboardListener = () => {\n      off(document, 'keydown', onKeyInnerPress);\n    };\n\n    expose({\n      addKeyboardListener,\n      removeKeyboardListener,\n    });\n\n    watch(\n      () => props.popupVisible,\n      () => {\n        if (props.popupVisible) {\n          addKeyboardListener();\n        } else {\n          removeKeyboardListener();\n        }\n      },\n      { immediate: true },\n    );\n\n    watch(\n      () => props.value,\n      () => {\n        if (!props.value) {\n          active.value = '';\n        }\n      },\n      { immediate: true },\n    );\n\n    onBeforeUnmount(() => {\n      removeKeyboardListener();\n    });\n\n    return () => {\n      if (!tOptions.value.length) return null;\n      return (\n        <ul class={classes.value}>\n          {tOptions.value.map((item) => {\n            const cls = [...optionClasses.value];\n            if (item.text === active.value) {\n              cls.push(`${classPrefix.value}-select-option--hover`);\n            }\n            let labelNode: any = item.label;\n            if (isFunction(item.label)) {\n              labelNode = item.label(h);\n            } else if (slots.option) {\n              labelNode = slots.option?.({ option: item });\n            }\n            const content = labelNode || item.text;\n            return (\n              <li key={item.text} class={cls} title={item.text} onClick={onOptionClick}>\n                {isString(content) && props.highlightKeyword ? (\n                  <HighlightOption content={content} keyword={props.value} />\n                ) : (\n                  content\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","sizeClassNames","Object","value","String","size","options","Array","popupVisible","Boolean","highlightKeyword","filterable","filter","Function","emits","setup","_ref","emit","slots","expose","active","ref","classPrefix","usePrefixClass","classes","computed","concat","optionClasses","_defineProperty","tOptions","map","item","option","isString","text","label","log","warn","_objectSpread","regExp","RegExp","escapeRegExp","test","onOptionClick","e","liNode","target","tagName","parentNode","keyword","getAttribute","onKeyInnerPress","ARROW_UP_REG","code","key","_tOptions$value$newIn","index","findIndex","newIndex","length","ARROW_DOWN_REG","_tOptions$value$_newI","ENTER_REG","addKeyboardListener","on","document","removeKeyboardListener","off","watch","immediate","onBeforeUnmount","_createVNode","cls","_toConsumableArray","push","labelNode","isFunction","h","_slots$option","call","content","HighlightOption"],"mappings":"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"}